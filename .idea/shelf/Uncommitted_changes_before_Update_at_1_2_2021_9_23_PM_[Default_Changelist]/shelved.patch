Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM__Default_Changelist_.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM__Default_Changelist_.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM_[Default_Changelist]" date="1608988506804" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/26/2020 3:14 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM__Default_Changelist_.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM__Default_Changelist_.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM_[Default_Changelist]" date="1608987942091" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/26/2020 3:05 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM_[Default_Changelist]/shelved.patch	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_14_PM_[Default_Changelist]/shelved.patch	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
@@ -1,1287 +0,0 @@
-Index: app/src/main/res/layout/activity_login.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:background=\"@drawable/login_background\">\r\n    android:visibility=\"visible\"\r\n    tools:context=\".LoginActivity\">\r\n\r\n    <!-- Draw your view whatever you want to draw -->\r\n    <FrameLayout\r\n        android:id=\"@+id/fragment_container\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" />\r\n\r\n    <!--Screen-->\r\n    <RelativeLayout\r\n        android:id=\"@+id/ActivityLoginLayout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginLeft=\"40dp\"\r\n        android:layout_marginRight=\"40dp\"\r\n        android:padding=\"10dp\">\r\n\r\n        <!--E-mail+Password+Buttons-->\r\n        <RelativeLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:visibility=\"visible\">\r\n\r\n            <!--E-mail+Password-->\r\n            <LinearLayout\r\n                android:id=\"@+id/l_linlay1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <!--E-mail-->\r\n                <EditText\r\n                    android:id=\"@+id/l_email\"\r\n                    android:text=\"juhu@gmail.com\"\r\n                    android:maxLines=\"1\"\r\n                    android:imeOptions=\"actionNext\"\r\n                    android:nextFocusDown=\"@+id/l_login_button\"\r\n                    android:inputType=\"text\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@drawable/email_bg\"\r\n                    android:drawableLeft=\"@drawable/member_ic\"\r\n                    android:drawablePadding=\"10dip\"\r\n                    android:ems=\"10\"\r\n                    android:fontFamily=\"@font/roboto_thin\"\r\n                    android:layout_marginBottom=\"20dp\"\r\n                    android:hint=\"e-mail\"\r\n                    android:padding=\"15dp\"\r\n                    android:textColorHint=\"#000000\"\r\n                    android:singleLine=\"true\"/>\r\n\r\n                <!--Password-->\r\n                <EditText\r\n                    android:text=\"123456\"\r\n                    android:id=\"@+id/l_password\"\r\n                    android:maxLines=\"1\"\r\n                    android:imeOptions=\"actionNext\"\r\n                    android:nextFocusDown=\"@+id/l_signup_button\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@drawable/email_bg\"\r\n                    android:drawableLeft=\"@drawable/lock_ic\"\r\n                    android:drawablePadding=\"10dip\"\r\n                    android:ems=\"10\"\r\n                    android:fontFamily=\"@font/roboto_thin\"\r\n                    android:hint=\"password\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:padding=\"15dp\"\r\n                    android:textColorHint=\"#000000\"\r\n                    android:textSize=\"18sp\"\r\n                    android:singleLine=\"true\"/>\r\n\r\n            </LinearLayout>\r\n\r\n\r\n            <!--Forgot your password button-->\r\n            <Button\r\n                android:id=\"@+id/l_forgot_password\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_below=\"@id/l_linlay1\"\r\n                android:background=\"@color/transparent\"\r\n                android:text=\"Forgot your password?\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#FFFFFF\"\r\n                android:textSize=\"14sp\" />\r\n\r\n            <!--Log In button-->\r\n            <Button\r\n                android:id=\"@+id/l_login_button\"\r\n                android:layout_width=\"160dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@id/l_linlay1\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginTop=\"60dp\"\r\n                android:fontFamily=\"sans-serif-medium\"\r\n                android:background=\"@drawable/login_button\"\r\n                android:radius=\"60dp\"\r\n                android:text=\"Log In\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#92129D\"\r\n                android:textSize=\"24sp\" />\r\n\r\n            <!--Don’t have an account? Create Button-->\r\n            <Button\r\n                android:id=\"@+id/l_register_button\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_below=\"@id/l_login_button\"\r\n                android:background=\"@color/transparent\"\r\n                android:text=\"Don’t have an account? Create\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#FFFFFF\"\r\n                android:textSize=\"14sp\"  />\r\n\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_login.xml	(revision 6fd957fe4de0d2bcc4e3eb811158b744a02e2cc7)
-+++ app/src/main/res/layout/activity_login.xml	(date 1608901052576)
-@@ -41,7 +41,7 @@
-                 <!--E-mail-->
-                 <EditText
-                     android:id="@+id/l_email"
--                    android:text="juhu@gmail.com"
-+                    android:text="demenyador@gmail.com"
-                     android:maxLines="1"
-                     android:imeOptions="actionNext"
-                     android:nextFocusDown="@+id/l_login_button"
-Index: app/src/main/java/com/example/pabs/EventActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.SearchView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.EventRecyclerViewAdapter;\r\nimport com.example.pabs.Fragments.CalendarFragment;\r\nimport com.example.pabs.Fragments.CreateEventFragment;\r\nimport com.example.pabs.Models.Event;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * Main screen, handles more fragments, events, groups\r\n */\r\n\r\npublic class EventActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    //UI\r\n    private ImageView create_event_img_btn;\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    //events\r\n    private List<Event> lstEvent;\r\n    private List<Event> lstEventCopy;\r\n\r\n    //drawer\r\n    private DrawerLayout drawer = null;\r\n    private NavigationView navigationView = null;\r\n\r\n    //\r\n    private SearchView sw;\r\n    private EventRecyclerViewAdapter myAdapter;\r\n\r\n    /**\r\n     * On create\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_event);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseEvents;\r\n        databaseEvents = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n        databaseEvents.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (DataSnapshot event : snapshot.getChildren()) {\r\n                    //Loop 1 to go through all child nodes of events\r\n                    String temp = event.child(\"event_name\").getValue().toString();\r\n\r\n                    Uri myUri = null;\r\n                    String UriStr = null;\r\n\r\n                    //if the event has a thumbnail, get Uri\r\n                    if (event.child(\"thumbnail\").getValue() != null) {\r\n                        UriStr = event.child(\"thumbnail\").getValue().toString();\r\n                        myUri = Uri.parse(UriStr);\r\n                    }\r\n\r\n                    //get no image Uri\r\n                    Uri testUri = Uri.parse(\"https://firebasestorage.googleapis.com/v0/b/pabs-fa777.appspot.com/o/Images%2FNo_image_3x4.svg.png?alt=media&token=1a73a7ae-0447-4827-87c9-9ed1bb463351\");\r\n\r\n                    //Create temporary Event\r\n                    Event tempEv;\r\n\r\n                    //if Event has no thumbnail\r\n                    if (UriStr == null) {\r\n                        //Give the event, the no image thumbnail\r\n                        tempEv = new Event();\r\n                        tempEv.setTitle(temp);\r\n                        tempEv.setThumbnail(testUri);\r\n                    }\r\n                    //if Event has thumbnail\r\n                    else {\r\n                        //Set thumbnail of event\r\n                        tempEv = new Event();\r\n                        tempEv.setTitle(temp);\r\n                        tempEv.setThumbnail(myUri);\r\n                    }\r\n\r\n                    //add events to array\r\n                    addToEventsArray(tempEv);\r\n                }\r\n\r\n                //Set and show events on main screen\r\n                setEvents();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        //nav view and drawer\r\n        navigationView = findViewById(R.id.nav_view);\r\n        drawer = findViewById(R.id.drawer_layout);\r\n\r\n        //handle navigation drawer open/close with toggle\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, null, R.string.navigation_drawer_open, R.string.navigation_drawer_close) {\r\n            /**\r\n             * Called when a drawer has settled in a completely closed state.\r\n             */\r\n            public void onDrawerClosed(View view) {\r\n                super.onDrawerClosed(view);\r\n                for (int i = 0; i < navigationView.getMenu().size(); ++i)\r\n                    navigationView.getMenu().getItem(i).setChecked(false);\r\n            }\r\n\r\n            /**\r\n             * Called when a drawer has settled in a completely open state.\r\n             */\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //add toggle to drawer\r\n        drawer.addDrawerListener(toggle);\r\n\r\n        //sync toggle\r\n        toggle.syncState();\r\n\r\n        // Write a string to database when this client loses connection\r\n        reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n\r\n        DatabaseReference connectedRef = FirebaseDatabase.getInstance().getReference(\".info/connected\");\r\n        connectedRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot snapshot) {\r\n                boolean connected = snapshot.getValue(Boolean.class);\r\n                if (connected) {\r\n                    //user is connected\r\n                } else {\r\n                    //user disconnected\r\n                    reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n                    openLoginActivity();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError error) {\r\n                System.err.println(\"Listener was cancelled\");\r\n            }\r\n        });\r\n\r\n        //create event button\r\n        create_event_img_btn = findViewById(R.id.a_e_create_event_button);\r\n        create_event_img_btn.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent motionEvent) {\r\n                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n                    openCreateEventFragment();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        //\r\n\r\n\r\n        //\r\n        sw = findViewById(R.id.e_search_bar);\r\n        sw.setQueryHint(\"Search event name...\");\r\n\r\n        sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                myAdapter.filter(query);\r\n                hideKeyboard(EventActivity.this);\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                myAdapter.filter(newText);\r\n                return true;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public static void hideKeyboard(Activity activity) {\r\n        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n        //Find the currently focused view, so we can grab the correct window token from it.\r\n        View view = activity.getCurrentFocus();\r\n        //If no view currently has focus, create a new one, just so we can grab a window token from it\r\n        if (view == null) {\r\n            view = new View(activity);\r\n        }\r\n        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n    }\r\n\r\n    private void openLoginActivity(){\r\n        Intent intent = new Intent(this, LoginActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Add to events inside DataChanged method so we don't lose the results\r\n     */\r\n    public void addToEventsArray(Event tempEv){\r\n        lstEvent.add(tempEv);\r\n    }\r\n\r\n    /**\r\n     * Clear events inside DataChanged method\r\n     */\r\n    public void clearEvents(){\r\n        lstEvent.clear();\r\n    }\r\n\r\n    /**\r\n     * Set events inside DataChanged method\r\n     */\r\n    public void setEvents(){\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);\r\n        //create Adapter with lstEvent in this context\r\n        myAdapter = new EventRecyclerViewAdapter(this, lstEvent, getSupportFragmentManager(), uID);\r\n        //separate the Recyclerview to 3 columns\r\n        myRv.setLayoutManager(new GridLayoutManager(this, 3));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myAdapter);\r\n    }\r\n\r\n    /**\r\n     * Called on selecting item from navigation list\r\n     */\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.nav_events:\r\n                for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {\r\n                    getSupportFragmentManager().popBackStack();\r\n                }\r\n                Toast.makeText(this, \"nav_events\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_calendar:\r\n                openCalendarFragment();\r\n                Toast.makeText(this, \"nav_calendar\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_groups:\r\n                Toast.makeText(this, \"nav_groups\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_profile:\r\n                Toast.makeText(this, \"nav_profile\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_settings:\r\n                Toast.makeText(this, \"nav_settings\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_logout:\r\n                Toast.makeText(this, \"nav_logout\", Toast.LENGTH_SHORT).show();\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n                break;\r\n\r\n            default:\r\n                Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n\r\n        //close drawer on item clicked\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * open create event fragment\r\n     */\r\n    private void openCreateEventFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CreateEventFragment(uID))\r\n                .addToBackStack(\"CreateEventFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * open calendar event fragment\r\n     */\r\n    private void openCalendarFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CalendarFragment())\r\n                .addToBackStack(\"CalendarFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * Called when the activity is exiting\r\n     */\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        lstEvent.clear();\r\n        reference.child(uID).child(\"online\").setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * Called when the activity started\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/EventActivity.java	(revision 6fd957fe4de0d2bcc4e3eb811158b744a02e2cc7)
-+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1608901052911)
-@@ -26,6 +26,7 @@
- import com.example.pabs.Adapters.EventRecyclerViewAdapter;
- import com.example.pabs.Fragments.CalendarFragment;
- import com.example.pabs.Fragments.CreateEventFragment;
-+import com.example.pabs.Fragments.MyToDoFragment;
- import com.example.pabs.Models.Event;
- import com.google.android.material.navigation.NavigationView;
- import com.google.firebase.database.DataSnapshot;
-@@ -288,6 +289,11 @@
-                 openCalendarFragment();
-                 Toast.makeText(this, "nav_calendar", Toast.LENGTH_SHORT).show();
-                 break;
-+
-+            case R.id.nav_todo:
-+                openMyToDoFragment();
-+                Toast.makeText(this, "nav_todo", Toast.LENGTH_SHORT).show();
-+                break;
- 
-             case R.id.nav_groups:
-                 Toast.makeText(this, "nav_groups", Toast.LENGTH_SHORT).show();
-@@ -339,6 +345,17 @@
-                 .addToBackStack("CalendarFragment")
-                 .commit();
-     }
-+
-+    /**
-+     * open MyToDo event fragment
-+     */
-+    private void openMyToDoFragment(){
-+        getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new MyToDoFragment())
-+                .addToBackStack("MyToDoFragment")
-+                .commit();
-+    }
- 
-     /**
-      * Called when the activity is exiting
-Index: app/src/main/java/com/example/pabs/Adapters/TaskRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/TaskRecyclerViewAdapter.java	(date 1608929492538)
-+++ app/src/main/java/com/example/pabs/Adapters/TaskRecyclerViewAdapter.java	(date 1608929492538)
-@@ -0,0 +1,135 @@
-+package com.example.pabs.Adapters;
-+
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.CheckBox;
-+import android.widget.CompoundButton;
-+import android.widget.RadioGroup;
-+import android.widget.TextView;
-+
-+import androidx.annotation.NonNull;
-+import androidx.recyclerview.widget.RecyclerView;
-+
-+import com.example.pabs.HelperClass.TaskList;
-+import com.example.pabs.R;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.ValueEventListener;
-+
-+import java.util.List;
-+
-+public class TaskRecyclerViewAdapter extends RecyclerView.Adapter<TaskRecyclerViewAdapter.MyTaskViewHolder> {
-+
-+    private List<TaskList> taskList;
-+
-+    // Constuctor
-+    TaskRecyclerViewAdapter(List<TaskList> taskList)
-+    {
-+        this.taskList = taskList;
-+    }
-+
-+    @NonNull
-+    @Override
-+    public MyTaskViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i)
-+    {
-+
-+        // Here we inflate the corresponding
-+        // layout of the child item
-+        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.mytodo_task_row, viewGroup, false);
-+
-+        return new MyTaskViewHolder(view);
-+    }
-+
-+    @Override
-+    public void onBindViewHolder(@NonNull final MyTaskViewHolder childViewHolder, int position)
-+    {
-+        final DatabaseReference referenceDB = FirebaseDatabase.getInstance().getReference().child("TODO");
-+        // Create an instance of the ChildItem
-+        // class for the given position
-+        TaskList childItem = taskList.get(position);
-+
-+        // For the created instance, set title.
-+        // No need to set the image for
-+        // the ImageViews because we have
-+        // provided the source for the images
-+        // in the layout file itself
-+        childViewHolder.taskTitle.setText(childItem.getTaskTitle());
-+
-+        Log.d("Espania", "onBindViewHolder: Ifen kivül vagyok! " + childViewHolder.taskCB);
-+        if((taskList.get(childViewHolder.getAdapterPosition()).getTaskCB())){
-+            childViewHolder.taskCB.setChecked(true);
-+            Log.d("Espania", "onBindViewHolder: Ifben vagyok! " + childViewHolder.taskCB);
-+        }
-+        else{
-+            childViewHolder.taskCB.setChecked(false);
-+        }
-+
-+        childViewHolder.taskCB.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-+            @Override
-+            public void onCheckedChanged(CompoundButton buttonView, final boolean isChecked) {
-+                //set your object's last status
-+                taskList.get(childViewHolder.getAdapterPosition()).setTaskCB(isChecked);
-+                referenceDB.addListenerForSingleValueEvent(new ValueEventListener() {
-+                    @Override
-+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                        for(DataSnapshot todo : snapshot.getChildren()){
-+                            if(todo.getKey().equals(taskList.get(childViewHolder.getAdapterPosition()).getReferenceTo())){
-+                                todo.getRef().child("taskList").addListenerForSingleValueEvent(new ValueEventListener() {
-+                                    @Override
-+                                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                                        for(DataSnapshot task : snapshot.getChildren()){
-+                                            if(task.child("taskTitle").getValue().toString().equals(taskList.get(childViewHolder.getAdapterPosition()).getTaskTitle())){
-+                                                task.child("taskCB").getRef().setValue(isChecked);
-+                                            }
-+                                        }
-+                                    }
-+
-+                                    @Override
-+                                    public void onCancelled(@NonNull DatabaseError error) {
-+
-+                                    }
-+                                });
-+                            }
-+                        }
-+                    }
-+
-+                    @Override
-+                    public void onCancelled(@NonNull DatabaseError error) {
-+
-+                    }
-+                });
-+            }
-+        });
-+    }
-+
-+    @Override
-+    public int getItemCount()
-+    {
-+        // This method returns the number
-+        // of items we have added
-+        // in the ChildItemList
-+        // i.e. the number of instances
-+        // of the ChildItemList
-+        // that have been created
-+        return taskList.size();
-+    }
-+
-+    // This class is to initialize
-+    // the Views present
-+    // in the child RecyclerView
-+    class MyTaskViewHolder extends RecyclerView.ViewHolder {
-+        TextView taskTitle;
-+        CheckBox taskCB;
-+
-+        MyTaskViewHolder(View itemView)
-+        {
-+            super(itemView);
-+            taskTitle = itemView.findViewById(R.id.task_task);
-+            taskCB = itemView.findViewById(R.id.task_cb);
-+        }
-+    }
-+}
-Index: app/src/main/java/com/example/pabs/HelperClass/ToDoList.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/HelperClass/ToDoList.java	(date 1608932017336)
-+++ app/src/main/java/com/example/pabs/HelperClass/ToDoList.java	(date 1608932017336)
-@@ -0,0 +1,55 @@
-+package com.example.pabs.HelperClass;
-+
-+import java.util.List;
-+
-+public class ToDoList {
-+    private String ID;
-+    private String owner;
-+    private String toDoListTitle;
-+    private List<TaskList> taskList;
-+
-+    public ToDoList() {}
-+
-+    public ToDoList(String toDoListTitle, List<TaskList> taskList, String owner, String id) {
-+        this.toDoListTitle = toDoListTitle;
-+        this.taskList = taskList;
-+        this.owner = owner;
-+        this.ID = id;
-+    }
-+
-+    public String getToDoListTitle() {
-+        return toDoListTitle;
-+    }
-+
-+    public void setToDoListTitle(String toDoListTitle) {
-+        this.toDoListTitle = toDoListTitle;
-+    }
-+
-+    public List<TaskList> getTaskList() {
-+        return taskList;
-+    }
-+
-+    public void setTaskList(List<TaskList> taskList) {
-+        this.taskList = taskList;
-+    }
-+
-+    public void addToTaskList(TaskList task){
-+        this.taskList.add(task);
-+    }
-+
-+    public String getOwner(){
-+        return this.owner;
-+    }
-+
-+    public void setOwner(String owner){
-+        this.owner = owner;
-+    }
-+
-+    public String getID() {
-+        return ID;
-+    }
-+
-+    public void setID(String ID) {
-+        this.ID = ID;
-+    }
-+}
-Index: app/src/main/res/layout/fragment_add_task_dialog.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_add_task_dialog.xml	(date 1608936130131)
-+++ app/src/main/res/layout/fragment_add_task_dialog.xml	(date 1608936130131)
-@@ -0,0 +1,65 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<!--Container for nickname fragment-->
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    android:animateLayoutChanges="true"
-+    android:visibility="visible"
-+    tools:context=".Fragments.AddTaskDialogFragment"
-+    android:padding="16dp">
-+
-+    <!--Container for nickname and button-->
-+    <RelativeLayout
-+        android:layout_centerInParent="true"
-+        android:background="@drawable/login_button"
-+        android:backgroundTint="@color/chinese_silver"
-+        android:layout_height="125dp"
-+        android:layout_width="match_parent">
-+
-+        <!--Nickname edit text-->
-+        <EditText
-+            android:id="@+id/d_at_text"
-+            android:layout_width="300dp"
-+            android:layout_height="50dp"
-+            android:layout_centerInParent="true"
-+            android:layout_alignParentTop="true"
-+            android:layout_marginTop="5dp"
-+            android:background="@drawable/email_bg"
-+            android:ems="10"
-+            android:fontFamily="@font/roboto_thin"
-+            android:hint="Task"
-+            android:inputType="text"
-+            android:maxLines="1"
-+            android:padding="15dp"
-+            android:textColorHint="#000000"/>
-+
-+        <!--Continue button-->
-+        <Button
-+            android:id="@+id/d_at_confirm_btn"
-+            android:layout_width="100dp"
-+            android:layout_height="35dp"
-+            android:layout_below="@id/d_at_text"
-+            android:layout_alignParentRight="true"
-+            android:layout_marginTop="25dp"
-+            android:layout_marginRight="40dp"
-+            android:background="@drawable/login_button"
-+            android:text="Confirm"
-+            android:clickable="true"/>
-+
-+        <Button
-+            android:id="@+id/d_at_cancel_btn"
-+            android:layout_width="100dp"
-+            android:layout_height="35dp"
-+            android:layout_below="@id/d_at_text"
-+            android:layout_alignParentLeft="true"
-+            android:layout_marginTop="25dp"
-+            android:layout_marginLeft="40dp"
-+            android:background="@drawable/login_button"
-+            android:text="Cancel"
-+            android:clickable="true"/>
-+    </RelativeLayout>
-+
-+
-+</RelativeLayout>
-\ No newline at end of file
-Index: app/src/main/res/layout/mytodo_task_row.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/mytodo_task_row.xml	(date 1608921976065)
-+++ app/src/main/res/layout/mytodo_task_row.xml	(date 1608921976065)
-@@ -0,0 +1,26 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    android:background="@color/chinese_silver"
-+    android:weightSum="2"
-+    xmlns:app="http://schemas.android.com/apk/res-auto">
-+    <TextView
-+        android:id="@+id/task_task"
-+        android:layout_width="0dp"
-+        android:layout_weight="1.82"
-+        android:layout_height="wrap_content"
-+        android:layout_marginLeft="10dp"
-+        android:text="HaHa"
-+        android:textSize="32dp" />
-+    <CheckBox
-+        android:id="@+id/task_cb"
-+        android:layout_width="0dp"
-+        android:layout_weight="0.18"
-+        android:layout_height="wrap_content"
-+        android:background="@color/black"
-+        android:layout_marginRight="8dp"
-+        android:layout_marginLeft="8dp"
-+        android:layout_gravity="center" />
-+
-+</LinearLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/HelperClass/TaskList.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/HelperClass/TaskList.java	(date 1608925000697)
-+++ app/src/main/java/com/example/pabs/HelperClass/TaskList.java	(date 1608925000697)
-@@ -0,0 +1,54 @@
-+package com.example.pabs.HelperClass;
-+
-+import android.widget.Button;
-+import android.widget.CheckBox;
-+
-+import com.google.firebase.database.DatabaseReference;
-+
-+public class TaskList {
-+    private String taskTitle;
-+    private boolean taskCB;
-+    private String belongTo;
-+    private String ToDoID;
-+
-+    public TaskList(){}
-+
-+    public TaskList(String taskTitle,String belongTO,String reference) {
-+        this.taskTitle = taskTitle;
-+        this.taskCB = false;
-+        this.belongTo = belongTO;
-+        this.ToDoID = reference;
-+    }
-+
-+    public String getTaskTitle() {
-+        return taskTitle;
-+    }
-+
-+    public boolean getTaskCB(){
-+        return taskCB;
-+    }
-+
-+    public void setTaskTitle(String taskTitle) {
-+        this.taskTitle = taskTitle;
-+    }
-+
-+    public void setTaskCB(boolean taskcb){
-+        this.taskCB = taskcb;
-+    }
-+
-+    public String getBelongTo() {
-+        return belongTo;
-+    }
-+
-+    public void setBelongTo(String belongTo) {
-+        this.belongTo = belongTo;
-+    }
-+
-+    public String getReferenceTo() {
-+        return ToDoID;
-+    }
-+
-+    public void setReferenceTo(String referenceto) {
-+        this.ToDoID = referenceto;
-+    }
-+}
-Index: app/src/main/java/com/example/pabs/Fragments/CalendarFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Adapters.CalendarRecyclerViewAdapter;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.Models.Event;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.text.DateFormatSymbols;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.StringTokenizer;\r\n\r\nimport sun.bob.mcalendarview.MarkStyle;\r\nimport sun.bob.mcalendarview.listeners.OnDateClickListener;\r\nimport sun.bob.mcalendarview.listeners.OnMonthChangeListener;\r\nimport sun.bob.mcalendarview.vo.DateData;\r\n\r\npublic class CalendarFragment extends Fragment {\r\n\r\n    //calendar\r\n    sun.bob.mcalendarview.views.ExpCalendarView customCalendar;\r\n\r\n    //TextViews\r\n    TextView curr_month, currDate;\r\n\r\n    Context mContext;\r\n    //List<DatabaseEvent> lstDatabaseEvent;\r\n    //events\r\n    List<DatabaseEvent> lstEvent;\r\n    private View listView;\r\n    //firebase\r\n    private String uID;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        //get uid of logged in user\r\n        uID = getActivity().getIntent().getStringExtra(\"USER\");\r\n\r\n        // Inflate the layout for this fragment\r\n        View calendarView = inflater.inflate(R.layout.fragment_calendar, container, false);\r\n\r\n        listView = getActivity().findViewById(R.id.activity_event_layout);\r\n        final RecyclerView rvCalendarfragment = (RecyclerView) calendarView.findViewById(R.id.calendar_rec_view);\r\n\r\n        //setting the current date in CalendarView\r\n        setCurrDateInCalendarFragment(calendarView);\r\n\r\n        //getting the custom calendar view object\r\n        customCalendar = calendarView.findViewById(R.id.calendar_calendar);\r\n\r\n        //setting the current month and year in CalendarView\r\n        curr_month = calendarView.findViewById(R.id.calendar_curr_month);\r\n        int cmonth = Calendar.getInstance().get(Calendar.MONTH)+1;\r\n        int cyear = Calendar.getInstance().get(Calendar.YEAR);\r\n        setCurrMonthandYear(curr_month, cmonth, cyear);\r\n\r\n        customCalendar.setOnMonthChangeListener(new OnMonthChangeListener() {\r\n            @Override\r\n            public void onMonthChange(int year, int month) {\r\n                setCurrMonthandYear(curr_month, month, year);\r\n            }\r\n        });\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseEvents;\r\n        databaseEvents = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n        //databaseEvents.addValueEventListener(new ValueEventListener() {\r\n        databaseEvents.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (final DataSnapshot event : snapshot.getChildren()) {\r\n                    final DatabaseEvent tempEv = new DatabaseEvent();\r\n\r\n                    //Loop 1 to go through all child nodes of events\r\n\r\n\r\n                    final List<String> joined_users =  new ArrayList<>();\r\n                    event.getRef().child(\"joined_members\").addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                            for (DataSnapshot users : snapshot.getChildren()) {\r\n                                //Loop 1 to go through all child nodes of joined members\r\n                                joined_users.add(users.getValue().toString());\r\n                            }\r\n\r\n\r\n                            final Handler handler = new Handler();\r\n                            final int delay = 1000; //milliseconds\r\n\r\n                            handler.postDelayed(new Runnable(){\r\n                            public void run(){\r\n                                if(!joined_users.isEmpty())//checking if the data is loaded or not\r\n                                {\r\n\r\n                                String e_name = event.child(\"event_name\").getValue().toString();\r\n                                tempEv.setEvent_name(e_name);\r\n                                String event_startdate = event.child(\"start_date\").getValue().toString();\r\n                                tempEv.setStart_date(event_startdate);\r\n\r\n                                tempEv.setJoined_members(joined_users);\r\n\r\n\r\n                                //pushing the temporary event object into an arraylist\r\n                                    lstEvent.add(tempEv);\r\n\r\n                                    for(DatabaseEvent i : lstEvent){\r\n                                        for(String j: i.getJoined_members()){\r\n                                            if(uID.equals(j)){\r\n                                                //marking the Dates on which we have Events\r\n                                                DateData temp = convertDate(i.getStart_date());\r\n                                                customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR, Color.BLUE));\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        if(uID.equals(i.getOwner_id())){\r\n                                            DateData temp = convertDate(i.getStart_date());\r\n                                            customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR,Color.CYAN));\r\n                                        }\r\n                                    }\r\n\r\n                                    final List<DatabaseEvent> onDateEvents = new ArrayList<>();\r\n                                    customCalendar.setOnDateClickListener(new OnDateClickListener() {\r\n                                        @Override\r\n                                        public void onDateClick(View view, DateData clickedDate) {\r\n                                            Log.d(\"DateClicked\", \"onDateClick: \" + clickedDate);\r\n                                            for(DatabaseEvent i : lstEvent){\r\n                                                if(convertDate(i.getStart_date()).equals(clickedDate)){\r\n                                                    onDateEvents.add(i);\r\n                                                }\r\n                                            }\r\n                                            CalendarRecyclerViewAdapter adapter = new CalendarRecyclerViewAdapter(onDateEvents);\r\n                                            rvCalendarfragment.setAdapter(adapter);\r\n                                            rvCalendarfragment.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else\r\n                                    handler.postDelayed(this, delay);\r\n                            }\r\n                            }, delay);\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        return calendarView;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        listView.setVisibility(View.GONE);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        listView.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void setCurrDateInCalendarFragment(View calendarView){\r\n        Date d = Calendar.getInstance().getTime();\r\n        SimpleDateFormat df = new SimpleDateFormat(\"dd/MM/yyyy\", Locale.getDefault());\r\n        String curr_date = df.format(d);\r\n        currDate = calendarView.findViewById(R.id.calendar_curr_date);\r\n        currDate.setText(curr_date);\r\n    }\r\n\r\n    private void setCurrMonthandYear(TextView curr_month, int month, int year){\r\n        curr_month.setText(getMonth(month) + \" \" + year);\r\n    }\r\n\r\n    private DateData convertDate(String date){\r\n        StringTokenizer token = new StringTokenizer(date,\"/\");\r\n        int nap=0,honap=0,ev=0;\r\n        int cnt = 0;\r\n        while(token.hasMoreTokens()){\r\n            if(cnt == 0) {\r\n                nap = Integer.parseInt(token.nextToken());\r\n                cnt++;\r\n            }\r\n            else if(cnt == 1){\r\n                honap = Integer.parseInt(token.nextToken());\r\n                cnt++;\r\n            }\r\n            else if(cnt == 2){\r\n                ev = Integer.parseInt(token.nextToken());\r\n                cnt++;\r\n            }\r\n        }\r\n        DateData dateData = new DateData(ev,honap,nap);\r\n        return dateData;\r\n    }\r\n\r\n    public String getMonth(int month) {\r\n        return new DateFormatSymbols().getMonths()[month-1];\r\n    }\r\n\r\n    public void clearEvents(){\r\n        lstEvent.clear();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/CalendarFragment.java	(revision 6fd957fe4de0d2bcc4e3eb811158b744a02e2cc7)
-+++ app/src/main/java/com/example/pabs/Fragments/CalendarFragment.java	(date 1608904784395)
-@@ -100,7 +100,7 @@
-         databaseEvents = FirebaseDatabase.getInstance().getReference().child("EVENT");
- 
-         //databaseEvents.addValueEventListener(new ValueEventListener() {
--        databaseEvents.addValueEventListener(new ValueEventListener() {
-+        databaseEvents.addListenerForSingleValueEvent(new ValueEventListener() {
-             @Override
-             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                 clearEvents();
-@@ -151,7 +151,7 @@
-                                         }
-                                         if(uID.equals(i.getOwner_id())){
-                                             DateData temp = convertDate(i.getStart_date());
--                                            customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR,Color.CYAN));
-+                                            customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR, Color.BLUE));
-                                         }
-                                     }
- 
-@@ -160,6 +160,7 @@
-                                         @Override
-                                         public void onDateClick(View view, DateData clickedDate) {
-                                             Log.d("DateClicked", "onDateClick: " + clickedDate);
-+                                            onDateEvents.clear();
-                                             for(DatabaseEvent i : lstEvent){
-                                                 if(convertDate(i.getStart_date()).equals(clickedDate)){
-                                                     onDateEvents.add(i);
-Index: app/src/main/res/menu/drawer_menu.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--Menu part of the Navigation Drawer-->\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    tools:showIn=\"navigation_view\">\r\n\r\n    <!--Here we have a group of different items\r\n     to open different activities/fragments-->\r\n    <group android:checkableBehavior=\"single\">\r\n        <!--events-->\r\n        <item\r\n            android:id=\"@+id/nav_events\"\r\n            android:icon=\"@drawable/event_ic\"\r\n            android:title=\"Events\" />\r\n        <!--profile-->\r\n        <item\r\n            android:id=\"@+id/nav_profile\"\r\n            android:icon=\"@drawable/member_ic\"\r\n            android:title=\"Profile\" />\r\n        <!--Calendar-->\r\n        <item\r\n            android:id=\"@+id/nav_calendar\"\r\n            android:icon=\"@drawable/calendar_ic\"\r\n            android:title=\"Calendar\" />\r\n        <!--groups-->\r\n        <item\r\n            android:id=\"@+id/nav_groups\"\r\n            android:icon=\"@drawable/group_ic\"\r\n            android:title=\"Groups\" />\r\n        <!--MyToDo-->\r\n        <item\r\n            android:icon=\"@drawable/todo_ic\"\r\n            android:title=\"MyToDo\" />\r\n        <!--settings-->\r\n        <item\r\n            android:id=\"@+id/nav_settings\"\r\n            android:icon=\"@drawable/settings_ic\"\r\n            android:title=\"Settings\" />\r\n\r\n    </group>\r\n\r\n    <!--Group of items only for one execution-->\r\n    <item android:title=\"Logout\">\r\n        <menu>\r\n            <!--logout-->\r\n            <item\r\n                android:id=\"@+id/nav_logout\"\r\n                android:icon=\"@drawable/logout_ic\"\r\n                android:title=\"Logout\" />\r\n        </menu>\r\n    </item>\r\n\r\n\r\n\r\n</menu>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/menu/drawer_menu.xml	(revision 6fd957fe4de0d2bcc4e3eb811158b744a02e2cc7)
-+++ app/src/main/res/menu/drawer_menu.xml	(date 1608901052734)
-@@ -29,6 +29,7 @@
-             android:title="Groups" />
-         <!--MyToDo-->
-         <item
-+            android:id="@+id/nav_todo"
-             android:icon="@drawable/todo_ic"
-             android:title="MyToDo" />
-         <!--settings-->
-Index: app/src/main/java/com/example/pabs/Adapters/ToDoRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/ToDoRecyclerViewAdapter.java	(date 1608983346322)
-+++ app/src/main/java/com/example/pabs/Adapters/ToDoRecyclerViewAdapter.java	(date 1608983346322)
-@@ -0,0 +1,135 @@
-+package com.example.pabs.Adapters;
-+
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.Button;
-+import android.widget.TextView;
-+import android.widget.Toast;
-+
-+import androidx.annotation.NonNull;
-+import androidx.fragment.app.Fragment;
-+import androidx.recyclerview.widget.LinearLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
-+import com.example.pabs.HelperClass.ToDoList;
-+import com.example.pabs.R;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.ValueEventListener;
-+
-+import java.util.List;
-+
-+/**
-+ * Creates an array of card elements
-+ */
-+
-+public class ToDoRecyclerViewAdapter extends RecyclerView.Adapter<ToDoRecyclerViewAdapter.MyToDoViewHolder>{
-+
-+    private RecyclerView.RecycledViewPool viewPool = new RecyclerView.RecycledViewPool();
-+    private List<ToDoList> toDoList;
-+
-+    public ToDoRecyclerViewAdapter(List<ToDoList> toDoList) {
-+        this.toDoList = toDoList;
-+    }
-+
-+    @NonNull
-+    @Override
-+    public MyToDoViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i)
-+    {
-+        // Here we inflate the corresponding
-+        // layout of the parent item
-+        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.mytodo_list_row, viewGroup, false);
-+
-+        return new MyToDoViewHolder(view);
-+    }
-+
-+    @Override
-+    public void onBindViewHolder(@NonNull final MyToDoViewHolder parentViewHolder, int position)
-+    {
-+        //firebase
-+        final DatabaseReference referenceDB = FirebaseDatabase.getInstance().getReference().child("TODO");
-+
-+        // Create an instance of the ParentItem
-+        // class for the given position
-+        ToDoList todolist = toDoList.get(position);
-+
-+        // For the created instance,
-+        // get the title and set it
-+        // as the text for the TextView
-+        parentViewHolder.toDoListTitle.setText(todolist.getToDoListTitle());
-+        parentViewHolder.delete_btn.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View v) {
-+                referenceDB.addListenerForSingleValueEvent(new ValueEventListener() {
-+                    @Override
-+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                        int i=0;
-+                        for(DataSnapshot todo : snapshot.getChildren()){
-+                            if(i == parentViewHolder.getAdapterPosition()){
-+                               todo.getRef().child("taskList").removeValue();
-+                            }
-+                            ++i;
-+                        }
-+                    }
-+
-+                    @Override
-+                    public void onCancelled(@NonNull DatabaseError error) {
-+
-+                    }
-+                });
-+            }
-+        });
-+
-+        // Create a layout manager
-+        // to assign a layout
-+        // to the RecyclerView.
-+
-+        // Here we have assigned the layout
-+        // as LinearLayout with vertical orientation
-+        LinearLayoutManager layoutManager = new LinearLayoutManager(parentViewHolder.childRecyclerView.getContext(), LinearLayoutManager.VERTICAL, false);
-+
-+        // Since this is a nested layout, so
-+        // to define how many child items
-+        // should be prefetched when the
-+        // child RecyclerView is nested
-+        // inside the parent RecyclerView,
-+        // we use the following method
-+        layoutManager.setInitialPrefetchItemCount(todolist.getTaskList().size());
-+
-+        // Create an instance of the child
-+        // item view adapter and set its
-+        // adapter, layout manager and RecyclerViewPool
-+        TaskRecyclerViewAdapter childItemAdapter = new TaskRecyclerViewAdapter(todolist.getTaskList());
-+        parentViewHolder.childRecyclerView.setLayoutManager(layoutManager);
-+        parentViewHolder.childRecyclerView.setAdapter(childItemAdapter);
-+        parentViewHolder.childRecyclerView.setRecycledViewPool(viewPool);
-+    }
-+
-+    @Override
-+    public int getItemCount() {
-+        return toDoList.size();
-+    }
-+
-+    // This class is to initialize
-+    // the Views present in
-+    // the parent RecyclerView
-+    class MyToDoViewHolder extends RecyclerView.ViewHolder {
-+
-+        private TextView toDoListTitle;
-+        private Button delete_btn;
-+        private RecyclerView childRecyclerView;
-+
-+        MyToDoViewHolder(final View itemView)
-+        {
-+            super(itemView);
-+
-+            toDoListTitle = itemView.findViewById(R.id.belong);
-+            delete_btn = itemView.findViewById(R.id.todo_delete_btn);
-+            childRecyclerView = itemView.findViewById(R.id.task_list);
-+        }
-+    }
-+}
-Index: app/src/main/res/layout/calendarfragment_list_row.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"horizontal\"\r\n    android:background=\"@drawable/rect\"\r\n    android:backgroundTint=\"#C4C4C4\">\r\n    \r\n    <ImageView\r\n        android:layout_width=\"75dp\"\r\n        android:layout_height=\"75dp\"\r\n        android:src=\"@drawable/elements\"\r\n        android:layout_gravity=\"center_vertical\"\r\n        android:id=\"@+id/icon_list_row_calendarfragment\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/eventName\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"79dp\"\r\n        android:textColor=\"#92129D\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:gravity=\"center_vertical\"\r\n        android:text=\"EsemenyNev\"\r\n        android:textSize=\"24dp\" />\r\n\r\n</LinearLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/calendarfragment_list_row.xml	(revision 6fd957fe4de0d2bcc4e3eb811158b744a02e2cc7)
-+++ app/src/main/res/layout/calendarfragment_list_row.xml	(date 1608901052856)
-@@ -9,7 +9,7 @@
-     <ImageView
-         android:layout_width="75dp"
-         android:layout_height="75dp"
--        android:src="@drawable/elements"
-+        android:src="@drawable/ic_baseline_arrow_back_24"
-         android:layout_gravity="center_vertical"
-         android:id="@+id/icon_list_row_calendarfragment"/>
- 
-Index: app/src/main/res/layout/mytodo_list_row.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/mytodo_list_row.xml	(date 1608930471351)
-+++ app/src/main/res/layout/mytodo_list_row.xml	(date 1608930471351)
-@@ -0,0 +1,50 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    xmlns:app="http://schemas.android.com/apk/res-auto">
-+
-+    <RelativeLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:background="@color/grey">
-+        <LinearLayout
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:weightSum="2"
-+            android:id="@+id/titlebar">
-+            <TextView
-+                android:id="@+id/belong"
-+                android:layout_width="0dp"
-+                android:layout_height="wrap_content"
-+                android:layout_weight="1.8"
-+                android:layout_marginLeft="10dp"
-+                android:text="HaHa"
-+                android:textSize="32dp"/>
-+            <Button
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_weight="0.2"
-+                android:text="Delete"
-+                android:layout_gravity="center_vertical"
-+                android:id="@+id/todo_delete_btn"/>
-+        </LinearLayout>
-+
-+        <!--<TextView
-+            android:id="@+id/todo_task"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:text="Tasks"
-+            android:textSize="24dp"
-+            android:layout_below="@+id/belong"
-+            android:layout_marginLeft="50dp"/>-->
-+        <androidx.recyclerview.widget.RecyclerView
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:id="@+id/task_list"
-+            android:layout_below="@+id/titlebar"
-+            android:layout_marginLeft="50dp"/>
-+    </RelativeLayout>
-+
-+
-+</LinearLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Fragments/AddTaskDialogFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/AddTaskDialogFragment.java	(date 1608920921057)
-+++ app/src/main/java/com/example/pabs/Fragments/AddTaskDialogFragment.java	(date 1608920921057)
-@@ -0,0 +1,99 @@
-+package com.example.pabs.Fragments;
-+
-+import android.app.AlertDialog;
-+import android.app.Dialog;
-+import android.content.Context;
-+import android.content.DialogInterface;
-+import android.graphics.Color;
-+import android.graphics.drawable.ColorDrawable;
-+import android.os.Bundle;
-+
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.AppCompatDialogFragment;
-+import androidx.fragment.app.Fragment;
-+
-+import android.text.TextUtils;
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.Button;
-+import android.widget.EditText;
-+import android.widget.Toast;
-+
-+import com.example.pabs.Fragments.EventFragment.EventOptionsDialogFragment;
-+import com.example.pabs.R;
-+
-+/**
-+ * Sets Nickname for new Users
-+ */
-+
-+public class AddTaskDialogFragment extends AppCompatDialogFragment {
-+
-+    //edittext
-+    private EditText task_et = null;
-+    private AddTaskDialogListener addTaskDialogListener;
-+    //
-+    private Dialog dialog;
-+    //
-+    private Button confirm_bt;
-+    private Button cancel_bt;
-+
-+    public void setListener(AddTaskDialogFragment.AddTaskDialogListener addTaskDialogListener) {
-+        this.addTaskDialogListener = addTaskDialogListener;
-+    }
-+
-+    /**
-+     * When the dialog is created
-+     */
-+    @Override
-+    public Dialog onCreateDialog(Bundle savedInstanceState){
-+        //setting view
-+        Log.d("Espania", "onCreateDialog: AddaTaskDialogFragment");
-+        LayoutInflater inflater = getActivity().getLayoutInflater();
-+        View view = inflater.inflate(R.layout.fragment_add_task_dialog, null);
-+
-+        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);
-+
-+        task_et = view.findViewById(R.id.d_at_text);
-+
-+        confirm_bt = (Button) view.findViewById(R.id.d_at_confirm_btn);
-+
-+        confirm_bt.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                if (!TextUtils.isEmpty(task_et.getText().toString())) {
-+                    String task = task_et.getText().toString();
-+                    //calling interface to set the nickname
-+                    addTaskDialogListener.applyText(task);
-+                    dialog.dismiss();
-+                }
-+                else{
-+                    Toast.makeText(getActivity(), "Please fill the textdialog with a Task name!", Toast.LENGTH_SHORT).show();
-+                }
-+            }
-+        });
-+
-+        cancel_bt = (Button) view.findViewById(R.id.d_at_cancel_btn);
-+
-+        cancel_bt.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                dialog.cancel();
-+            }
-+        });
-+
-+        dialog.setContentView(view);
-+
-+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
-+
-+        return dialog;
-+    }
-+
-+    /**
-+     * interface to set the nickname
-+     */
-+    public interface AddTaskDialogListener{
-+        void applyText(String taskname);
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_my_to_do.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_my_to_do.xml	(date 1608901052934)
-+++ app/src/main/res/layout/fragment_my_to_do.xml	(date 1608901052934)
-@@ -0,0 +1,38 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context=".Fragments.MyToDoFragment"
-+    android:background="@color/white">
-+
-+    <RelativeLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent">
-+
-+        <TextView
-+            android:id="@+id/todo_title"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:text="MY TODOs"
-+            android:textSize="32dp"
-+            android:textAlignment="center"/>
-+
-+        <androidx.recyclerview.widget.RecyclerView
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:layout_below="@+id/todo_title"
-+            android:id="@+id/todo_rec_view"/>
-+
-+        <Button
-+            android:id="@+id/todo_button"
-+            android:layout_width="60dp"
-+            android:layout_height="60dp"
-+            android:layout_alignParentRight="true"
-+            android:layout_alignParentBottom="true"
-+            android:layout_marginRight="40dp"
-+            android:layout_marginBottom="20dp"
-+            android:background="@color/black" />
-+    </RelativeLayout>
-+
-+</FrameLayout>
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_calendar.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Fragments.CalendarFragment\"\r\n    android:clickable=\"true\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@drawable/login_background\"\r\n        android:clickable=\"true\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"75dp\"\r\n            android:id=\"@+id/calendar_upperpart\"\r\n            >\r\n            <TextView\r\n                android:id=\"@+id/calendar_curr_date\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"MM/DD/YYYY\"\r\n                android:fontFamily=\"@font/roboto\"\r\n                android:textColor=\"#F4911B\"\r\n                android:textSize=\"30dp\"\r\n                android:padding=\"10dp\"\r\n                android:layout_centerVertical=\"true\"/>\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/calendar_upperpart\"\r\n            android:id=\"@+id/calendar_day_container\"\r\n            android:background=\"#C4C4C4\">\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Curent_Month\"\r\n                android:textColor=\"@color/white\"\r\n                android:id=\"@+id/calendar_curr_month\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:background=\"#92129D\"/>\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_below=\"@+id/calendar_curr_month\"\r\n                android:weightSum=\"7\">\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:text=\"Mon\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:textSize=\"18dp\"\r\n                    />\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:text=\"Tue\"\r\n                    android:textSize=\"18dp\" />\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:text=\"Wed\"\r\n                    android:textSize=\"18dp\" />\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:text=\"Thu\"\r\n                    android:textSize=\"18dp\" />\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:text=\"Fri\"\r\n                    android:textSize=\"18dp\" />\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:text=\"Sat\"\r\n                    android:textSize=\"18dp\" />\r\n                <TextView\r\n                    android:layout_width=\"0dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textAlignment=\"center\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:fontFamily=\"@font/roboto_medium_italic\"\r\n                    android:text=\"Sun\"\r\n                    android:textSize=\"18dp\" />\r\n            </LinearLayout>\r\n        </RelativeLayout>\r\n\r\n        <sun.bob.mcalendarview.views.ExpCalendarView\r\n            android:layout_below=\"@+id/calendar_day_container\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"310dp\"\r\n            android:id=\"@+id/calendar_calendar\"\r\n            android:background=\"@color/white\"/>\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/calendar_rec_view\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/calendar_calendar\" />\r\n\r\n    </RelativeLayout>\r\n\r\n</FrameLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_calendar.xml	(revision 6fd957fe4de0d2bcc4e3eb811158b744a02e2cc7)
-+++ app/src/main/res/layout/fragment_calendar.xml	(date 1608901052952)
-@@ -9,21 +9,19 @@
-     <RelativeLayout
-         android:layout_width="match_parent"
-         android:layout_height="match_parent"
--        android:background="@drawable/login_background"
-         android:clickable="true">
- 
-         <RelativeLayout
-             android:layout_width="match_parent"
-             android:layout_height="75dp"
-             android:id="@+id/calendar_upperpart"
--            >
-+            android:background="@color/black">
-             <TextView
-                 android:id="@+id/calendar_curr_date"
-                 android:layout_width="wrap_content"
-                 android:layout_height="wrap_content"
-                 android:text="MM/DD/YYYY"
--                android:fontFamily="@font/roboto"
--                android:textColor="#F4911B"
-+                android:textColor="@color/white"
-                 android:textSize="30dp"
-                 android:padding="10dp"
-                 android:layout_centerVertical="true"/>
-@@ -34,15 +32,14 @@
-             android:layout_height="wrap_content"
-             android:layout_below="@+id/calendar_upperpart"
-             android:id="@+id/calendar_day_container"
--            android:background="#C4C4C4">
-+            android:background="@color/grey">
-             <TextView
-                 android:layout_width="wrap_content"
-                 android:layout_height="wrap_content"
-                 android:text="Curent_Month"
--                android:textColor="@color/white"
-                 android:id="@+id/calendar_curr_month"
-                 android:layout_centerHorizontal="true"
--                android:background="#92129D"/>
-+                android:background="@color/quantum_amberA200"/>
-             <LinearLayout
-                 android:layout_width="match_parent"
-                 android:layout_height="wrap_content"
-@@ -56,7 +53,6 @@
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
-                     android:text="Mon"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:textSize="18dp"
-                     />
-                 <TextView
-@@ -65,7 +61,6 @@
-                     android:layout_weight="1"
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:text="Tue"
-                     android:textSize="18dp" />
-                 <TextView
-@@ -74,7 +69,6 @@
-                     android:layout_weight="1"
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:text="Wed"
-                     android:textSize="18dp" />
-                 <TextView
-@@ -83,7 +77,6 @@
-                     android:layout_weight="1"
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:text="Thu"
-                     android:textSize="18dp" />
-                 <TextView
-@@ -92,7 +85,6 @@
-                     android:layout_weight="1"
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:text="Fri"
-                     android:textSize="18dp" />
-                 <TextView
-@@ -101,7 +93,6 @@
-                     android:layout_weight="1"
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:text="Sat"
-                     android:textSize="18dp" />
-                 <TextView
-@@ -110,7 +101,6 @@
-                     android:layout_weight="1"
-                     android:textAlignment="center"
-                     android:gravity="center_horizontal"
--                    android:fontFamily="@font/roboto_medium_italic"
-                     android:text="Sun"
-                     android:textSize="18dp" />
-             </LinearLayout>
-@@ -124,10 +114,10 @@
-             android:background="@color/white"/>
- 
-         <androidx.recyclerview.widget.RecyclerView
--            android:id="@+id/calendar_rec_view"
-             android:layout_width="match_parent"
-             android:layout_height="wrap_content"
--            android:layout_below="@+id/calendar_calendar" />
-+            android:layout_below="@+id/calendar_calendar"
-+            android:id="@+id/calendar_rec_view"/>
- 
-     </RelativeLayout>
- 
-Index: app/src/main/java/com/example/pabs/Fragments/MyToDoFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/MyToDoFragment.java	(date 1608984980420)
-+++ app/src/main/java/com/example/pabs/Fragments/MyToDoFragment.java	(date 1608984980420)
-@@ -0,0 +1,287 @@
-+package com.example.pabs.Fragments;
-+
-+import android.graphics.Color;
-+import android.os.Bundle;
-+
-+import androidx.annotation.NonNull;
-+import androidx.fragment.app.Fragment;
-+import androidx.recyclerview.widget.LinearLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
-+import android.os.Handler;
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.Button;
-+
-+import com.example.pabs.Adapters.CalendarRecyclerViewAdapter;
-+import com.example.pabs.Adapters.ToDoRecyclerViewAdapter;
-+import com.example.pabs.HelperClass.TaskList;
-+import com.example.pabs.HelperClass.ToDoList;
-+import com.example.pabs.Models.DatabaseEvent;
-+import com.example.pabs.R;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.ValueEventListener;
-+
-+import java.util.ArrayList;
-+import java.util.List;
-+
-+import sun.bob.mcalendarview.MarkStyle;
-+import sun.bob.mcalendarview.listeners.OnDateClickListener;
-+import sun.bob.mcalendarview.vo.DateData;
-+
-+public class MyToDoFragment extends Fragment implements AddTaskDialogFragment.AddTaskDialogListener {
-+
-+    private View listView;
-+    List<ToDoList> itemList;
-+    List<ToDoList> lstToDo;
-+    //firebase
-+    private DatabaseReference reference = null;
-+    private String uID;
-+
-+    //dialog fragment
-+    private String task_text;
-+
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+    }
-+
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-+        //get uid of logged in user
-+        uID = getActivity().getIntent().getStringExtra("USER");
-+
-+        // Inflate the layout for this fragment
-+        View myToDoview = inflater.inflate(R.layout.fragment_my_to_do, container, false);
-+
-+        //firebase database -> get reference to USER table
-+        reference = FirebaseDatabase.getInstance().getReference().child("TODO");
-+
-+        listView = getActivity().findViewById(R.id.activity_event_layout);
-+        itemList = new ArrayList<>();
-+        List<TaskList> tasks = new ArrayList<>();
-+        ToDoList mytodos = new ToDoList("My ToDos", tasks, uID, "");
-+        itemList.add(mytodos);
-+        final RecyclerView ParentRecyclerViewItem = myToDoview.findViewById(R.id.todo_rec_view);
-+
-+        // Initialise the Linear layout manager
-+        final LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());
-+
-+        //set data for events example
-+        lstToDo = new ArrayList<>();
-+
-+        //Getting events from database and setting them to recyclerview
-+        final DatabaseReference databaseTodoRef;
-+        databaseTodoRef= FirebaseDatabase.getInstance().getReference().child("TODO");
-+
-+        //databaseEvents.addValueEventListener(new ValueEventListener() {
-+        databaseTodoRef.addValueEventListener(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                lstToDo.clear();
-+                for (final DataSnapshot todo : snapshot.getChildren()) {
-+                    final ToDoList tempTD = new ToDoList();
-+
-+                    //Loop 1 to go through all child nodes of events
-+                    final List<TaskList> tasks =  new ArrayList<>();
-+                    todo.getRef().child("taskList").addListenerForSingleValueEvent(new ValueEventListener() {
-+                        @Override
-+                        public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                            for (DataSnapshot task : snapshot.getChildren()) {
-+                                //Loop 1 to go through all child nodes of joined members
-+                                TaskList task_temp = new TaskList();
-+                                task_temp.setBelongTo(task.child("belongTo").getValue().toString());
-+                                if(task_temp.getBelongTo().equals(uID)){
-+                                    task_temp.setTaskTitle(task.child("taskTitle").getValue().toString());
-+                                    task_temp.setReferenceTo(task.child("referenceTo").getValue().toString());
-+                                    String CB = task.child("taskCB").getValue().toString();
-+                                    boolean cb = false;
-+                                    if(CB.equals("true")){
-+                                        cb = true;
-+                                        Log.d("Espania", "onDataChange: Ifben vagyok! " + cb);
-+                                    }
-+                                    task_temp.setTaskCB(cb);
-+                                    Log.d("WTF", "onDataChange: " + task_temp.getTaskTitle());
-+                                    tasks.add(task_temp);
-+                                }
-+                            }
-+
-+
-+                            final Handler handler = new Handler();
-+                            final int delay = 1000; //milliseconds
-+
-+                            Log.d("WTF", "run: Here is Jimmi!" + tasks.size());
-+                            handler.postDelayed(new Runnable(){
-+                                public void run(){
-+                                    if(!tasks.isEmpty())//checking if the data is loaded or not
-+                                    {
-+                                        Log.d("WTF", "run: Here is Johnny!");
-+                                        String td_title = todo.child("toDoListTitle").getValue().toString();
-+                                        tempTD.setToDoListTitle(td_title);
-+                                        String td_owner = todo.child("owner").getValue().toString();
-+                                        tempTD.setOwner(td_owner);
-+
-+                                        tempTD.setTaskList(tasks);
-+
-+
-+                                        //pushing the temporary event object into an arraylist
-+                                        lstToDo.add(tempTD);
-+                                        // Pass the arguments
-+                                        // to the parentItemAdapter.
-+                                        // These arguments are passed
-+                                        // using a method ParentItemList()
-+                                        ToDoRecyclerViewAdapter parentItemAdapter = new ToDoRecyclerViewAdapter(lstToDo);
-+
-+                                        // Set the layout manager
-+                                        // and adapter for items
-+                                        // of the parent recyclerview
-+                                        ParentRecyclerViewItem.setAdapter(parentItemAdapter);
-+                                        ParentRecyclerViewItem.setLayoutManager(layoutManager);
-+                                    }
-+                                    else
-+                                        handler.postDelayed(this, delay);
-+                                }
-+                            }, delay);
-+
-+                        }
-+
-+                        @Override
-+                        public void onCancelled(@NonNull DatabaseError error) {
-+
-+                        }
-+                    });
-+
-+
-+                }
-+            }
-+
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
-+
-+            }
-+        });
-+
-+        Button todo_btn = myToDoview.findViewById(R.id.todo_button);
-+        todo_btn.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View v) {
-+                inviteDialogFragment();
-+                Log.d("Espania", "onClick: Heyho");
-+            }
-+        });
-+        return myToDoview;
-+    }
-+
-+    /*private List<ToDoList> toDoList()
-+    {
-+        List<ToDoList> itemList = new ArrayList<>();
-+
-+        ToDoList item = new ToDoList("Title 1", ChildItemList());
-+        itemList.add(item);
-+        ToDoList item1 = new ToDoList("Title 2", ChildItemList());
-+        itemList.add(item1);
-+        ToDoList item2 = new ToDoList("Title 3", ChildItemList());
-+        itemList.add(item2);
-+        ToDoList item3 = new ToDoList("Title 4", ChildItemList());
-+        itemList.add(item3);
-+
-+        return itemList;
-+    }
-+
-+    // Method to pass the arguments
-+    // for the elements
-+    // of child RecyclerView
-+    private List<TaskList> ChildItemList()
-+    {
-+        List<TaskList> ChildItemList = new ArrayList<>();
-+
-+        ChildItemList.add(new TaskList("Card 1"));
-+        ChildItemList.add(new TaskList("Card 2"));
-+        ChildItemList.add(new TaskList("Card 3"));
-+        ChildItemList.add(new TaskList("Card 4"));
-+
-+        return ChildItemList;
-+    }*/
-+
-+    /*private void addtomyToDoList(List<ToDoList> todos){
-+        todos.get(0).addToTaskList(new TaskList("Elso task",uID));
-+    }*/
-+
-+    private void pushInMyToDoList(final DatabaseReference reference){
-+        reference.addListenerForSingleValueEvent(new ValueEventListener() {
-+            int ok = 0;
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                for(DataSnapshot todo: snapshot.getChildren()){
-+                    if(todo.child("owner").getValue().toString().equals(uID) && todo.child("toDoListTitle").getValue().toString().equals("My ToDos")) {
-+                        ok=1;
-+                        Log.d("Espania", "onDataChange: Ifben");
-+                        if(todo.child("ID").getValue() == null){
-+                            todo.child("ID").getRef().setValue(todo.getKey());
-+                        }
-+                        Log.d("Espania", "onDataChange: Itt vagyok!");
-+                        todo.child("taskList").getRef().push().setValue(new TaskList(task_text,uID,todo.getKey()));
-+                    }
-+                }
-+                if(ok == 0){
-+                    ToDoList temp_todo = new ToDoList();
-+                    temp_todo.setToDoListTitle("My ToDos");
-+                    temp_todo.setOwner(uID);
-+                    snapshot.getRef().push().setValue(temp_todo);
-+                    Log.d("Espania", "onDataChange: Elseben");
-+                    for(DataSnapshot todo: snapshot.getChildren()){
-+                        if(todo.child("owner").getValue().toString().equals(uID) && todo.child("toDoListTitle").getValue().toString().equals("My ToDos")) {
-+                            if(todo.child("ID").getValue() == null){
-+                                todo.child("ID").getRef().setValue(todo.getKey());
-+                            }
-+                            Log.d("Espania", "onDataChange: Itt vagyok!");
-+                            todo.child("taskList").getRef().push().setValue(new TaskList(task_text,uID,todo.getKey()));
-+                        }
-+                    }
-+                }
-+                //Log.d("Espania", "onDataChange: itt vagyok1!");
-+            }
-+
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
-+
-+            }
-+        });
-+    }
-+
-+    @Override
-+    public void onStart() {
-+        super.onStart();
-+        //Hiding the activity layout
-+        listView.setVisibility(View.GONE);
-+    }
-+
-+    @Override
-+    public void onStop() {
-+        super.onStop();
-+        listView.setVisibility(View.VISIBLE);
-+    }
-+
-+    public void clearList(){
-+        lstToDo.clear();
-+    }
-+
-+    @Override
-+    public void applyText(String taskname) {
-+        task_text = taskname;
-+        Log.d("Espania", "applyText: " + reference);
-+        pushInMyToDoList(reference);
-+    }
-+
-+    public void inviteDialogFragment(){
-+        AddTaskDialogFragment addTaskDialogFragment = new AddTaskDialogFragment();
-+        addTaskDialogFragment.setListener(MyToDoFragment.this);
-+        addTaskDialogFragment.setCancelable(true);
-+        addTaskDialogFragment.show(getActivity().getSupportFragmentManager(),"AddTaskDialogFragment");
-+    }
-+}
-\ No newline at end of file
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2020__12__22__11_40__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2020__12__22__11_40__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_11_17_2020_11_36_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_11_17_2020_11_36_PM__Default_Changelist_.xml
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM_[Default_Changelist]/shelved.patch	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM_[Default_Changelist]/shelved.patch	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
@@ -1,284 +0,0 @@
-Index: app/src/main/java/com/example/pabs/EventActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.SearchView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.EventRecyclerViewAdapter;\r\nimport com.example.pabs.Fragments.CalendarFragment;\r\nimport com.example.pabs.Fragments.EventFragment.CreateEventFragment;\r\nimport com.example.pabs.Models.Event;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * Main screen, handles more fragments, events, groups\r\n */\r\n\r\npublic class EventActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    //UI\r\n    private ImageView create_event_img_btn;\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    //events\r\n    private List<Event> lstEvent;\r\n    private List<Event> lstEventCopy;\r\n\r\n    //drawer\r\n    private DrawerLayout drawer = null;\r\n    private NavigationView navigationView = null;\r\n\r\n    //\r\n    private SearchView sw;\r\n    private EventRecyclerViewAdapter myAdapter;\r\n\r\n    /**\r\n     * On create\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_event);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseEvents;\r\n        databaseEvents = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n        databaseEvents.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (DataSnapshot event : snapshot.getChildren()) {\r\n                    //Loop 1 to go through all child nodes of events\r\n                    String temp = event.child(\"event_name\").getValue().toString();\r\n\r\n                    Uri myUri = null;\r\n                    String UriStr = null;\r\n\r\n                    //if the event has a thumbnail, get Uri\r\n                    if (event.child(\"thumbnail\").getValue() != null) {\r\n                        UriStr = event.child(\"thumbnail\").getValue().toString();\r\n                        myUri = Uri.parse(UriStr);\r\n                    }\r\n\r\n                    //get no image Uri\r\n                    Uri testUri = Uri.parse(\"https://firebasestorage.googleapis.com/v0/b/pabs-fa777.appspot.com/o/Images%2FNo_image_3x4.svg.png?alt=media&token=1a73a7ae-0447-4827-87c9-9ed1bb463351\");\r\n\r\n                    //Create temporary Event\r\n                    Event tempEv;\r\n\r\n                    //if Event has no thumbnail\r\n                    if (UriStr == null) {\r\n                        //Give the event, the no image thumbnail\r\n                        tempEv = new Event();\r\n                        tempEv.setTitle(temp);\r\n                        tempEv.setThumbnail(testUri);\r\n                    }\r\n                    //if Event has thumbnail\r\n                    else {\r\n                        //Set thumbnail of event\r\n                        tempEv = new Event();\r\n                        tempEv.setTitle(temp);\r\n                        tempEv.setThumbnail(myUri);\r\n                    }\r\n\r\n                    //add events to array\r\n                    addToEventsArray(tempEv);\r\n                }\r\n\r\n                //Set and show events on main screen\r\n                setEvents();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        //nav view and drawer\r\n        navigationView = findViewById(R.id.a_e_nav_view);\r\n        drawer = findViewById(R.id.a_e_drawer_layout);\r\n\r\n        //handle navigation drawer open/close with toggle\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, null, R.string.navigation_drawer_open, R.string.navigation_drawer_close) {\r\n            /**\r\n             * Called when a drawer has settled in a completely closed state.\r\n             */\r\n            public void onDrawerClosed(View view) {\r\n                super.onDrawerClosed(view);\r\n                for (int i = 0; i < navigationView.getMenu().size(); ++i)\r\n                    navigationView.getMenu().getItem(i).setChecked(false);\r\n            }\r\n\r\n            /**\r\n             * Called when a drawer has settled in a completely open state.\r\n             */\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //add toggle to drawer\r\n        drawer.addDrawerListener(toggle);\r\n\r\n        //sync toggle\r\n        toggle.syncState();\r\n\r\n        // Write a string to database when this client loses connection\r\n        reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n\r\n        DatabaseReference connectedRef = FirebaseDatabase.getInstance().getReference(\".info/connected\");\r\n        connectedRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot snapshot) {\r\n                boolean connected = snapshot.getValue(Boolean.class);\r\n                if (connected) {\r\n                    //user is connected\r\n                } else {\r\n                    //user disconnected\r\n                    reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n                    openLoginActivity();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError error) {\r\n                System.err.println(\"Listener was cancelled\");\r\n            }\r\n        });\r\n\r\n        //create event button\r\n        create_event_img_btn = findViewById(R.id.a_e_create_event_button);\r\n        create_event_img_btn.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent motionEvent) {\r\n                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n                    openCreateEventFragment();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        //\r\n\r\n\r\n        //\r\n        sw = findViewById(R.id.e_search_bar);\r\n        sw.setQueryHint(\"Search event name...\");\r\n\r\n        sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                myAdapter.filter(query);\r\n                hideKeyboard(EventActivity.this);\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                myAdapter.filter(newText);\r\n                return true;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public static void hideKeyboard(Activity activity) {\r\n        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n        //Find the currently focused view, so we can grab the correct window token from it.\r\n        View view = activity.getCurrentFocus();\r\n        //If no view currently has focus, create a new one, just so we can grab a window token from it\r\n        if (view == null) {\r\n            view = new View(activity);\r\n        }\r\n        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n    }\r\n\r\n    private void openLoginActivity(){\r\n        Intent intent = new Intent(this, LoginActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Add to events inside DataChanged method so we don't lose the results\r\n     */\r\n    public void addToEventsArray(Event tempEv){\r\n        lstEvent.add(tempEv);\r\n    }\r\n\r\n    /**\r\n     * Clear events inside DataChanged method\r\n     */\r\n    public void clearEvents(){\r\n        lstEvent.clear();\r\n    }\r\n\r\n    /**\r\n     * Set events inside DataChanged method\r\n     */\r\n    public void setEvents(){\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);\r\n        //create Adapter with lstEvent in this context\r\n        myAdapter = new EventRecyclerViewAdapter(this, lstEvent, getSupportFragmentManager(), uID);\r\n        //separate the Recyclerview to 3 columns\r\n        myRv.setLayoutManager(new GridLayoutManager(this, 3));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myAdapter);\r\n    }\r\n\r\n    /**\r\n     * Called on selecting item from navigation list\r\n     */\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.nav_events:\r\n                for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {\r\n                    getSupportFragmentManager().popBackStack();\r\n                }\r\n                Toast.makeText(this, \"nav_events\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_calendar:\r\n                openCalendarFragment();\r\n                Toast.makeText(this, \"nav_calendar\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_groups:\r\n                Toast.makeText(this, \"nav_groups\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_profile:\r\n                Toast.makeText(this, \"nav_profile\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_settings:\r\n                Toast.makeText(this, \"nav_settings\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_logout:\r\n                Toast.makeText(this, \"nav_logout\", Toast.LENGTH_SHORT).show();\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n                break;\r\n\r\n            default:\r\n                Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n\r\n        //close drawer on item clicked\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * open create event fragment\r\n     */\r\n    private void openCreateEventFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CreateEventFragment(uID))\r\n                .addToBackStack(\"CreateEventFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * open calendar event fragment\r\n     */\r\n    private void openCalendarFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CalendarFragment())\r\n                .addToBackStack(\"CalendarFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * Called when the activity is exiting\r\n     */\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        lstEvent.clear();\r\n        reference.child(uID).child(\"online\").setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * Called when the activity started\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/EventActivity.java	(revision 1c731fa6d69cabd215338b35e6b0c1ce7d3a0de7)
-+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1608991353377)
-@@ -1,20 +1,10 @@
- package com.example.pabs;
- 
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.ActionBarDrawerToggle;
--import androidx.appcompat.app.AppCompatActivity;
--import androidx.core.view.GravityCompat;
--import androidx.drawerlayout.widget.DrawerLayout;
--import androidx.recyclerview.widget.GridLayoutManager;
--import androidx.recyclerview.widget.RecyclerView;
--
- import android.annotation.SuppressLint;
- import android.app.Activity;
- import android.content.Intent;
--import android.graphics.Color;
- import android.net.Uri;
- import android.os.Bundle;
--import android.util.Log;
- import android.view.MenuItem;
- import android.view.MotionEvent;
- import android.view.View;
-@@ -23,9 +13,18 @@
- import android.widget.SearchView;
- import android.widget.Toast;
- 
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.ActionBarDrawerToggle;
-+import androidx.appcompat.app.AppCompatActivity;
-+import androidx.core.view.GravityCompat;
-+import androidx.drawerlayout.widget.DrawerLayout;
-+import androidx.recyclerview.widget.GridLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
- import com.example.pabs.Adapters.EventRecyclerViewAdapter;
- import com.example.pabs.Fragments.CalendarFragment;
- import com.example.pabs.Fragments.EventFragment.CreateEventFragment;
-+import com.example.pabs.Fragments.MyToDoFragment;
- import com.example.pabs.Models.Event;
- import com.google.android.material.navigation.NavigationView;
- import com.google.firebase.database.DataSnapshot;
-@@ -35,7 +34,6 @@
- import com.google.firebase.database.ValueEventListener;
- 
- import java.util.ArrayList;
--import java.util.Collections;
- import java.util.List;
- 
- 
-@@ -47,6 +45,7 @@
- 
-     //UI
-     private ImageView create_event_img_btn;
-+    private ImageView open_group_btn;
- 
-     //firebase
-     private DatabaseReference reference;
-@@ -54,7 +53,6 @@
- 
-     //events
-     private List<Event> lstEvent;
--    private List<Event> lstEventCopy;
- 
-     //drawer
-     private DrawerLayout drawer = null;
-@@ -62,7 +60,18 @@
- 
-     //
-     private SearchView sw;
--    private EventRecyclerViewAdapter myAdapter;
-+    private EventRecyclerViewAdapter myEventAdapter;
-+
-+    public static void hideKeyboard(Activity activity) {
-+        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
-+        //Find the currently focused view, so we can grab the correct window token from it.
-+        View view = activity.getCurrentFocus();
-+        //If no view currently has focus, create a new one, just so we can grab a window token from it
-+        if (view == null) {
-+            view = new View(activity);
-+        }
-+        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
-+    }
- 
-     /**
-      * On create
-@@ -203,41 +212,50 @@
-             }
-         });
-         //
-+
-+        //open group button
-+        open_group_btn = findViewById(R.id.a_e_open_group_button);
-+        open_group_btn.setOnTouchListener(new View.OnTouchListener() {
-+            @Override
-+            public boolean onTouch(View view, MotionEvent motionEvent) {
-+                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
-+                    clearBackstack();
-+                    openGroupActivity();
-+                }
-+                return false;
-+            }
-+        });
- 
--
--        //
-+        //search view
-         sw = findViewById(R.id.e_search_bar);
-         sw.setQueryHint("Search event name...");
- 
-+        sw.setOnCloseListener(new SearchView.OnCloseListener() {
-+            @Override
-+            public boolean onClose() {
-+                hideKeyboard(EventActivity.this);
-+                return false;
-+            }
-+        });
-+
-         sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
-             @Override
-             public boolean onQueryTextSubmit(String query) {
--                myAdapter.filter(query);
-+                myEventAdapter.filter(query);
-                 hideKeyboard(EventActivity.this);
-                 return true;
-             }
- 
-             @Override
-             public boolean onQueryTextChange(String newText) {
--                myAdapter.filter(newText);
-+                myEventAdapter.filter(newText);
-                 return true;
-             }
-         });
- 
-     }
- 
--    public static void hideKeyboard(Activity activity) {
--        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
--        //Find the currently focused view, so we can grab the correct window token from it.
--        View view = activity.getCurrentFocus();
--        //If no view currently has focus, create a new one, just so we can grab a window token from it
--        if (view == null) {
--            view = new View(activity);
--        }
--        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
--    }
--
--    private void openLoginActivity(){
-+    private void openLoginActivity() {
-         Intent intent = new Intent(this, LoginActivity.class);
-         startActivity(intent);
-     }
-@@ -245,29 +263,29 @@
-     /**
-      * Add to events inside DataChanged method so we don't lose the results
-      */
--    public void addToEventsArray(Event tempEv){
-+    public void addToEventsArray(Event tempEv) {
-         lstEvent.add(tempEv);
-     }
- 
-     /**
-      * Clear events inside DataChanged method
-      */
--    public void clearEvents(){
-+    public void clearEvents() {
-         lstEvent.clear();
-     }
- 
-     /**
-      * Set events inside DataChanged method
-      */
--    public void setEvents(){
-+    public void setEvents() {
-         //create and set RecyclerView
-         RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);
-         //create Adapter with lstEvent in this context
--        myAdapter = new EventRecyclerViewAdapter(this, lstEvent, getSupportFragmentManager(), uID);
-+        myEventAdapter = new EventRecyclerViewAdapter(this, lstEvent, getSupportFragmentManager(), uID);
-         //separate the Recyclerview to 3 columns
-         myRv.setLayoutManager(new GridLayoutManager(this, 3));
-         //set adapter for RecyclerView
--        myRv.setAdapter(myAdapter);
-+        myRv.setAdapter(myEventAdapter);
-     }
- 
-     /**
-@@ -276,20 +294,21 @@
-     @SuppressLint("NonConstantResourceId")
-     @Override
-     public boolean onNavigationItemSelected(@NonNull MenuItem item) {
--        switch (item.getItemId()){
-+        switch (item.getItemId()) {
-             case R.id.nav_events:
--                for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {
--                    getSupportFragmentManager().popBackStack();
--                }
-+                clearBackstack();
-                 Toast.makeText(this, "nav_events", Toast.LENGTH_SHORT).show();
-                 break;
- 
-             case R.id.nav_calendar:
-+                clearBackstack();
-                 openCalendarFragment();
-                 Toast.makeText(this, "nav_calendar", Toast.LENGTH_SHORT).show();
-                 break;
- 
-             case R.id.nav_groups:
-+                clearBackstack();
-+                openGroupActivity();
-                 Toast.makeText(this, "nav_groups", Toast.LENGTH_SHORT).show();
-                 break;
- 
-@@ -297,6 +316,11 @@
-                 Toast.makeText(this, "nav_profile", Toast.LENGTH_SHORT).show();
-                 break;
- 
-+            case R.id.nav_todo:
-+                openMyToDoFragment();
-+                Toast.makeText(this, "nav_todo", Toast.LENGTH_SHORT).show();
-+                break;
-+
-             case R.id.nav_settings:
-                 Toast.makeText(this, "nav_settings", Toast.LENGTH_SHORT).show();
-                 break;
-@@ -317,22 +341,48 @@
-         return true;
-     }
- 
-+    private void clearBackstack() {
-+        for (int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-+            getSupportFragmentManager().popBackStack();
-+        }
-+    }
-+
-+    /**
-+     * open group activity
-+     */
-+    private void openGroupActivity() {
-+        Intent intent = new Intent(this, GroupActivity.class);
-+        intent.putExtra("USER", uID);
-+        finish();
-+        startActivity(intent);
-+    }
- 
-     /**
-      * open create event fragment
-      */
--    private void openCreateEventFragment(){
-+    private void openCreateEventFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_event_container, new CreateEventFragment(uID))
-                 .addToBackStack("CreateEventFragment")
-                 .commit();
-     }
-+
-+    /**
-+     * open MyToDo event fragment
-+     */
-+    private void openMyToDoFragment(){
-+        getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new MyToDoFragment())
-+                .addToBackStack("MyToDoFragment")
-+                .commit();
-+    }
- 
-     /**
-      * open calendar event fragment
-      */
--    private void openCalendarFragment(){
-+    private void openCalendarFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_event_container, new CalendarFragment())
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM__Default_Changelist_.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM__Default_Changelist_.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM_[Default_Changelist]" date="1608991482767" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_4_04_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/26/2020 4:04 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM_[Default_Changelist]/shelved.patch	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_12_26_2020_3_05_PM_[Default_Changelist]/shelved.patch	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
@@ -1,5109 +0,0 @@
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'  // Google Services plugin\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.pabs\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n\r\n        // Read the API key from ./secure.properties into R.string.maps_api_key\r\n        def secureProps = new Properties()\r\n        if (file(\"../secure.properties\").exists()) {\r\n            file(\"../secure.properties\")?.withInputStream { secureProps.load(it) }\r\n        }\r\n        resValue \"string\", \"maps_api_key\", (secureProps.getProperty(\"MAPS_API_KEY\") ?: \"\")\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    testImplementation 'junit:junit:4.13'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n\r\n    // Declare the dependency for the Realtime Database library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-database'\r\n\r\n    // Add the dependency for the Firebase SDK for Google Analytics\r\n    // When using the BoM, don't specify versions in Firebase dependencies\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.android.gms:play-services-gcm:17.0.0'\r\n\r\n    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.1'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.1'\r\n\r\n    ///Navigation menu\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.2'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.2'\r\n    implementation \"androidx.drawerlayout:drawerlayout:1.1.1\"\r\n\r\n    //AutoCompletePlaceApi\r\n    implementation 'com.google.android.libraries.places:places:2.4.0'\r\n\r\n    //Picasso for image loading\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n\r\n    //calendar View\r\n    implementation 'sun.bob:mcalendarview:1.0.0'\r\n\r\n    //multidex\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n\r\n    //\r\n    implementation 'com.google.android.gms:play-services-basement:17.5.0'\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/build.gradle	(date 1608969268341)
-@@ -62,6 +62,7 @@
-     // When using the BoM, you don't specify versions in Firebase library dependencies
-     implementation 'com.google.firebase:firebase-messaging:21.0.1'
-     implementation 'com.google.firebase:firebase-storage:19.2.1'
-+    implementation 'com.firebaseui:firebase-ui:0.6.0'
- 
-     ///Navigation menu
-     implementation 'androidx.navigation:navigation-fragment:2.3.2'
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/EventReminderFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.EventFragment;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.SwitchCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.text.TextUtils;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.EventStaffRecyclerViewAdapter;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class EventReminderFragment extends Fragment {\r\n\r\n    private View containerView;\r\n\r\n    //database event\r\n    private DatabaseEvent databaseEvent;\r\n\r\n    private SwitchCompat sw;\r\n    private ImageView iv;\r\n    private Spinner sp;\r\n    private TextView tv;\r\n    private Button bt;\r\n\r\n    private boolean switch_on = false;\r\n\r\n    EventReminderFragment(DatabaseEvent dE){\r\n        databaseEvent = dE;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_event_reminder, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_event_layout);\r\n\r\n        sw = view.findViewById(R.id.f_e_r_sw);\r\n        iv = view.findViewById(R.id.f_e_r_iv);\r\n        sp = view.findViewById(R.id.f_e_r_sp);\r\n        tv = view.findViewById(R.id.f_e_r_rl3_tv);\r\n        bt = view.findViewById(R.id.f_e_r_btn);\r\n\r\n        iv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                clearBackstack();\r\n            }\r\n        });\r\n\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(getActivity(),\r\n                R.array.reminder, android.R.layout.simple_spinner_item);\r\n        // Specify the layout to use when the list of choices appears\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        sp.setAdapter(adapter);\r\n\r\n        sp.setVisibility(View.GONE);\r\n        tv.setVisibility(View.GONE);\r\n\r\n        if(databaseEvent.getReminder() != null){\r\n            if(!databaseEvent.getReminder().equals(\"\")){\r\n                sp.setVisibility(View.VISIBLE);\r\n                tv.setVisibility(View.VISIBLE);\r\n                sw.setChecked(true);\r\n                switch_on = true;\r\n\r\n                ArrayList<String> reminderArr = new ArrayList<>();\r\n                reminderArr.add(\"daily\");\r\n                reminderArr.add(\"weekly\");\r\n                reminderArr.add(\"monthly\");\r\n                int i=reminderArr.indexOf(databaseEvent.getReminder().toString());\r\n                sp.setSelection(i);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        sw.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                if (isChecked) {\r\n                    //switch on\r\n                    sp.setVisibility(View.VISIBLE);\r\n                    tv.setVisibility(View.VISIBLE);\r\n                    switch_on = true;\r\n                } else {\r\n                    //switch off\r\n                    sp.setVisibility(View.GONE);\r\n                    tv.setVisibility(View.GONE);\r\n                    switch_on = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        bt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n                    refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (final DataSnapshot event : snapshot.getChildren()) {\r\n                                //Loop 1 to go through all child nodes of users\r\n                                if (event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()) {\r\n                                    if (switch_on) {\r\n                                        databaseEvent.setReminder(sp.getSelectedItem().toString());\r\n                                    } else {\r\n                                        databaseEvent.setReminder(\"\");\r\n                                    }\r\n                                    event.getRef().child(\"reminder\").setValue(databaseEvent.getReminder());\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            //database failed\r\n                        }\r\n                    });\r\n\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    /**\r\n     * clearBackstack\r\n     */\r\n    public void clearBackstack(){\r\n        //clear all backstact\r\n        getActivity().getSupportFragmentManager().popBackStack(\"EventReminderFragment\", 1);\r\n    }\r\n\r\n    /**\r\n     * onStart\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n    }\r\n\r\n    /**\r\n     * onStop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/EventReminderFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/EventReminderFragment.java	(date 1608986752282)
-@@ -1,29 +1,20 @@
- package com.example.pabs.Fragments.EventFragment;
- 
--import android.app.Activity;
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.appcompat.widget.SwitchCompat;
--import androidx.fragment.app.Fragment;
--import androidx.recyclerview.widget.LinearLayoutManager;
--import androidx.recyclerview.widget.RecyclerView;
--
--import android.text.TextUtils;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
--import android.view.inputmethod.InputMethodManager;
- import android.widget.ArrayAdapter;
- import android.widget.Button;
- import android.widget.CompoundButton;
--import android.widget.EditText;
- import android.widget.ImageView;
- import android.widget.Spinner;
- import android.widget.TextView;
--import android.widget.Toast;
- 
--import com.example.pabs.Adapters.EventStaffRecyclerViewAdapter;
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.widget.SwitchCompat;
-+import androidx.fragment.app.Fragment;
-+
- import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.R;
- import com.google.firebase.database.DataSnapshot;
-@@ -39,7 +30,7 @@
-     private View containerView;
- 
-     //database event
--    private DatabaseEvent databaseEvent;
-+    private final DatabaseEvent databaseEvent;
- 
-     private SwitchCompat sw;
-     private ImageView iv;
-@@ -49,7 +40,7 @@
- 
-     private boolean switch_on = false;
- 
--    EventReminderFragment(DatabaseEvent dE){
-+    EventReminderFragment(DatabaseEvent dE) {
-         databaseEvent = dE;
-     }
- 
-@@ -88,8 +79,8 @@
-         sp.setVisibility(View.GONE);
-         tv.setVisibility(View.GONE);
- 
--        if(databaseEvent.getReminder() != null){
--            if(!databaseEvent.getReminder().equals("")){
-+        if (databaseEvent.getReminder() != null) {
-+            if (!databaseEvent.getReminder().equals("")) {
-                 sp.setVisibility(View.VISIBLE);
-                 tv.setVisibility(View.VISIBLE);
-                 sw.setChecked(true);
-@@ -99,13 +90,12 @@
-                 reminderArr.add("daily");
-                 reminderArr.add("weekly");
-                 reminderArr.add("monthly");
--                int i=reminderArr.indexOf(databaseEvent.getReminder().toString());
-+                int i = reminderArr.indexOf(databaseEvent.getReminder());
-                 sp.setSelection(i);
-             }
-         }
- 
- 
--
-         sw.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                 if (isChecked) {
-@@ -126,27 +116,27 @@
-             @Override
-             public void onClick(View view) {
-                 final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
--                    refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
--                        @Override
--                        public void onDataChange(@NonNull DataSnapshot snapshot) {
--                            for (final DataSnapshot event : snapshot.getChildren()) {
--                                //Loop 1 to go through all child nodes of users
--                                if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
--                                    if (switch_on) {
--                                        databaseEvent.setReminder(sp.getSelectedItem().toString());
--                                    } else {
--                                        databaseEvent.setReminder("");
--                                    }
--                                    event.getRef().child("reminder").setValue(databaseEvent.getReminder());
--                                }
--                            }
--                        }
-+                refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
-+                    @Override
-+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                        for (final DataSnapshot event : snapshot.getChildren()) {
-+                            //Loop 1 to go through all child nodes of users
-+                            if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
-+                                if (switch_on) {
-+                                    databaseEvent.setReminder(sp.getSelectedItem().toString());
-+                                } else {
-+                                    databaseEvent.setReminder("");
-+                                }
-+                                event.getRef().child("reminder").setValue(databaseEvent.getReminder());
-+                            }
-+                        }
-+                    }
- 
--                        @Override
--                        public void onCancelled(@NonNull DatabaseError error) {
--                            //database failed
--                        }
--                    });
-+                    @Override
-+                    public void onCancelled(@NonNull DatabaseError error) {
-+                        //database failed
-+                    }
-+                });
- 
-             }
-         });
-@@ -158,7 +148,7 @@
-     /**
-      * clearBackstack
-      */
--    public void clearBackstack(){
-+    public void clearBackstack() {
-         //clear all backstact
-         getActivity().getSupportFragmentManager().popBackStack("EventReminderFragment", 1);
-     }
-Index: app/src/main/java/com/example/pabs/GroupActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.SearchView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.GroupRecyclerViewAdapter;\r\nimport com.example.pabs.Fragments.CalendarFragment;\r\nimport com.example.pabs.Fragments.GroupFragment.CodeDialogFragment;\r\nimport com.example.pabs.Fragments.GroupFragment.CreateGroupFragment;\r\nimport com.example.pabs.Models.Group;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class GroupActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener, CodeDialogFragment.CodeDialogListener {\r\n\r\n    //UI\r\n    private ImageView create_group_img_btn;\r\n    private ImageView open_event_img_btn;\r\n    private ImageView group_code_img_btn;\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    //events\r\n    private ArrayList<Group> lstGroup = new ArrayList<>();\r\n\r\n    //drawer\r\n    private DrawerLayout drawer = null;\r\n    private NavigationView navigationView = null;\r\n\r\n    private String mCode;\r\n\r\n    //\r\n    private SearchView sw;\r\n    private GroupRecyclerViewAdapter myGroupAdapter;\r\n\r\n    /**\r\n     * On create\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_group);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //set data for events example\r\n        lstGroup = new ArrayList<>();\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseGroupRef;\r\n        databaseGroupRef = FirebaseDatabase.getInstance().getReference().child(\"GROUP\");\r\n\r\n        databaseGroupRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (DataSnapshot group : snapshot.getChildren()) {\r\n\r\n                    //Create temporary Group\r\n                    final Group tempGrp;\r\n                    tempGrp = new Group();\r\n\r\n                    tempGrp.setGroup_name(group.child(\"group_name\").getValue().toString());\r\n                    tempGrp.setGroup_owner(group.child(\"group_owner\").getValue().toString());\r\n                    tempGrp.setInvite_code(group.child(\"invite_code\").getValue().toString());\r\n\r\n                    final ArrayList<String> joined_members =  new ArrayList<>();\r\n                    group.getRef().child(\"joined_members\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (DataSnapshot member : snapshot.getChildren()){\r\n                                joined_members.add(member.getValue().toString());\r\n                            }\r\n\r\n                            tempGrp.setMember_list(joined_members);\r\n\r\n                            if(joined_members.contains(uID) || uID.equals(tempGrp.getGroup_owner())){\r\n                                //add events to array\r\n                                addToGroupArray(tempGrp);\r\n\r\n                                //Set and show events on main screen\r\n                                setGroups();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        //nav view and drawer\r\n        navigationView = findViewById(R.id.a_g_nav_view);\r\n        drawer = findViewById(R.id.a_g_drawer_layout);\r\n\r\n        //handle navigation drawer open/close with toggle\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, null, R.string.navigation_drawer_open, R.string.navigation_drawer_close) {\r\n            /**\r\n             * Called when a drawer has settled in a completely closed state.\r\n             */\r\n            public void onDrawerClosed(View view) {\r\n                super.onDrawerClosed(view);\r\n                for (int i = 0; i < navigationView.getMenu().size(); ++i)\r\n                    navigationView.getMenu().getItem(i).setChecked(false);\r\n            }\r\n\r\n            /**\r\n             * Called when a drawer has settled in a completely open state.\r\n             */\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //add toggle to drawer\r\n        drawer.addDrawerListener(toggle);\r\n\r\n        //sync toggle\r\n        toggle.syncState();\r\n\r\n        // Write a string to database when this client loses connection\r\n        reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n\r\n        DatabaseReference connectedRef = FirebaseDatabase.getInstance().getReference(\".info/connected\");\r\n        connectedRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot snapshot) {\r\n                boolean connected = snapshot.getValue(Boolean.class);\r\n                if (connected) {\r\n                    //user is connected\r\n                } else {\r\n                    //user disconnected\r\n                    reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n                    openLoginActivity();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError error) {\r\n                System.err.println(\"Listener was cancelled\");\r\n            }\r\n        });\r\n\r\n        //create event button\r\n        create_group_img_btn = findViewById(R.id.a_g_create_group_button);\r\n        create_group_img_btn.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent motionEvent) {\r\n                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n                    openCreateGroupFragment();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        //\r\n        open_event_img_btn = findViewById(R.id.a_g_open_event_button);\r\n        open_event_img_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                clearBackstack();\r\n                openEventActivity();\r\n            }\r\n        });\r\n\r\n        group_code_img_btn = findViewById(R.id.a_g_group_code_button);\r\n        group_code_img_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openCodeDialogFragment();\r\n            }\r\n        });\r\n\r\n        //\r\n        sw = findViewById(R.id.g_search_bar);\r\n        sw.setQueryHint(\"Search group name...\");\r\n\r\n        sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                myGroupAdapter.filter(query);\r\n                hideKeyboard(GroupActivity.this);\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                myGroupAdapter.filter(newText);\r\n                return true;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    public static void hideKeyboard(Activity activity) {\r\n        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n        //Find the currently focused view, so we can grab the correct window token from it.\r\n        View view = activity.getCurrentFocus();\r\n        //If no view currently has focus, create a new one, just so we can grab a window token from it\r\n        if (view == null) {\r\n            view = new View(activity);\r\n        }\r\n        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n    }\r\n\r\n    private void openLoginActivity(){\r\n        Intent intent = new Intent(this, LoginActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void openCodeDialogFragment(){\r\n        CodeDialogFragment codeDialogFragment = new CodeDialogFragment();\r\n        codeDialogFragment.show(getSupportFragmentManager(),\"codeDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * Add to events inside DataChanged method so we don't lose the results\r\n     */\r\n    public void addToGroupArray(Group tempEv){\r\n        lstGroup.add(tempEv);\r\n    }\r\n\r\n    /**\r\n     * Clear events inside DataChanged method\r\n     */\r\n    public void clearEvents(){\r\n        lstGroup.clear();\r\n    }\r\n\r\n    /**\r\n     * Set events inside DataChanged method\r\n     */\r\n    public void setGroups(){\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) findViewById(R.id.g_recycler_view);\r\n        //create Adapter with lstEvent in this context\r\n        myGroupAdapter = new GroupRecyclerViewAdapter(this, lstGroup, getSupportFragmentManager(), uID);\r\n        //separate the Recyclerview to 3 columns\r\n        myRv.setLayoutManager(new GridLayoutManager(this, 3));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myGroupAdapter);\r\n    }\r\n\r\n    /**\r\n     * Called on selecting item from navigation list\r\n     */\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.nav_events:\r\n                clearBackstack();\r\n                openEventActivity();\r\n                Toast.makeText(this, \"nav_events\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_calendar:\r\n                clearBackstack();\r\n                openCalendarFragment();\r\n                Toast.makeText(this, \"nav_calendar\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_groups:\r\n                Toast.makeText(this, \"nav_groups\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_profile:\r\n                Toast.makeText(this, \"nav_profile\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_settings:\r\n                Toast.makeText(this, \"nav_settings\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_logout:\r\n                Toast.makeText(this, \"nav_logout\", Toast.LENGTH_SHORT).show();\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n                break;\r\n\r\n            default:\r\n                Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n\r\n        //close drawer on item clicked\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    private void clearBackstack(){\r\n        for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {\r\n            getSupportFragmentManager().popBackStack();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * open event activity\r\n     */\r\n    private void openEventActivity(){\r\n        Intent intent = new Intent(this, EventActivity.class);\r\n        intent.putExtra(\"USER\", uID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open create event fragment\r\n     */\r\n    private void openCreateGroupFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_group_container, new CreateGroupFragment(uID))\r\n                .addToBackStack(\"CreateGroupFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * open calendar event fragment\r\n     */\r\n    private void openCalendarFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CalendarFragment())\r\n                .addToBackStack(\"CalendarFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * Called when the activity is exiting\r\n     */\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        lstGroup.clear();\r\n        reference.child(uID).child(\"online\").setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * Called when the activity started\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n    @Override\r\n    public void applyCode(String code) {\r\n        mCode = code;\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseGroupRef;\r\n        databaseGroupRef = FirebaseDatabase.getInstance().getReference().child(\"GROUP\");\r\n\r\n        databaseGroupRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (final DataSnapshot group : snapshot.getChildren()) {\r\n\r\n                    if ((group.child(\"invite_code\").getValue().toString()).equals(mCode)) {\r\n                        //Create temporary Group\r\n                        final Group tempGrp;\r\n                        tempGrp = new Group();\r\n\r\n                        tempGrp.setGroup_name(group.child(\"group_name\").getValue().toString());\r\n                        tempGrp.setGroup_owner(group.child(\"group_owner\").getValue().toString());\r\n                        tempGrp.setInvite_code(group.child(\"invite_code\").getValue().toString());\r\n\r\n                        final ArrayList<String> joined_members = new ArrayList<>();\r\n                        group.getRef().child(\"joined_members\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                for (DataSnapshot member : snapshot.getChildren()) {\r\n                                    joined_members.add(member.getValue().toString());\r\n                                }\r\n\r\n                                joined_members.add(uID);\r\n\r\n                                group.getRef().child(\"joined_members\").setValue(joined_members);\r\n\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/GroupActivity.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/GroupActivity.java	(date 1608987886831)
-@@ -1,13 +1,5 @@
- package com.example.pabs;
- 
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.ActionBarDrawerToggle;
--import androidx.appcompat.app.AppCompatActivity;
--import androidx.core.view.GravityCompat;
--import androidx.drawerlayout.widget.DrawerLayout;
--import androidx.recyclerview.widget.GridLayoutManager;
--import androidx.recyclerview.widget.RecyclerView;
--
- import android.annotation.SuppressLint;
- import android.app.Activity;
- import android.content.Intent;
-@@ -20,6 +12,14 @@
- import android.widget.SearchView;
- import android.widget.Toast;
- 
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.ActionBarDrawerToggle;
-+import androidx.appcompat.app.AppCompatActivity;
-+import androidx.core.view.GravityCompat;
-+import androidx.drawerlayout.widget.DrawerLayout;
-+import androidx.recyclerview.widget.GridLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
- import com.example.pabs.Adapters.GroupRecyclerViewAdapter;
- import com.example.pabs.Fragments.CalendarFragment;
- import com.example.pabs.Fragments.GroupFragment.CodeDialogFragment;
-@@ -40,24 +40,39 @@
-     private ImageView create_group_img_btn;
-     private ImageView open_event_img_btn;
-     private ImageView group_code_img_btn;
-+    private SearchView sw;
-+
-+    //drawer
-+    private DrawerLayout drawer = null;
-+    private NavigationView navigationView = null;
- 
-     //firebase
-     private DatabaseReference reference;
-     private String uID;
- 
--    //events
-+    //groups
-     private ArrayList<Group> lstGroup = new ArrayList<>();
- 
--    //drawer
--    private DrawerLayout drawer = null;
--    private NavigationView navigationView = null;
--
--    private String mCode;
--
--    //
--    private SearchView sw;
-+    //adapter
-     private GroupRecyclerViewAdapter myGroupAdapter;
- 
-+    //data
-+    private String mCode;
-+
-+    /**
-+     * hideKeyboard
-+     */
-+    public static void hideKeyboard(Activity activity) {
-+        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
-+        //Find the currently focused view, so we can grab the correct window token from it.
-+        View view = activity.getCurrentFocus();
-+        //If no view currently has focus, create a new one, just so we can grab a window token from it
-+        if (view == null) {
-+            view = new View(activity);
-+        }
-+        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
-+    }
-+
-     /**
-      * On create
-      */
-@@ -70,13 +85,13 @@
-         //get uid of logged in user
-         uID = getIntent().getStringExtra("USER");
- 
-+        //init data for group
-+        lstGroup = new ArrayList<>();
-+
-         //firebase database -> get reference to USER table
-         reference = FirebaseDatabase.getInstance().getReference().child("USER");
- 
--        //set data for events example
--        lstGroup = new ArrayList<>();
--
--        //Getting events from database and setting them to recyclerview
-+        //Getting groups from database and setting them to recyclerview
-         DatabaseReference databaseGroupRef;
-         databaseGroupRef = FirebaseDatabase.getInstance().getReference().child("GROUP");
- 
-@@ -93,22 +108,24 @@
-                     tempGrp.setGroup_name(group.child("group_name").getValue().toString());
-                     tempGrp.setGroup_owner(group.child("group_owner").getValue().toString());
-                     tempGrp.setInvite_code(group.child("invite_code").getValue().toString());
-+                    tempGrp.setGroup_id(group.child("group_id").getValue().toString());
-+
- 
--                    final ArrayList<String> joined_members =  new ArrayList<>();
-+                    final ArrayList<String> joined_members = new ArrayList<>();
-                     group.getRef().child("joined_members").addListenerForSingleValueEvent(new ValueEventListener() {
-                         @Override
-                         public void onDataChange(@NonNull DataSnapshot snapshot) {
--                            for (DataSnapshot member : snapshot.getChildren()){
-+                            for (DataSnapshot member : snapshot.getChildren()) {
-                                 joined_members.add(member.getValue().toString());
-                             }
- 
-                             tempGrp.setMember_list(joined_members);
- 
--                            if(joined_members.contains(uID) || uID.equals(tempGrp.getGroup_owner())){
--                                //add events to array
-+                            if (joined_members.contains(uID) || uID.equals(tempGrp.getGroup_owner())) {
-+                                //add groups to array
-                                 addToGroupArray(tempGrp);
- 
--                                //Set and show events on main screen
-+                                //Set and show groups on main screen
-                                 setGroups();
-                             }
-                         }
-@@ -211,10 +228,18 @@
-             }
-         });
- 
--        //
-+        //search view
-         sw = findViewById(R.id.g_search_bar);
-         sw.setQueryHint("Search group name...");
- 
-+        sw.setOnCloseListener(new SearchView.OnCloseListener() {
-+            @Override
-+            public boolean onClose() {
-+                hideKeyboard(GroupActivity.this);
-+                return false;
-+            }
-+        });
-+
-         sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
-             @Override
-             public boolean onQueryTextSubmit(String query) {
-@@ -232,47 +257,34 @@
- 
-     }
- 
--
--
--    public static void hideKeyboard(Activity activity) {
--        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
--        //Find the currently focused view, so we can grab the correct window token from it.
--        View view = activity.getCurrentFocus();
--        //If no view currently has focus, create a new one, just so we can grab a window token from it
--        if (view == null) {
--            view = new View(activity);
--        }
--        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
--    }
--
--    private void openLoginActivity(){
-+    private void openLoginActivity() {
-         Intent intent = new Intent(this, LoginActivity.class);
-         startActivity(intent);
-     }
- 
--    private void openCodeDialogFragment(){
-+    private void openCodeDialogFragment() {
-         CodeDialogFragment codeDialogFragment = new CodeDialogFragment();
--        codeDialogFragment.show(getSupportFragmentManager(),"codeDialogFragment");
-+        codeDialogFragment.show(getSupportFragmentManager(), "codeDialogFragment");
-     }
- 
-     /**
-      * Add to events inside DataChanged method so we don't lose the results
-      */
--    public void addToGroupArray(Group tempEv){
-+    public void addToGroupArray(Group tempEv) {
-         lstGroup.add(tempEv);
-     }
- 
-     /**
-      * Clear events inside DataChanged method
-      */
--    public void clearEvents(){
-+    public void clearEvents() {
-         lstGroup.clear();
-     }
- 
-     /**
-      * Set events inside DataChanged method
-      */
--    public void setGroups(){
-+    public void setGroups() {
-         //create and set RecyclerView
-         RecyclerView myRv = (RecyclerView) findViewById(R.id.g_recycler_view);
-         //create Adapter with lstEvent in this context
-@@ -289,7 +301,7 @@
-     @SuppressLint("NonConstantResourceId")
-     @Override
-     public boolean onNavigationItemSelected(@NonNull MenuItem item) {
--        switch (item.getItemId()){
-+        switch (item.getItemId()) {
-             case R.id.nav_events:
-                 clearBackstack();
-                 openEventActivity();
-@@ -330,8 +342,8 @@
-         return true;
-     }
- 
--    private void clearBackstack(){
--        for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-+    private void clearBackstack() {
-+        for (int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-             getSupportFragmentManager().popBackStack();
-         }
-     }
-@@ -339,16 +351,17 @@
-     /**
-      * open event activity
-      */
--    private void openEventActivity(){
-+    private void openEventActivity() {
-         Intent intent = new Intent(this, EventActivity.class);
-         intent.putExtra("USER", uID);
-+        finish();
-         startActivity(intent);
-     }
- 
-     /**
-      * open create event fragment
-      */
--    private void openCreateGroupFragment(){
-+    private void openCreateGroupFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_group_container, new CreateGroupFragment(uID))
-@@ -359,7 +372,7 @@
-     /**
-      * open calendar event fragment
-      */
--    private void openCalendarFragment(){
-+    private void openCalendarFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_event_container, new CalendarFragment())
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/EventOptionsDialogFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.EventFragment;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatDialogFragment;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.pabs.R;\r\n\r\nimport static android.view.View.GONE;\r\n\r\n/**\r\n * Sets Nickname for new Users\r\n */\r\n\r\npublic class EventOptionsDialogFragment extends AppCompatDialogFragment {\r\n\r\n    //edittext\r\n    private  EventOptionsDialogListener eventOptionsDialogListener;\r\n    //dialog\r\n    private Dialog dialog;\r\n    //ImageView\r\n    private ImageView upChImg;\r\n    private ImageView repetitionImg;\r\n    private ImageView addKickStaffImg;\r\n    private ImageView reminderImg;\r\n    private ImageView descriptionImg;\r\n    private ImageView closeEventImg;\r\n    private ImageView toDoImg;\r\n    private ImageView joinLeaveEventImg;\r\n    private ImageView exitImg;\r\n\r\n    private LinearLayout upChLinL;\r\n    private LinearLayout repetitionLinL;\r\n    private LinearLayout addKickStaffLinL;\r\n    private LinearLayout reminderLinL;\r\n    private LinearLayout descriptionLinL;\r\n    private LinearLayout closeEventLinL;\r\n    private LinearLayout toDoLinL;\r\n    private LinearLayout joinLeaveEventLinL;\r\n    private TextView joinLeaveEventTv;\r\n\r\n    private int mState;\r\n\r\n    public void setListener(EventOptionsDialogListener eventOptionsDialogListener, int state) {\r\n        this.eventOptionsDialogListener = eventOptionsDialogListener;\r\n        this.mState = state;\r\n    }\r\n\r\n    /**\r\n     * When the dialog is created\r\n     */\r\n    @Override\r\n    public Dialog onCreateDialog(Bundle savedInstanceState){\r\n        //setting view\r\n        LayoutInflater inflater = getActivity().getLayoutInflater();\r\n        View view = inflater.inflate(R.layout.fragment_dialog_event_options, null);\r\n\r\n        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);\r\n\r\n        upChImg = view.findViewById(R.id.f_e_o_UpChImg);\r\n        repetitionImg = view.findViewById(R.id.f_e_o_RepetitionImg);\r\n        addKickStaffImg = view.findViewById(R.id.f_e_o_AddKickStaffImg);\r\n        reminderImg = view.findViewById(R.id.f_e_o_ReminderImg);\r\n        descriptionImg = view.findViewById(R.id.f_e_o_DescriptionImg);\r\n        closeEventImg = view.findViewById(R.id.f_e_o_CloseEventImg);\r\n        toDoImg = view.findViewById(R.id.f_e_o_ToDoImg);\r\n        joinLeaveEventImg = view.findViewById(R.id.f_e_o_JoinLeaveEventImg);\r\n        exitImg = view.findViewById(R.id.f_e_o_exitImg);\r\n\r\n        upChLinL = view.findViewById(R.id.f_e_o_lr8);\r\n        repetitionLinL = view.findViewById(R.id.f_e_o_lr7);\r\n        addKickStaffLinL = view.findViewById(R.id.f_e_o_lr6);\r\n        reminderLinL = view.findViewById(R.id.f_e_o_lr5);\r\n        descriptionLinL = view.findViewById(R.id.f_e_o_lr4);\r\n        closeEventLinL = view.findViewById(R.id.f_e_o_lr3);\r\n        toDoLinL = view.findViewById(R.id.f_e_o_lr2);\r\n        joinLeaveEventLinL = view.findViewById(R.id.f_e_o_lr1);\r\n\r\n        joinLeaveEventTv = view.findViewById(R.id.f_e_o_lr1_tv);\r\n\r\n        upChImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.UpCh();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        repetitionImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.Repetition();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        addKickStaffImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.AddKickStaff();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        reminderImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.Reminder();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        descriptionImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.Description();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        closeEventImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.CloseEvent();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        toDoImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.ToDo();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        joinLeaveEventImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                eventOptionsDialogListener.JoinLeaveEvent();\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        exitImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        dialog.setContentView(view);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n\r\n\r\n        if(mState == 0){\r\n            //owner\r\n            hideJoinLeaveEvent();\r\n        }\r\n        else if(mState == 1){\r\n            //member\r\n            hideAddKickStaff();\r\n            hideCloseEvent();\r\n            hideCreateViewTodo();\r\n            hideDescription();\r\n            hideUploadChangeImage();\r\n            joinLeaveEventTv.setText(\"Leave Event\");\r\n\r\n        }else if(mState == 2){\r\n            //staff\r\n            hideAddKickStaff();\r\n            hideCloseEvent();\r\n            hideDescription();\r\n            hideUploadChangeImage();\r\n            joinLeaveEventTv.setText(\"Leave Event\");\r\n\r\n        }else if(mState == 3){\r\n            //no joined\r\n            hideAddKickStaff();\r\n            hideCloseEvent();\r\n            hideCreateViewTodo();\r\n            hideDescription();\r\n            hideUploadChangeImage();\r\n            hideReminder();\r\n            hideRepetition();\r\n            joinLeaveEventTv.setText(\"Join Event\");\r\n        }\r\n        else{\r\n            Log.d(\"EODF\", \"Wrong mState!\");\r\n        }\r\n\r\n        return dialog;\r\n    }\r\n\r\n    void hideUploadChangeImage(){\r\n        upChLinL.setVisibility(GONE);\r\n    }\r\n    void hideRepetition(){\r\n        repetitionLinL.setVisibility(GONE);\r\n    }\r\n    void hideAddKickStaff(){\r\n        addKickStaffLinL.setVisibility(GONE);\r\n    }\r\n    void hideReminder(){\r\n        reminderLinL.setVisibility(GONE);\r\n    }\r\n    void hideDescription(){\r\n        descriptionLinL.setVisibility(GONE);\r\n    }\r\n    void hideCloseEvent(){\r\n        closeEventLinL.setVisibility(GONE);\r\n    }\r\n    void hideCreateViewTodo(){\r\n        toDoLinL.setVisibility(GONE);\r\n    }\r\n    void hideJoinLeaveEvent(){\r\n        joinLeaveEventLinL.setVisibility(GONE);\r\n    }\r\n\r\n    /**\r\n     * interface to launch option elements\r\n     */\r\n    public interface EventOptionsDialogListener{\r\n        void UpCh();\r\n        void Repetition();\r\n        void AddKickStaff();\r\n        void Reminder();\r\n        void Description();\r\n        void CloseEvent();\r\n        void ToDo();\r\n        void JoinLeaveEvent();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/EventOptionsDialogFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/EventOptionsDialogFragment.java	(date 1608986752435)
-@@ -1,23 +1,18 @@
- package com.example.pabs.Fragments.EventFragment;
- 
- import android.app.Dialog;
--import android.content.Context;
- import android.graphics.Color;
- import android.graphics.drawable.ColorDrawable;
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.AppCompatDialogFragment;
--import androidx.fragment.app.Fragment;
--
- import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
--import android.view.ViewGroup;
- import android.widget.ImageView;
- import android.widget.LinearLayout;
- import android.widget.TextView;
- 
-+import androidx.appcompat.app.AppCompatDialogFragment;
-+
- import com.example.pabs.R;
- 
- import static android.view.View.GONE;
-@@ -29,7 +24,7 @@
- public class EventOptionsDialogFragment extends AppCompatDialogFragment {
- 
-     //edittext
--    private  EventOptionsDialogListener eventOptionsDialogListener;
-+    private EventOptionsDialogListener eventOptionsDialogListener;
-     //dialog
-     private Dialog dialog;
-     //ImageView
-@@ -64,7 +59,7 @@
-      * When the dialog is created
-      */
-     @Override
--    public Dialog onCreateDialog(Bundle savedInstanceState){
-+    public Dialog onCreateDialog(Bundle savedInstanceState) {
-         //setting view
-         LayoutInflater inflater = getActivity().getLayoutInflater();
-         View view = inflater.inflate(R.layout.fragment_dialog_event_options, null);
-@@ -167,11 +162,10 @@
-         dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
- 
- 
--        if(mState == 0){
-+        if (mState == 0) {
-             //owner
-             hideJoinLeaveEvent();
--        }
--        else if(mState == 1){
-+        } else if (mState == 1) {
-             //member
-             hideAddKickStaff();
-             hideCloseEvent();
-@@ -180,7 +174,7 @@
-             hideUploadChangeImage();
-             joinLeaveEventTv.setText("Leave Event");
- 
--        }else if(mState == 2){
-+        } else if (mState == 2) {
-             //staff
-             hideAddKickStaff();
-             hideCloseEvent();
-@@ -188,7 +182,7 @@
-             hideUploadChangeImage();
-             joinLeaveEventTv.setText("Leave Event");
- 
--        }else if(mState == 3){
-+        } else if (mState == 3) {
-             //no joined
-             hideAddKickStaff();
-             hideCloseEvent();
-@@ -198,50 +192,63 @@
-             hideReminder();
-             hideRepetition();
-             joinLeaveEventTv.setText("Join Event");
--        }
--        else{
-+        } else {
-             Log.d("EODF", "Wrong mState!");
-         }
- 
-         return dialog;
-     }
- 
--    void hideUploadChangeImage(){
-+    void hideUploadChangeImage() {
-         upChLinL.setVisibility(GONE);
-     }
--    void hideRepetition(){
-+
-+    void hideRepetition() {
-         repetitionLinL.setVisibility(GONE);
-     }
--    void hideAddKickStaff(){
-+
-+    void hideAddKickStaff() {
-         addKickStaffLinL.setVisibility(GONE);
-     }
--    void hideReminder(){
-+
-+    void hideReminder() {
-         reminderLinL.setVisibility(GONE);
-     }
--    void hideDescription(){
-+
-+    void hideDescription() {
-         descriptionLinL.setVisibility(GONE);
-     }
--    void hideCloseEvent(){
-+
-+    void hideCloseEvent() {
-         closeEventLinL.setVisibility(GONE);
-     }
--    void hideCreateViewTodo(){
-+
-+    void hideCreateViewTodo() {
-         toDoLinL.setVisibility(GONE);
-     }
--    void hideJoinLeaveEvent(){
-+
-+    void hideJoinLeaveEvent() {
-         joinLeaveEventLinL.setVisibility(GONE);
-     }
- 
-     /**
-      * interface to launch option elements
-      */
--    public interface EventOptionsDialogListener{
-+    public interface EventOptionsDialogListener {
-         void UpCh();
-+
-         void Repetition();
-+
-         void AddKickStaff();
-+
-         void Reminder();
-+
-         void Description();
-+
-         void CloseEvent();
-+
-         void ToDo();
-+
-         void JoinLeaveEvent();
-     }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/EventStaffFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.EventFragment;\r\n\r\nimport android.app.Activity;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.Handler;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.CalendarRecyclerViewAdapter;\r\nimport com.example.pabs.Adapters.EventRecyclerViewAdapter;\r\nimport com.example.pabs.Adapters.EventStaffRecyclerViewAdapter;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport sun.bob.mcalendarview.MarkStyle;\r\nimport sun.bob.mcalendarview.listeners.OnDateClickListener;\r\nimport sun.bob.mcalendarview.vo.DateData;\r\n\r\npublic class EventStaffFragment extends Fragment {\r\n\r\n\r\n    private View containerView;\r\n\r\n    private TextView tv;\r\n    private EditText et;\r\n    private Button addStaffBtn;\r\n    private Button removeStaffBtn;\r\n    private ImageView iv;\r\n    private EventStaffRecyclerViewAdapter myAdapter;\r\n    //database event\r\n    private DatabaseEvent databaseEvent;\r\n\r\n    EventStaffFragment(DatabaseEvent dE){\r\n        databaseEvent = dE;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_event_staff, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_event_layout);\r\n\r\n        tv = view.findViewById(R.id.f_e_s_rl1_tv);\r\n        et = view.findViewById(R.id.f_e_s_et);\r\n        addStaffBtn = view.findViewById(R.id.f_e_s_addStaffBtn);\r\n        removeStaffBtn = view.findViewById(R.id.f_e_s_removeStaffBtn);\r\n        iv = view.findViewById(R.id.f_e_s_backImg);\r\n\r\n        addStaffBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                if (!TextUtils.isEmpty(et.getText().toString())){\r\n                    final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n                    refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (final DataSnapshot event : snapshot.getChildren()) {\r\n                                //Loop 1 to go through all child nodes of users\r\n                                if(event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()){\r\n                                    final DatabaseReference refUsers = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n                                    refUsers.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                                            boolean no_name_in_database = false;\r\n                                            boolean already_staff = false;\r\n                                            boolean staff_can_be_added = false;\r\n\r\n                                            for (DataSnapshot user : snapshot.getChildren()){\r\n                                                if(user.child(\"user_name\").getValue().equals(et.getText().toString())){\r\n                                                    if(!databaseEvent.getStaff_members().contains(user.getKey())){\r\n                                                        //user can be added to staff\r\n                                                        staff_can_be_added = true;\r\n\r\n                                                        databaseEvent.addToStaffListEnd(user.getKey().toString());\r\n                                                        myAdapter.notifyDataSetChanged();\r\n                                                        et.setText(\"\");\r\n                                                        hideKeyboard(getActivity());\r\n                                                        event.getRef().child(\"staff_members\").setValue(databaseEvent.getStaff_members());\r\n                                                        break;\r\n                                                    }\r\n                                                    else{\r\n                                                        //user is already a staff\r\n                                                        already_staff = true;\r\n                                                    }\r\n                                                }\r\n                                                else{\r\n                                                    //there is no user with this name in database\r\n                                                    no_name_in_database = true;\r\n                                                }\r\n                                            }\r\n\r\n                                            if(!staff_can_be_added){\r\n                                                if(already_staff){\r\n                                                    Toast.makeText(getActivity(), \"Already staff!\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                                else if(no_name_in_database){\r\n                                                    Toast.makeText(getActivity(), \"There is no user with that name!\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            //database failed\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    Toast.makeText(getActivity(), \"Please type in a staff name!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        removeStaffBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (!TextUtils.isEmpty(et.getText().toString())){\r\n                    final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n                    refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (final DataSnapshot event : snapshot.getChildren()) {\r\n                                //Loop 1 to go through all child nodes of users\r\n                                if (event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()) {\r\n                                    final DatabaseReference refUsers = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n                                    refUsers.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            boolean no_name_in_database = false;\r\n                                            boolean already_staff = false;\r\n                                            boolean staff_can_be_added = false;\r\n\r\n                                            for (DataSnapshot user : snapshot.getChildren()) {\r\n                                                if (user.child(\"user_name\").getValue().equals(et.getText().toString())) {\r\n                                                    if (databaseEvent.getStaff_members().contains(user.getKey())) {\r\n                                                        //user can be added to staff\r\n                                                        staff_can_be_added = true;\r\n\r\n                                                        databaseEvent.deleteStaffListElement(user.getKey().toString());\r\n                                                        myAdapter.notifyDataSetChanged();\r\n                                                        et.setText(\"\");\r\n                                                        hideKeyboard(getActivity());\r\n                                                        event.getRef().child(\"staff_members\").setValue(databaseEvent.getStaff_members());\r\n                                                    } else {\r\n                                                        //user is already a staff\r\n                                                        already_staff = true;\r\n                                                    }\r\n                                                    break;\r\n                                                } else {\r\n                                                    //there is no user with this name in database\r\n                                                    no_name_in_database = true;\r\n                                                }\r\n                                            }\r\n\r\n                                            if(!staff_can_be_added){\r\n                                                if(already_staff){\r\n                                                    Toast.makeText(getActivity(), \"Already staff!\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                                else if(no_name_in_database){\r\n                                                    Toast.makeText(getActivity(), \"There is no user with that name!\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            //database failed\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    Toast.makeText(getActivity(), \"Please type in a staff name!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        iv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                clearBackstack();\r\n            }\r\n        });\r\n\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) view.findViewById(R.id.f_e_s_recyclerView);\r\n        //create Adapter with lstEvent in this context\r\n        myAdapter = new EventStaffRecyclerViewAdapter(getActivity(), databaseEvent.getStaff_members());\r\n        // set layout\r\n        myRv.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myAdapter);\r\n\r\n        myAdapter.notifyDataSetChanged();\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    public static void hideKeyboard(Activity activity) {\r\n        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n        //Find the currently focused view, so we can grab the correct window token from it.\r\n        View view = activity.getCurrentFocus();\r\n        //If no view currently has focus, create a new one, just so we can grab a window token from it\r\n        if (view == null) {\r\n            view = new View(activity);\r\n        }\r\n        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n    }\r\n\r\n    /**\r\n     * clearBackstack\r\n     */\r\n    public void clearBackstack(){\r\n        //clear all backstact\r\n        getActivity().getSupportFragmentManager().popBackStack(\"EventStaffFragment\", 1);\r\n    }\r\n\r\n    /**\r\n     * onStart\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n    }\r\n\r\n    /**\r\n     * onStop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/EventStaffFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/EventStaffFragment.java	(date 1608986752357)
-@@ -1,18 +1,8 @@
- package com.example.pabs.Fragments.EventFragment;
- 
- import android.app.Activity;
--import android.graphics.Color;
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.fragment.app.Fragment;
--import androidx.recyclerview.widget.GridLayoutManager;
--import androidx.recyclerview.widget.LinearLayoutManager;
--import androidx.recyclerview.widget.RecyclerView;
--
--import android.os.Handler;
- import android.text.TextUtils;
--import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
-@@ -23,8 +13,11 @@
- import android.widget.TextView;
- import android.widget.Toast;
- 
--import com.example.pabs.Adapters.CalendarRecyclerViewAdapter;
--import com.example.pabs.Adapters.EventRecyclerViewAdapter;
-+import androidx.annotation.NonNull;
-+import androidx.fragment.app.Fragment;
-+import androidx.recyclerview.widget.LinearLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
- import com.example.pabs.Adapters.EventStaffRecyclerViewAdapter;
- import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.R;
-@@ -34,13 +27,6 @@
- import com.google.firebase.database.FirebaseDatabase;
- import com.google.firebase.database.ValueEventListener;
- 
--import java.util.ArrayList;
--import java.util.List;
--
--import sun.bob.mcalendarview.MarkStyle;
--import sun.bob.mcalendarview.listeners.OnDateClickListener;
--import sun.bob.mcalendarview.vo.DateData;
--
- public class EventStaffFragment extends Fragment {
- 
- 
-@@ -53,12 +39,23 @@
-     private ImageView iv;
-     private EventStaffRecyclerViewAdapter myAdapter;
-     //database event
--    private DatabaseEvent databaseEvent;
-+    private final DatabaseEvent databaseEvent;
- 
--    EventStaffFragment(DatabaseEvent dE){
-+    EventStaffFragment(DatabaseEvent dE) {
-         databaseEvent = dE;
-     }
- 
-+    public static void hideKeyboard(Activity activity) {
-+        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
-+        //Find the currently focused view, so we can grab the correct window token from it.
-+        View view = activity.getCurrentFocus();
-+        //If no view currently has focus, create a new one, just so we can grab a window token from it
-+        if (view == null) {
-+            view = new View(activity);
-+        }
-+        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
-+    }
-+
-     @Override
-     public void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-@@ -83,14 +80,14 @@
-             @Override
-             public void onClick(View view) {
- 
--                if (!TextUtils.isEmpty(et.getText().toString())){
-+                if (!TextUtils.isEmpty(et.getText().toString())) {
-                     final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
-                     refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
-                         @Override
-                         public void onDataChange(@NonNull DataSnapshot snapshot) {
-                             for (final DataSnapshot event : snapshot.getChildren()) {
-                                 //Loop 1 to go through all child nodes of users
--                                if(event.child("event_name").getValue() == databaseEvent.getEvent_name()){
-+                                if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
-                                     final DatabaseReference refUsers = FirebaseDatabase.getInstance().getReference().child("USER");
-                                     refUsers.addListenerForSingleValueEvent(new ValueEventListener() {
-                                         @Override
-@@ -100,35 +97,32 @@
-                                             boolean already_staff = false;
-                                             boolean staff_can_be_added = false;
- 
--                                            for (DataSnapshot user : snapshot.getChildren()){
--                                                if(user.child("user_name").getValue().equals(et.getText().toString())){
--                                                    if(!databaseEvent.getStaff_members().contains(user.getKey())){
-+                                            for (DataSnapshot user : snapshot.getChildren()) {
-+                                                if (user.child("user_name").getValue().equals(et.getText().toString())) {
-+                                                    if (!databaseEvent.getStaff_members().contains(user.getKey())) {
-                                                         //user can be added to staff
-                                                         staff_can_be_added = true;
- 
--                                                        databaseEvent.addToStaffListEnd(user.getKey().toString());
-+                                                        databaseEvent.addToStaffListEnd(user.getKey());
-                                                         myAdapter.notifyDataSetChanged();
-                                                         et.setText("");
-                                                         hideKeyboard(getActivity());
-                                                         event.getRef().child("staff_members").setValue(databaseEvent.getStaff_members());
-                                                         break;
--                                                    }
--                                                    else{
-+                                                    } else {
-                                                         //user is already a staff
-                                                         already_staff = true;
-                                                     }
--                                                }
--                                                else{
-+                                                } else {
-                                                     //there is no user with this name in database
-                                                     no_name_in_database = true;
-                                                 }
-                                             }
- 
--                                            if(!staff_can_be_added){
--                                                if(already_staff){
-+                                            if (!staff_can_be_added) {
-+                                                if (already_staff) {
-                                                     Toast.makeText(getActivity(), "Already staff!", Toast.LENGTH_SHORT).show();
--                                                }
--                                                else if(no_name_in_database){
-+                                                } else if (no_name_in_database) {
-                                                     Toast.makeText(getActivity(), "There is no user with that name!", Toast.LENGTH_SHORT).show();
-                                                 }
-                                             }
-@@ -150,8 +144,7 @@
-                             //database failed
-                         }
-                     });
--                }
--                else{
-+                } else {
-                     Toast.makeText(getActivity(), "Please type in a staff name!", Toast.LENGTH_SHORT).show();
-                 }
-             }
-@@ -160,7 +153,7 @@
-         removeStaffBtn.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
--                if (!TextUtils.isEmpty(et.getText().toString())){
-+                if (!TextUtils.isEmpty(et.getText().toString())) {
-                     final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
-                     refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
-                         @Override
-@@ -182,7 +175,7 @@
-                                                         //user can be added to staff
-                                                         staff_can_be_added = true;
- 
--                                                        databaseEvent.deleteStaffListElement(user.getKey().toString());
-+                                                        databaseEvent.deleteStaffListElement(user.getKey());
-                                                         myAdapter.notifyDataSetChanged();
-                                                         et.setText("");
-                                                         hideKeyboard(getActivity());
-@@ -198,11 +191,10 @@
-                                                 }
-                                             }
- 
--                                            if(!staff_can_be_added){
--                                                if(already_staff){
-+                                            if (!staff_can_be_added) {
-+                                                if (already_staff) {
-                                                     Toast.makeText(getActivity(), "Already staff!", Toast.LENGTH_SHORT).show();
--                                                }
--                                                else if(no_name_in_database){
-+                                                } else if (no_name_in_database) {
-                                                     Toast.makeText(getActivity(), "There is no user with that name!", Toast.LENGTH_SHORT).show();
-                                                 }
-                                             }
-@@ -223,8 +215,7 @@
-                             //database failed
-                         }
-                     });
--                }
--                else{
-+                } else {
-                     Toast.makeText(getActivity(), "Please type in a staff name!", Toast.LENGTH_SHORT).show();
-                 }
- 
-@@ -252,22 +243,10 @@
-         return view;
-     }
- 
--
--    public static void hideKeyboard(Activity activity) {
--        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
--        //Find the currently focused view, so we can grab the correct window token from it.
--        View view = activity.getCurrentFocus();
--        //If no view currently has focus, create a new one, just so we can grab a window token from it
--        if (view == null) {
--            view = new View(activity);
--        }
--        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
--    }
--
-     /**
-      * clearBackstack
-      */
--    public void clearBackstack(){
-+    public void clearBackstack() {
-         //clear all backstact
-         getActivity().getSupportFragmentManager().popBackStack("EventStaffFragment", 1);
-     }
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/EventDescriptionFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.EventFragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class EventDescriptionFragment extends Fragment {\r\n\r\n    private View containerView;\r\n\r\n    private TextView tv;\r\n    private EditText et;\r\n    private ImageView iv;\r\n    private Button setDescBtn;\r\n\r\n    //database event\r\n    private DatabaseEvent databaseEvent;\r\n\r\n    EventDescriptionFragment(DatabaseEvent dE){\r\n        databaseEvent = dE;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_event_description, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_event_layout);\r\n\r\n        tv = view.findViewById(R.id.f_e_d_tv);\r\n        et = view.findViewById(R.id.f_e_d_et);\r\n        iv = view.findViewById(R.id.f_e_d_backImg);\r\n        setDescBtn = view.findViewById(R.id.f_e_d_setDescBtn);\r\n\r\n        if(databaseEvent.getDescription() != null){\r\n            et.setText(databaseEvent.getDescription());\r\n        }\r\n\r\n        iv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                clearBackstack();\r\n            }\r\n        });\r\n\r\n        setDescBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n                refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        for (DataSnapshot event : snapshot.getChildren()) {\r\n                            //Loop 1 to go through all child nodes of users\r\n                            if(event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()){\r\n                                databaseEvent.setDescription(et.getText().toString());\r\n                                refEvent.child(event.getKey()).child(\"description\").setValue(databaseEvent.getDescription());\r\n                                Log.d(\"EDF\", \"onDataChange: Successful\");\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        //database failed\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    /**\r\n     * clearBackstack\r\n     */\r\n    public void clearBackstack(){\r\n        //clear all backstact\r\n        getActivity().getSupportFragmentManager().popBackStack(\"EventDescriptionFragment\", 1);\r\n    }\r\n\r\n    /**\r\n     * onStart\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n    }\r\n\r\n    /**\r\n     * onStop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/EventDescriptionFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/EventDescriptionFragment.java	(date 1608986752511)
-@@ -1,10 +1,6 @@
- package com.example.pabs.Fragments.EventFragment;
- 
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.fragment.app.Fragment;
--
- import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
-@@ -14,6 +10,9 @@
- import android.widget.ImageView;
- import android.widget.TextView;
- 
-+import androidx.annotation.NonNull;
-+import androidx.fragment.app.Fragment;
-+
- import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.R;
- import com.google.firebase.database.DataSnapshot;
-@@ -32,9 +31,9 @@
-     private Button setDescBtn;
- 
-     //database event
--    private DatabaseEvent databaseEvent;
-+    private final DatabaseEvent databaseEvent;
- 
--    EventDescriptionFragment(DatabaseEvent dE){
-+    EventDescriptionFragment(DatabaseEvent dE) {
-         databaseEvent = dE;
-     }
- 
-@@ -56,7 +55,7 @@
-         iv = view.findViewById(R.id.f_e_d_backImg);
-         setDescBtn = view.findViewById(R.id.f_e_d_setDescBtn);
- 
--        if(databaseEvent.getDescription() != null){
-+        if (databaseEvent.getDescription() != null) {
-             et.setText(databaseEvent.getDescription());
-         }
- 
-@@ -76,7 +75,7 @@
-                     public void onDataChange(@NonNull DataSnapshot snapshot) {
-                         for (DataSnapshot event : snapshot.getChildren()) {
-                             //Loop 1 to go through all child nodes of users
--                            if(event.child("event_name").getValue() == databaseEvent.getEvent_name()){
-+                            if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
-                                 databaseEvent.setDescription(et.getText().toString());
-                                 refEvent.child(event.getKey()).child("description").setValue(databaseEvent.getDescription());
-                                 Log.d("EDF", "onDataChange: Successful");
-@@ -98,7 +97,7 @@
-     /**
-      * clearBackstack
-      */
--    public void clearBackstack(){
-+    public void clearBackstack() {
-         //clear all backstact
-         getActivity().getSupportFragmentManager().popBackStack("EventDescriptionFragment", 1);
-     }
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/EventFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>    package com.example.pabs.Fragments.EventFragment;\r\n\r\n    import android.app.Activity;\r\n    import android.app.ProgressDialog;\r\n    import android.content.ContentResolver;\r\n    import android.content.Intent;\r\n    import android.graphics.Bitmap;\r\n    import android.net.Uri;\r\n    import android.os.Bundle;\r\n\r\n    import androidx.annotation.NonNull;\r\n    import androidx.fragment.app.Fragment;\r\n\r\n    import android.os.Handler;\r\n    import android.provider.MediaStore;\r\n    import android.util.Log;\r\n    import android.view.LayoutInflater;\r\n    import android.view.View;\r\n    import android.view.ViewGroup;\r\n    import android.webkit.MimeTypeMap;\r\n    import android.widget.Button;\r\n    import android.widget.ImageView;\r\n    import android.widget.TextView;\r\n    import android.widget.Toast;\r\n\r\n    import com.example.pabs.Models.DatabaseEvent;\r\n    import com.example.pabs.R;\r\n    import com.google.android.gms.maps.CameraUpdateFactory;\r\n    import com.google.android.gms.maps.GoogleMap;\r\n    import com.google.android.gms.maps.MapView;\r\n    import com.google.android.gms.maps.OnMapReadyCallback;\r\n    import com.google.android.gms.maps.model.LatLng;\r\n    import com.google.android.gms.maps.model.MarkerOptions;\r\n    import com.google.android.gms.tasks.Continuation;\r\n    import com.google.android.gms.tasks.OnCompleteListener;\r\n    import com.google.android.gms.tasks.OnFailureListener;\r\n    import com.google.android.gms.tasks.OnSuccessListener;\r\n    import com.google.android.gms.tasks.Task;\r\n    import com.google.firebase.database.DataSnapshot;\r\n    import com.google.firebase.database.DatabaseError;\r\n    import com.google.firebase.database.DatabaseReference;\r\n    import com.google.firebase.database.FirebaseDatabase;\r\n    import com.google.firebase.database.Query;\r\n    import com.google.firebase.database.ValueEventListener;\r\n    import com.google.firebase.storage.FirebaseStorage;\r\n    import com.google.firebase.storage.StorageReference;\r\n    import com.google.firebase.storage.StorageTask;\r\n    import com.google.firebase.storage.UploadTask;\r\n    import com.squareup.picasso.Picasso;\r\n\r\n    import java.io.FileNotFoundException;\r\n    import java.io.IOException;\r\n    import java.util.ArrayList;\r\n    import java.util.List;\r\n\r\n    /**\r\n     * Handle an event\r\n     */\r\n\r\n    public class EventFragment extends Fragment implements OnMapReadyCallback, EventOptionsDialogFragment.EventOptionsDialogListener {\r\n\r\n        public static final int GET_FROM_GALLERY = 3;\r\n        private static final String TAG = \"EventFragment\";\r\n        //UI\r\n        private Button back_button;\r\n        private Button plus_button;\r\n        private View containerView;\r\n        private ProgressDialog mDialog = null;\r\n\r\n        private MapView mapView;\r\n\r\n        private TextView event_name_tv;\r\n        private TextView event_date_start_tv;\r\n        private TextView event_date_end_tv;\r\n        private TextView event_description_tv;\r\n        private TextView location_text_tv;\r\n\r\n        //map\r\n        private GoogleMap mMap;\r\n\r\n        //database event\r\n        private DatabaseEvent databaseEvent;\r\n\r\n        //image handling\r\n        private ImageView image_view;\r\n        private StorageReference mStorageRef;\r\n        public Uri imgUri;\r\n        private StorageTask<UploadTask.TaskSnapshot> uploadTask;\r\n\r\n        private String mUID;\r\n        private int mState;\r\n        /**\r\n         * Constructor\r\n         */\r\n        public EventFragment(DatabaseEvent dbE, String uID) {\r\n            databaseEvent = dbE;\r\n            mUID = uID;\r\n        }\r\n\r\n        /**\r\n         * On Create\r\n         */\r\n        @Override\r\n        public void onCreate(Bundle savedInstanceState) {\r\n            super.onCreate(savedInstanceState);\r\n        }\r\n\r\n        /**\r\n         * On Create View\r\n         */\r\n        @Override\r\n        public View onCreateView(LayoutInflater inflater, final ViewGroup container,\r\n                                 Bundle savedInstanceState) {\r\n            // Inflate the layout for this fragment\r\n            View view = inflater.inflate(R.layout.fragment_event, container, false);\r\n            containerView = getActivity().findViewById(R.id.activity_event_layout);\r\n\r\n            //init UI\r\n            event_name_tv = view.findViewById(R.id.fe_event_name);\r\n            event_date_start_tv = view.findViewById(R.id.fe_event_date_start);\r\n            event_date_end_tv = view.findViewById(R.id.fe_event_date_end);\r\n            event_description_tv = view.findViewById(R.id.fe_event_description);\r\n            location_text_tv = view.findViewById(R.id.fe_location_text);\r\n            image_view = view.findViewById(R.id.fe_event_image);\r\n\r\n            if(databaseEvent.getThumbnail() != null){\r\n                //set image if it's not null\r\n                Uri myUri = Uri.parse(databaseEvent.getThumbnail());\r\n\r\n                //Picasso license\r\n                Picasso.get().load(myUri).into(image_view);\r\n            }\r\n\r\n            if(databaseEvent.getDescription() != null){\r\n                event_description_tv.setText(databaseEvent.getDescription());\r\n            }\r\n\r\n            //setting text in UI with databaseEvent data\r\n            event_name_tv.setText(databaseEvent.getEvent_name());\r\n            event_date_start_tv.setText(databaseEvent.getStart_date());\r\n            event_date_end_tv.setText(databaseEvent.getEnd_date());\r\n            event_description_tv.setText(databaseEvent.getDescription());\r\n            location_text_tv.setText(databaseEvent.getLocation_name());\r\n\r\n            //back button\r\n            back_button = view.findViewById(R.id.fe_back_button);\r\n\r\n            back_button.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    //clear all backstack\r\n                    clearBackstack();\r\n                }\r\n            });\r\n\r\n            //delete button to delete event\r\n            plus_button = view.findViewById(R.id.fe_plus_button);\r\n\r\n            plus_button.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    openEventOptionsDialogFragment();\r\n                }\r\n            });\r\n\r\n            //get reference to firebase storage \"Images/\" path\r\n            mStorageRef = FirebaseStorage.getInstance().getReference(\"Images\");\r\n\r\n            // Gets the MapView from the XML layout and creates it\r\n            mapView = (MapView) view.findViewById(R.id.fe_map);\r\n            mapView.onCreate(savedInstanceState);\r\n\r\n            //Sync Map View\r\n            mapView.getMapAsync(this);\r\n\r\n            mState = getStatus();\r\n\r\n            return view;\r\n        }\r\n\r\n        private int getStatus(){\r\n            if(mUID.equals(databaseEvent.getOwner_id())){\r\n                //owner\r\n                return 0;\r\n            }\r\n            else if(databaseEvent.getJoined_members().contains(mUID)){\r\n                //member\r\n                return 1;\r\n            }\r\n            else if(databaseEvent.getStaff_members().contains(mUID)){\r\n                //staff\r\n                return 2;\r\n            }\r\n            else{\r\n                //not joined\r\n                return 3;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * open event dialog fragment\r\n         */\r\n        private void openEventOptionsDialogFragment(){\r\n            EventOptionsDialogFragment eventOptionsDialogFragment = new EventOptionsDialogFragment();\r\n            eventOptionsDialogFragment.setListener(EventFragment.this, mState);\r\n            eventOptionsDialogFragment.setCancelable(false);\r\n            eventOptionsDialogFragment.show(getActivity().getSupportFragmentManager(),\"eventDialogFragment\");\r\n        }\r\n\r\n        /**\r\n         * delete Image\r\n         */\r\n        private void deleteImage(DataSnapshot dataSnapshot){\r\n            //clear image\r\n            if(dataSnapshot.child(\"thumbnail\").getValue() != null) {\r\n                //init firebase storage\r\n                FirebaseStorage mFirebaseStorage = FirebaseStorage.getInstance();\r\n\r\n                //reference to photo shown in this event\r\n                StorageReference photoRef = mFirebaseStorage.getReferenceFromUrl(dataSnapshot.child(\"thumbnail\").getValue().toString());\r\n\r\n                //delete the photo from firebase storage\r\n                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        // File deleted successfully\r\n                        Log.d(TAG, \"onSuccess: deleted file\");\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception exception) {\r\n                        // Uh-oh, an error occurred!\r\n                        Log.d(TAG, \"onFailure: did not delete file\");\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        /**\r\n         * fileUploader\r\n         */\r\n        private String getExtension(Uri uri){\r\n            ContentResolver cr = getActivity().getContentResolver();\r\n            MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();\r\n            return mimeTypeMap.getExtensionFromMimeType(cr.getType(uri));\r\n        }\r\n\r\n        private void fileUploader(){\r\n            //get reference to name\r\n            final StorageReference ref = mStorageRef.child(System.currentTimeMillis() +\".\"+getExtension(imgUri));\r\n\r\n            //set upload task to imgUri\r\n            uploadTask = ref.putFile(imgUri);\r\n\r\n            //dialog on loading\r\n            mDialog = new ProgressDialog(getActivity());\r\n\r\n            mDialog.setMessage(\"Please wait...\");\r\n            mDialog.setCancelable(false);\r\n            mDialog.show();\r\n\r\n            uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    //start upload\r\n                    uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n                        @Override\r\n                        public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n                            if (!task.isSuccessful()) {\r\n                                throw task.getException();\r\n                            }\r\n                            // Continue with the task to get the download URL\r\n                            return ref.getDownloadUrl();\r\n\r\n                        }\r\n                    }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Uri> task) {\r\n                            if (task.isSuccessful()) {\r\n                                //if image is uploaded\r\n                                Toast.makeText(getActivity(), \"Image uploaded succesfully\", Toast.LENGTH_SHORT).show();\r\n\r\n                                //get download Uri\r\n                                final Uri downloadUri = task.getResult();\r\n                                //reference to EVENT in firebase database\r\n                                final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n                                //connect firebase storage with firebase realtime database\r\n                                refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        for (DataSnapshot event : snapshot.getChildren()) {\r\n                                            //Loop 1 to go through all child nodes of users\r\n                                            if(event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()){\r\n\r\n                                                if(event.child(\"thumbnail\").getValue() == null){\r\n                                                    //set thumbnail if there is no image\r\n                                                    setThumbnail(event.getKey(), refEvent, downloadUri);\r\n                                                    databaseEvent.setThumbnail(downloadUri.toString());\r\n                                                    Log.d(TAG, \"Nincs kep: \");\r\n                                                }\r\n                                                else{\r\n                                                    //if there is already and image delete it, and replace it with selected one\r\n                                                    deleteImage(event);\r\n\r\n                                                    setThumbnail(event.getKey(), refEvent, downloadUri);\r\n                                                    databaseEvent.setThumbnail(downloadUri.toString());\r\n                                                }\r\n                                                mDialog.dismiss();\r\n\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database failed\r\n                                    }\r\n                                });\r\n\r\n\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    //upload task failed\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * set Thumbnail\r\n         */\r\n        private void setThumbnail(String key, DatabaseReference ref, Uri downloadUri){\r\n            ref.child(key).child(\"thumbnail\").setValue(downloadUri.toString());\r\n        }\r\n\r\n        /**\r\n         * Open Gallery\r\n         */\r\n        private void viewGallery(){\r\n            startActivityForResult(new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI), GET_FROM_GALLERY);\r\n        }\r\n\r\n        //called after viewGallery startActivityForResult returned in viewGallery\r\n        @Override\r\n        public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n\r\n            //Detects request codes\r\n            if(requestCode==GET_FROM_GALLERY && resultCode == Activity.RESULT_OK) {\r\n                Uri selectedImage = data.getData();\r\n                Bitmap bitmap = null;\r\n                try {\r\n                    imgUri = data.getData();\r\n                    image_view.setImageURI(imgUri);\r\n\r\n                    bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);\r\n                    Log.d(TAG, \"Image Selected Successfully!\");\r\n                } catch (FileNotFoundException e) {\r\n                    e.printStackTrace();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        /**\r\n         * clearBackstack\r\n         */\r\n        public void clearBackstack(){\r\n            //clear all backstact\r\n            if (getActivity().getSupportFragmentManager().getBackStackEntryCount() == 1) {\r\n                getActivity().getSupportFragmentManager().popBackStack(\"EventFragment\", 1);\r\n            } else {\r\n                for(int i = 0; i < getActivity().getSupportFragmentManager().getBackStackEntryCount(); ++i) {\r\n                    getActivity().getSupportFragmentManager().popBackStack();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * onMapReady\r\n         */\r\n        @Override\r\n        public void onMapReady(GoogleMap googleMap) {\r\n\r\n            //get lat lng from databaseEvent\r\n            LatLng eventLocation = new LatLng(databaseEvent.getLocation_x(), databaseEvent.getLocation_y());\r\n\r\n            //init mMap\r\n            mMap = googleMap;\r\n\r\n            //add marker to map to location from databaseEvent\r\n            mMap.addMarker(new MarkerOptions()\r\n                    .position(eventLocation)\r\n                    .title(databaseEvent.getLocation_name()));\r\n            mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(eventLocation, 10));\r\n\r\n            //set on Map Click Listener\r\n            mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {\r\n                @Override\r\n                public void onMapClick(LatLng latLng) {\r\n                    Toast.makeText(getActivity(), \"Clicked on map\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * onStart\r\n         */\r\n        @Override\r\n        public void onStart() {\r\n            super.onStart();\r\n            //Hiding the activity layout\r\n            containerView.setVisibility(View.GONE);\r\n        }\r\n\r\n        /**\r\n         * onStop\r\n         */\r\n        @Override\r\n        public void onStop() {\r\n            super.onStop();\r\n            containerView.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n        /**\r\n         * onResume\r\n         */\r\n        @Override\r\n        public void onResume() {\r\n            mapView.onResume();\r\n            super.onResume();\r\n        }\r\n\r\n        /**\r\n         * on fragment stop\r\n         */\r\n        @Override\r\n        public void onPause() {\r\n            super.onPause();\r\n            mapView.onPause();\r\n        }\r\n\r\n        /**\r\n         * onDestroy\r\n         */\r\n        @Override\r\n        public void onDestroy() {\r\n            super.onDestroy();\r\n            mapView.onDestroy();\r\n        }\r\n\r\n        /**\r\n         * onLowMemory\r\n         */\r\n        @Override\r\n        public void onLowMemory() {\r\n            super.onLowMemory();\r\n            mapView.onLowMemory();\r\n        }\r\n\r\n        @Override\r\n        public void UpCh() {\r\n            viewGallery();\r\n\r\n            final Handler handler = new Handler();\r\n            final int delay = 1000; //milliseconds\r\n\r\n            handler.postDelayed(new Runnable(){\r\n                public void run() {\r\n                    if (imgUri != null) {\r\n                        //if we have an image selected\r\n                        if (uploadTask != null && uploadTask.isInProgress()) {\r\n                            //if upload is not finished\r\n                            Toast.makeText(getActivity(), \"Upload in progress\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            //if upload is not started\r\n                            fileUploader();\r\n                        }\r\n                    }  else\r\n                        handler.postDelayed(this, delay);\r\n                 }\r\n            }, delay);\r\n\r\n        }\r\n\r\n        @Override\r\n        public void Repetition() {\r\n            getActivity().getSupportFragmentManager()\r\n                    .beginTransaction()\r\n                    .replace( R.id.fragment_event_container , new EventRepetitionFragment(databaseEvent))\r\n                    .addToBackStack(\"EventRepetitionFragment\")\r\n                    .commit();\r\n        }\r\n\r\n        @Override\r\n        public void AddKickStaff() {\r\n            getActivity().getSupportFragmentManager()\r\n                    .beginTransaction()\r\n                    .replace( R.id.fragment_event_container , new EventStaffFragment(databaseEvent))\r\n                    .addToBackStack(\"EventStaffFragment\")\r\n                    .commit();\r\n        }\r\n\r\n        @Override\r\n        public void Reminder() {\r\n            getActivity().getSupportFragmentManager()\r\n                    .beginTransaction()\r\n                    .replace( R.id.fragment_event_container , new EventReminderFragment(databaseEvent))\r\n                    .addToBackStack(\"EventReminderFragment\")\r\n                    .commit();\r\n        }\r\n\r\n        @Override\r\n        public void Description() {\r\n            getActivity().getSupportFragmentManager()\r\n                        .beginTransaction()\r\n                        .replace( R.id.fragment_event_container , new EventDescriptionFragment(databaseEvent))\r\n                        .addToBackStack(\"EventDescriptionFragment\")\r\n                        .commit();\r\n        }\r\n\r\n        @Override\r\n        public void CloseEvent() {\r\n            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n            Query applesQuery = ref.child(\"EVENT\").orderByChild(\"event_name\").equalTo(databaseEvent.getEvent_name());\r\n\r\n            applesQuery.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for (DataSnapshot appleSnapshot: dataSnapshot.getChildren()) {\r\n                        //clear image\r\n                        deleteImage(appleSnapshot);\r\n\r\n                        //delete selected event\r\n                        appleSnapshot.getRef().removeValue();\r\n\r\n                        //clear it from backstack\r\n                        clearBackstack();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError databaseError) {\r\n                    //database failed\r\n                    Log.e(\"EventFragment\", \"onCancelled\", databaseError.toException());\r\n                }\r\n            });\r\n        }\r\n\r\n        @Override\r\n        public void JoinLeaveEvent() {\r\n            final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n            refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    for (final DataSnapshot event : snapshot.getChildren()) {\r\n                        //Loop 1 to go through all child nodes of users\r\n                        if (event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()) {\r\n                            if(mState == 3){\r\n                                databaseEvent.addToJoinedListEnd(mUID);\r\n                                event.getRef().child(\"joined_members\").setValue(databaseEvent.getJoined_members());\r\n                                mState = 1;\r\n                            }\r\n                            else{\r\n                                databaseEvent.deleteJoinedListElement(mUID);\r\n                                event.getRef().child(\"joined_members\").setValue(databaseEvent.getJoined_members());\r\n                                mState = 3;\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        @Override\r\n        public void ToDo() {\r\n\r\n        }\r\n    }
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/EventFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/EventFragment.java	(date 1608986752027)
-@@ -1,598 +1,584 @@
--    package com.example.pabs.Fragments.EventFragment;
-+package com.example.pabs.Fragments.EventFragment;
- 
--    import android.app.Activity;
--    import android.app.ProgressDialog;
--    import android.content.ContentResolver;
--    import android.content.Intent;
--    import android.graphics.Bitmap;
--    import android.net.Uri;
--    import android.os.Bundle;
--
--    import androidx.annotation.NonNull;
--    import androidx.fragment.app.Fragment;
--
--    import android.os.Handler;
--    import android.provider.MediaStore;
--    import android.util.Log;
--    import android.view.LayoutInflater;
--    import android.view.View;
--    import android.view.ViewGroup;
--    import android.webkit.MimeTypeMap;
--    import android.widget.Button;
--    import android.widget.ImageView;
--    import android.widget.TextView;
--    import android.widget.Toast;
-+import android.app.Activity;
-+import android.app.ProgressDialog;
-+import android.content.ContentResolver;
-+import android.content.Intent;
-+import android.graphics.Bitmap;
-+import android.net.Uri;
-+import android.os.Bundle;
-+import android.os.Handler;
-+import android.provider.MediaStore;
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.webkit.MimeTypeMap;
-+import android.widget.Button;
-+import android.widget.ImageView;
-+import android.widget.TextView;
-+import android.widget.Toast;
- 
--    import com.example.pabs.Models.DatabaseEvent;
--    import com.example.pabs.R;
--    import com.google.android.gms.maps.CameraUpdateFactory;
--    import com.google.android.gms.maps.GoogleMap;
--    import com.google.android.gms.maps.MapView;
--    import com.google.android.gms.maps.OnMapReadyCallback;
--    import com.google.android.gms.maps.model.LatLng;
--    import com.google.android.gms.maps.model.MarkerOptions;
--    import com.google.android.gms.tasks.Continuation;
--    import com.google.android.gms.tasks.OnCompleteListener;
--    import com.google.android.gms.tasks.OnFailureListener;
--    import com.google.android.gms.tasks.OnSuccessListener;
--    import com.google.android.gms.tasks.Task;
--    import com.google.firebase.database.DataSnapshot;
--    import com.google.firebase.database.DatabaseError;
--    import com.google.firebase.database.DatabaseReference;
--    import com.google.firebase.database.FirebaseDatabase;
--    import com.google.firebase.database.Query;
--    import com.google.firebase.database.ValueEventListener;
--    import com.google.firebase.storage.FirebaseStorage;
--    import com.google.firebase.storage.StorageReference;
--    import com.google.firebase.storage.StorageTask;
--    import com.google.firebase.storage.UploadTask;
--    import com.squareup.picasso.Picasso;
-+import androidx.annotation.NonNull;
-+import androidx.fragment.app.Fragment;
-+
-+import com.example.pabs.Models.DatabaseEvent;
-+import com.example.pabs.R;
-+import com.google.android.gms.maps.CameraUpdateFactory;
-+import com.google.android.gms.maps.GoogleMap;
-+import com.google.android.gms.maps.MapView;
-+import com.google.android.gms.maps.OnMapReadyCallback;
-+import com.google.android.gms.maps.model.LatLng;
-+import com.google.android.gms.maps.model.MarkerOptions;
-+import com.google.android.gms.tasks.Continuation;
-+import com.google.android.gms.tasks.OnCompleteListener;
-+import com.google.android.gms.tasks.OnFailureListener;
-+import com.google.android.gms.tasks.OnSuccessListener;
-+import com.google.android.gms.tasks.Task;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.Query;
-+import com.google.firebase.database.ValueEventListener;
-+import com.google.firebase.storage.FirebaseStorage;
-+import com.google.firebase.storage.StorageReference;
-+import com.google.firebase.storage.StorageTask;
-+import com.google.firebase.storage.UploadTask;
-+import com.squareup.picasso.Picasso;
- 
--    import java.io.FileNotFoundException;
--    import java.io.IOException;
--    import java.util.ArrayList;
--    import java.util.List;
-+import java.io.FileNotFoundException;
-+import java.io.IOException;
- 
--    /**
--     * Handle an event
--     */
-+/**
-+ * Handle an event
-+ */
- 
--    public class EventFragment extends Fragment implements OnMapReadyCallback, EventOptionsDialogFragment.EventOptionsDialogListener {
-+public class EventFragment extends Fragment implements OnMapReadyCallback, EventOptionsDialogFragment.EventOptionsDialogListener {
- 
--        public static final int GET_FROM_GALLERY = 3;
--        private static final String TAG = "EventFragment";
--        //UI
--        private Button back_button;
--        private Button plus_button;
--        private View containerView;
--        private ProgressDialog mDialog = null;
--
--        private MapView mapView;
--
--        private TextView event_name_tv;
--        private TextView event_date_start_tv;
--        private TextView event_date_end_tv;
--        private TextView event_description_tv;
--        private TextView location_text_tv;
--
--        //map
--        private GoogleMap mMap;
--
--        //database event
--        private DatabaseEvent databaseEvent;
--
--        //image handling
--        private ImageView image_view;
--        private StorageReference mStorageRef;
--        public Uri imgUri;
--        private StorageTask<UploadTask.TaskSnapshot> uploadTask;
-+    public static final int GET_FROM_GALLERY = 3;
-+    private static final String TAG = "EventFragment";
-+    public Uri imgUri;
-+    //UI
-+    private Button back_button;
-+    private Button plus_button;
-+    private View containerView;
-+    private ProgressDialog mDialog = null;
-+    private MapView mapView;
-+    private TextView event_name_tv;
-+    private TextView event_date_start_tv;
-+    private TextView event_date_end_tv;
-+    private TextView event_description_tv;
-+    private TextView location_text_tv;
-+    //map
-+    private GoogleMap mMap;
-+    //database event
-+    private final DatabaseEvent databaseEvent;
-+    //image handling
-+    private ImageView image_view;
-+    private StorageReference mStorageRef;
-+    private StorageTask<UploadTask.TaskSnapshot> uploadTask;
- 
--        private String mUID;
--        private int mState;
--        /**
--         * Constructor
--         */
--        public EventFragment(DatabaseEvent dbE, String uID) {
--            databaseEvent = dbE;
--            mUID = uID;
--        }
-+    private final String mUID;
-+    private int mState;
-+
-+    /**
-+     * Constructor
-+     */
-+    public EventFragment(DatabaseEvent dbE, String uID) {
-+        databaseEvent = dbE;
-+        mUID = uID;
-+    }
- 
--        /**
--         * On Create
--         */
--        @Override
--        public void onCreate(Bundle savedInstanceState) {
--            super.onCreate(savedInstanceState);
--        }
-+    /**
-+     * On Create
-+     */
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+    }
- 
--        /**
--         * On Create View
--         */
--        @Override
--        public View onCreateView(LayoutInflater inflater, final ViewGroup container,
--                                 Bundle savedInstanceState) {
--            // Inflate the layout for this fragment
--            View view = inflater.inflate(R.layout.fragment_event, container, false);
--            containerView = getActivity().findViewById(R.id.activity_event_layout);
-+    /**
-+     * On Create View
-+     */
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, final ViewGroup container,
-+                             Bundle savedInstanceState) {
-+        // Inflate the layout for this fragment
-+        View view = inflater.inflate(R.layout.fragment_event, container, false);
-+        containerView = getActivity().findViewById(R.id.activity_event_layout);
- 
--            //init UI
--            event_name_tv = view.findViewById(R.id.fe_event_name);
--            event_date_start_tv = view.findViewById(R.id.fe_event_date_start);
--            event_date_end_tv = view.findViewById(R.id.fe_event_date_end);
--            event_description_tv = view.findViewById(R.id.fe_event_description);
--            location_text_tv = view.findViewById(R.id.fe_location_text);
--            image_view = view.findViewById(R.id.fe_event_image);
-+        //init UI
-+        event_name_tv = view.findViewById(R.id.fe_event_name);
-+        event_date_start_tv = view.findViewById(R.id.fe_event_date_start);
-+        event_date_end_tv = view.findViewById(R.id.fe_event_date_end);
-+        event_description_tv = view.findViewById(R.id.fe_event_description);
-+        location_text_tv = view.findViewById(R.id.fe_location_text);
-+        image_view = view.findViewById(R.id.fe_event_image);
- 
--            if(databaseEvent.getThumbnail() != null){
--                //set image if it's not null
--                Uri myUri = Uri.parse(databaseEvent.getThumbnail());
-+        if (databaseEvent.getThumbnail() != null) {
-+            //set image if it's not null
-+            Uri myUri = Uri.parse(databaseEvent.getThumbnail());
- 
--                //Picasso license
--                Picasso.get().load(myUri).into(image_view);
--            }
-+            //Picasso license
-+            Picasso.get().load(myUri).into(image_view);
-+        }
- 
--            if(databaseEvent.getDescription() != null){
--                event_description_tv.setText(databaseEvent.getDescription());
--            }
-+        if (databaseEvent.getDescription() != null) {
-+            event_description_tv.setText(databaseEvent.getDescription());
-+        }
- 
--            //setting text in UI with databaseEvent data
--            event_name_tv.setText(databaseEvent.getEvent_name());
--            event_date_start_tv.setText(databaseEvent.getStart_date());
--            event_date_end_tv.setText(databaseEvent.getEnd_date());
--            event_description_tv.setText(databaseEvent.getDescription());
--            location_text_tv.setText(databaseEvent.getLocation_name());
-+        //setting text in UI with databaseEvent data
-+        event_name_tv.setText(databaseEvent.getEvent_name());
-+        event_date_start_tv.setText(databaseEvent.getStart_date());
-+        event_date_end_tv.setText(databaseEvent.getEnd_date());
-+        event_description_tv.setText(databaseEvent.getDescription());
-+        location_text_tv.setText(databaseEvent.getLocation_name());
- 
--            //back button
--            back_button = view.findViewById(R.id.fe_back_button);
-+        //back button
-+        back_button = view.findViewById(R.id.fe_back_button);
- 
--            back_button.setOnClickListener(new View.OnClickListener() {
--                @Override
--                public void onClick(View view) {
--                    //clear all backstack
--                    clearBackstack();
--                }
--            });
-+        back_button.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                //clear all backstack
-+                clearBackstack();
-+            }
-+        });
- 
--            //delete button to delete event
--            plus_button = view.findViewById(R.id.fe_plus_button);
-+        //delete button to delete event
-+        plus_button = view.findViewById(R.id.fe_plus_button);
- 
--            plus_button.setOnClickListener(new View.OnClickListener() {
--                @Override
--                public void onClick(View view) {
--                    openEventOptionsDialogFragment();
--                }
--            });
-+        plus_button.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                openEventOptionsDialogFragment();
-+            }
-+        });
- 
--            //get reference to firebase storage "Images/" path
--            mStorageRef = FirebaseStorage.getInstance().getReference("Images");
-+        //get reference to firebase storage "Images/" path
-+        mStorageRef = FirebaseStorage.getInstance().getReference("Images");
- 
--            // Gets the MapView from the XML layout and creates it
--            mapView = (MapView) view.findViewById(R.id.fe_map);
--            mapView.onCreate(savedInstanceState);
-+        // Gets the MapView from the XML layout and creates it
-+        mapView = (MapView) view.findViewById(R.id.fe_map);
-+        mapView.onCreate(savedInstanceState);
- 
--            //Sync Map View
--            mapView.getMapAsync(this);
-+        //Sync Map View
-+        mapView.getMapAsync(this);
- 
--            mState = getStatus();
-+        mState = getStatus();
- 
--            return view;
--        }
-+        return view;
-+    }
- 
--        private int getStatus(){
--            if(mUID.equals(databaseEvent.getOwner_id())){
--                //owner
--                return 0;
--            }
--            else if(databaseEvent.getJoined_members().contains(mUID)){
--                //member
--                return 1;
--            }
--            else if(databaseEvent.getStaff_members().contains(mUID)){
--                //staff
--                return 2;
--            }
--            else{
--                //not joined
--                return 3;
--            }
--        }
-+    private int getStatus() {
-+        if (mUID.equals(databaseEvent.getOwner_id())) {
-+            //owner
-+            return 0;
-+        } else if (databaseEvent.getJoined_members().contains(mUID)) {
-+            //member
-+            return 1;
-+        } else if (databaseEvent.getStaff_members().contains(mUID)) {
-+            //staff
-+            return 2;
-+        } else {
-+            //not joined
-+            return 3;
-+        }
-+    }
- 
--        /**
--         * open event dialog fragment
--         */
--        private void openEventOptionsDialogFragment(){
--            EventOptionsDialogFragment eventOptionsDialogFragment = new EventOptionsDialogFragment();
--            eventOptionsDialogFragment.setListener(EventFragment.this, mState);
--            eventOptionsDialogFragment.setCancelable(false);
--            eventOptionsDialogFragment.show(getActivity().getSupportFragmentManager(),"eventDialogFragment");
--        }
-+    /**
-+     * open event dialog fragment
-+     */
-+    private void openEventOptionsDialogFragment() {
-+        EventOptionsDialogFragment eventOptionsDialogFragment = new EventOptionsDialogFragment();
-+        eventOptionsDialogFragment.setListener(EventFragment.this, mState);
-+        eventOptionsDialogFragment.setCancelable(false);
-+        eventOptionsDialogFragment.show(getActivity().getSupportFragmentManager(), "eventDialogFragment");
-+    }
- 
--        /**
--         * delete Image
--         */
--        private void deleteImage(DataSnapshot dataSnapshot){
--            //clear image
--            if(dataSnapshot.child("thumbnail").getValue() != null) {
--                //init firebase storage
--                FirebaseStorage mFirebaseStorage = FirebaseStorage.getInstance();
-+    /**
-+     * delete Image
-+     */
-+    private void deleteImage(DataSnapshot dataSnapshot) {
-+        //clear image
-+        if (dataSnapshot.child("thumbnail").getValue() != null) {
-+            //init firebase storage
-+            FirebaseStorage mFirebaseStorage = FirebaseStorage.getInstance();
- 
--                //reference to photo shown in this event
--                StorageReference photoRef = mFirebaseStorage.getReferenceFromUrl(dataSnapshot.child("thumbnail").getValue().toString());
-+            //reference to photo shown in this event
-+            StorageReference photoRef = mFirebaseStorage.getReferenceFromUrl(dataSnapshot.child("thumbnail").getValue().toString());
- 
--                //delete the photo from firebase storage
--                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
--                    @Override
--                    public void onSuccess(Void aVoid) {
--                        // File deleted successfully
--                        Log.d(TAG, "onSuccess: deleted file");
--                    }
--                }).addOnFailureListener(new OnFailureListener() {
--                    @Override
--                    public void onFailure(@NonNull Exception exception) {
--                        // Uh-oh, an error occurred!
--                        Log.d(TAG, "onFailure: did not delete file");
--                    }
--                });
--            }
--        }
-+            //delete the photo from firebase storage
-+            photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
-+                @Override
-+                public void onSuccess(Void aVoid) {
-+                    // File deleted successfully
-+                    Log.d(TAG, "onSuccess: deleted file");
-+                }
-+            }).addOnFailureListener(new OnFailureListener() {
-+                @Override
-+                public void onFailure(@NonNull Exception exception) {
-+                    // Uh-oh, an error occurred!
-+                    Log.d(TAG, "onFailure: did not delete file");
-+                }
-+            });
-+        }
-+    }
- 
--        /**
--         * fileUploader
--         */
--        private String getExtension(Uri uri){
--            ContentResolver cr = getActivity().getContentResolver();
--            MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();
--            return mimeTypeMap.getExtensionFromMimeType(cr.getType(uri));
--        }
-+    /**
-+     * fileUploader
-+     */
-+    private String getExtension(Uri uri) {
-+        ContentResolver cr = getActivity().getContentResolver();
-+        MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();
-+        return mimeTypeMap.getExtensionFromMimeType(cr.getType(uri));
-+    }
- 
--        private void fileUploader(){
--            //get reference to name
--            final StorageReference ref = mStorageRef.child(System.currentTimeMillis() +"."+getExtension(imgUri));
-+    private void fileUploader() {
-+        //get reference to name
-+        final StorageReference ref = mStorageRef.child(System.currentTimeMillis() + "." + getExtension(imgUri));
- 
--            //set upload task to imgUri
--            uploadTask = ref.putFile(imgUri);
-+        //set upload task to imgUri
-+        uploadTask = ref.putFile(imgUri);
- 
--            //dialog on loading
--            mDialog = new ProgressDialog(getActivity());
-+        //dialog on loading
-+        mDialog = new ProgressDialog(getActivity());
- 
--            mDialog.setMessage("Please wait...");
--            mDialog.setCancelable(false);
--            mDialog.show();
-+        mDialog.setMessage("Please wait...");
-+        mDialog.setCancelable(false);
-+        mDialog.show();
- 
--            uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
--                @Override
--                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
--                    //start upload
--                    uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {
--                        @Override
--                        public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {
--                            if (!task.isSuccessful()) {
--                                throw task.getException();
--                            }
--                            // Continue with the task to get the download URL
--                            return ref.getDownloadUrl();
-+        uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
-+            @Override
-+            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {
-+                //start upload
-+                uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {
-+                    @Override
-+                    public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {
-+                        if (!task.isSuccessful()) {
-+                            throw task.getException();
-+                        }
-+                        // Continue with the task to get the download URL
-+                        return ref.getDownloadUrl();
- 
--                        }
--                    }).addOnCompleteListener(new OnCompleteListener<Uri>() {
--                        @Override
--                        public void onComplete(@NonNull Task<Uri> task) {
--                            if (task.isSuccessful()) {
--                                //if image is uploaded
--                                Toast.makeText(getActivity(), "Image uploaded succesfully", Toast.LENGTH_SHORT).show();
-+                    }
-+                }).addOnCompleteListener(new OnCompleteListener<Uri>() {
-+                    @Override
-+                    public void onComplete(@NonNull Task<Uri> task) {
-+                        if (task.isSuccessful()) {
-+                            //if image is uploaded
-+                            Toast.makeText(getActivity(), "Image uploaded succesfully", Toast.LENGTH_SHORT).show();
- 
--                                //get download Uri
--                                final Uri downloadUri = task.getResult();
--                                //reference to EVENT in firebase database
--                                final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
-+                            //get download Uri
-+                            final Uri downloadUri = task.getResult();
-+                            //reference to EVENT in firebase database
-+                            final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
- 
--                                //connect firebase storage with firebase realtime database
--                                refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
--                                    @Override
--                                    public void onDataChange(@NonNull DataSnapshot snapshot) {
--                                        for (DataSnapshot event : snapshot.getChildren()) {
--                                            //Loop 1 to go through all child nodes of users
--                                            if(event.child("event_name").getValue() == databaseEvent.getEvent_name()){
-+                            //connect firebase storage with firebase realtime database
-+                            refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
-+                                @Override
-+                                public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                                    for (DataSnapshot event : snapshot.getChildren()) {
-+                                        //Loop 1 to go through all child nodes of users
-+                                        if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
- 
--                                                if(event.child("thumbnail").getValue() == null){
--                                                    //set thumbnail if there is no image
--                                                    setThumbnail(event.getKey(), refEvent, downloadUri);
--                                                    databaseEvent.setThumbnail(downloadUri.toString());
--                                                    Log.d(TAG, "Nincs kep: ");
--                                                }
--                                                else{
--                                                    //if there is already and image delete it, and replace it with selected one
--                                                    deleteImage(event);
-+                                            if (event.child("thumbnail").getValue() == null) {
-+                                                //set thumbnail if there is no image
-+                                                setThumbnail(event.getKey(), refEvent, downloadUri);
-+                                                databaseEvent.setThumbnail(downloadUri.toString());
-+                                                Log.d(TAG, "Nincs kep: ");
-+                                            } else {
-+                                                //if there is already and image delete it, and replace it with selected one
-+                                                deleteImage(event);
- 
--                                                    setThumbnail(event.getKey(), refEvent, downloadUri);
--                                                    databaseEvent.setThumbnail(downloadUri.toString());
--                                                }
--                                                mDialog.dismiss();
-+                                                setThumbnail(event.getKey(), refEvent, downloadUri);
-+                                                databaseEvent.setThumbnail(downloadUri.toString());
-+                                            }
-+                                            mDialog.dismiss();
- 
--                                            }
--                                        }
--                                    }
-+                                        }
-+                                    }
-+                                }
- 
--                                    @Override
--                                    public void onCancelled(@NonNull DatabaseError error) {
--                                        //database failed
--                                    }
--                                });
-+                                @Override
-+                                public void onCancelled(@NonNull DatabaseError error) {
-+                                    //database failed
-+                                }
-+                            });
- 
- 
--                            }
--                        }
--                    });
-+                        }
-+                    }
-+                });
- 
--                }
--            }).addOnFailureListener(new OnFailureListener() {
--                @Override
--                public void onFailure(@NonNull Exception e) {
--                    //upload task failed
--                }
--            });
--        }
-+            }
-+        }).addOnFailureListener(new OnFailureListener() {
-+            @Override
-+            public void onFailure(@NonNull Exception e) {
-+                //upload task failed
-+            }
-+        });
-+    }
- 
--        /**
--         * set Thumbnail
--         */
--        private void setThumbnail(String key, DatabaseReference ref, Uri downloadUri){
--            ref.child(key).child("thumbnail").setValue(downloadUri.toString());
--        }
-+    /**
-+     * set Thumbnail
-+     */
-+    private void setThumbnail(String key, DatabaseReference ref, Uri downloadUri) {
-+        ref.child(key).child("thumbnail").setValue(downloadUri.toString());
-+    }
- 
--        /**
--         * Open Gallery
--         */
--        private void viewGallery(){
--            startActivityForResult(new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI), GET_FROM_GALLERY);
--        }
-+    /**
-+     * Open Gallery
-+     */
-+    private void viewGallery() {
-+        startActivityForResult(new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI), GET_FROM_GALLERY);
-+    }
- 
--        //called after viewGallery startActivityForResult returned in viewGallery
--        @Override
--        public void onActivityResult(int requestCode, int resultCode, Intent data) {
--            super.onActivityResult(requestCode, resultCode, data);
-+    //called after viewGallery startActivityForResult returned in viewGallery
-+    @Override
-+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
-+        super.onActivityResult(requestCode, resultCode, data);
- 
--            //Detects request codes
--            if(requestCode==GET_FROM_GALLERY && resultCode == Activity.RESULT_OK) {
--                Uri selectedImage = data.getData();
--                Bitmap bitmap = null;
--                try {
--                    imgUri = data.getData();
--                    image_view.setImageURI(imgUri);
-+        //Detects request codes
-+        if (requestCode == GET_FROM_GALLERY && resultCode == Activity.RESULT_OK) {
-+            Uri selectedImage = data.getData();
-+            Bitmap bitmap = null;
-+            try {
-+                imgUri = data.getData();
-+                image_view.setImageURI(imgUri);
- 
--                    bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);
--                    Log.d(TAG, "Image Selected Successfully!");
--                } catch (FileNotFoundException e) {
--                    e.printStackTrace();
--                } catch (IOException e) {
--                    e.printStackTrace();
--                }
--            }
--        }
-+                bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), selectedImage);
-+                Log.d(TAG, "Image Selected Successfully!");
-+            } catch (FileNotFoundException e) {
-+                e.printStackTrace();
-+            } catch (IOException e) {
-+                e.printStackTrace();
-+            }
-+        }
-+    }
- 
- 
--        /**
--         * clearBackstack
--         */
--        public void clearBackstack(){
--            //clear all backstact
--            if (getActivity().getSupportFragmentManager().getBackStackEntryCount() == 1) {
--                getActivity().getSupportFragmentManager().popBackStack("EventFragment", 1);
--            } else {
--                for(int i = 0; i < getActivity().getSupportFragmentManager().getBackStackEntryCount(); ++i) {
--                    getActivity().getSupportFragmentManager().popBackStack();
--                }
--            }
--        }
-+    /**
-+     * clearBackstack
-+     */
-+    public void clearBackstack() {
-+        //clear all backstact
-+        if (getActivity().getSupportFragmentManager().getBackStackEntryCount() == 1) {
-+            getActivity().getSupportFragmentManager().popBackStack("EventFragment", 1);
-+        } else {
-+            for (int i = 0; i < getActivity().getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-+                getActivity().getSupportFragmentManager().popBackStack();
-+            }
-+        }
-+    }
- 
--        /**
--         * onMapReady
--         */
--        @Override
--        public void onMapReady(GoogleMap googleMap) {
-+    /**
-+     * onMapReady
-+     */
-+    @Override
-+    public void onMapReady(GoogleMap googleMap) {
- 
--            //get lat lng from databaseEvent
--            LatLng eventLocation = new LatLng(databaseEvent.getLocation_x(), databaseEvent.getLocation_y());
-+        //get lat lng from databaseEvent
-+        LatLng eventLocation = new LatLng(databaseEvent.getLocation_x(), databaseEvent.getLocation_y());
- 
--            //init mMap
--            mMap = googleMap;
-+        //init mMap
-+        mMap = googleMap;
- 
--            //add marker to map to location from databaseEvent
--            mMap.addMarker(new MarkerOptions()
--                    .position(eventLocation)
--                    .title(databaseEvent.getLocation_name()));
--            mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(eventLocation, 10));
-+        //add marker to map to location from databaseEvent
-+        mMap.addMarker(new MarkerOptions()
-+                .position(eventLocation)
-+                .title(databaseEvent.getLocation_name()));
-+        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(eventLocation, 10));
- 
--            //set on Map Click Listener
--            mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
--                @Override
--                public void onMapClick(LatLng latLng) {
--                    Toast.makeText(getActivity(), "Clicked on map", Toast.LENGTH_SHORT).show();
--                }
--            });
--        }
-+        //set on Map Click Listener
-+        mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
-+            @Override
-+            public void onMapClick(LatLng latLng) {
-+                Toast.makeText(getActivity(), "Clicked on map", Toast.LENGTH_SHORT).show();
-+            }
-+        });
-+    }
- 
--        /**
--         * onStart
--         */
--        @Override
--        public void onStart() {
--            super.onStart();
--            //Hiding the activity layout
--            containerView.setVisibility(View.GONE);
--        }
-+    /**
-+     * onStart
-+     */
-+    @Override
-+    public void onStart() {
-+        super.onStart();
-+        //Hiding the activity layout
-+        containerView.setVisibility(View.GONE);
-+    }
- 
--        /**
--         * onStop
--         */
--        @Override
--        public void onStop() {
--            super.onStop();
--            containerView.setVisibility(View.VISIBLE);
--        }
-+    /**
-+     * onStop
-+     */
-+    @Override
-+    public void onStop() {
-+        super.onStop();
-+        containerView.setVisibility(View.VISIBLE);
-+    }
- 
--        /**
--         * onResume
--         */
--        @Override
--        public void onResume() {
--            mapView.onResume();
--            super.onResume();
--        }
-+    /**
-+     * onResume
-+     */
-+    @Override
-+    public void onResume() {
-+        mapView.onResume();
-+        super.onResume();
-+    }
- 
--        /**
--         * on fragment stop
--         */
--        @Override
--        public void onPause() {
--            super.onPause();
--            mapView.onPause();
--        }
-+    /**
-+     * on fragment stop
-+     */
-+    @Override
-+    public void onPause() {
-+        super.onPause();
-+        mapView.onPause();
-+    }
- 
--        /**
--         * onDestroy
--         */
--        @Override
--        public void onDestroy() {
--            super.onDestroy();
--            mapView.onDestroy();
--        }
-+    /**
-+     * onDestroy
-+     */
-+    @Override
-+    public void onDestroy() {
-+        super.onDestroy();
-+        mapView.onDestroy();
-+    }
- 
--        /**
--         * onLowMemory
--         */
--        @Override
--        public void onLowMemory() {
--            super.onLowMemory();
--            mapView.onLowMemory();
--        }
-+    /**
-+     * onLowMemory
-+     */
-+    @Override
-+    public void onLowMemory() {
-+        super.onLowMemory();
-+        mapView.onLowMemory();
-+    }
- 
--        @Override
--        public void UpCh() {
--            viewGallery();
-+    @Override
-+    public void UpCh() {
-+        viewGallery();
- 
--            final Handler handler = new Handler();
--            final int delay = 1000; //milliseconds
-+        final Handler handler = new Handler();
-+        final int delay = 1000; //milliseconds
- 
--            handler.postDelayed(new Runnable(){
--                public void run() {
--                    if (imgUri != null) {
--                        //if we have an image selected
--                        if (uploadTask != null && uploadTask.isInProgress()) {
--                            //if upload is not finished
--                            Toast.makeText(getActivity(), "Upload in progress", Toast.LENGTH_SHORT).show();
--                        } else {
--                            //if upload is not started
--                            fileUploader();
--                        }
--                    }  else
--                        handler.postDelayed(this, delay);
--                 }
--            }, delay);
-+        handler.postDelayed(new Runnable() {
-+            public void run() {
-+                if (imgUri != null) {
-+                    //if we have an image selected
-+                    if (uploadTask != null && uploadTask.isInProgress()) {
-+                        //if upload is not finished
-+                        Toast.makeText(getActivity(), "Upload in progress", Toast.LENGTH_SHORT).show();
-+                    } else {
-+                        //if upload is not started
-+                        fileUploader();
-+                    }
-+                } else
-+                    handler.postDelayed(this, delay);
-+            }
-+        }, delay);
- 
--        }
-+    }
- 
--        @Override
--        public void Repetition() {
--            getActivity().getSupportFragmentManager()
--                    .beginTransaction()
--                    .replace( R.id.fragment_event_container , new EventRepetitionFragment(databaseEvent))
--                    .addToBackStack("EventRepetitionFragment")
--                    .commit();
--        }
-+    @Override
-+    public void Repetition() {
-+        getActivity().getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new EventRepetitionFragment(databaseEvent))
-+                .addToBackStack("EventRepetitionFragment")
-+                .commit();
-+    }
- 
--        @Override
--        public void AddKickStaff() {
--            getActivity().getSupportFragmentManager()
--                    .beginTransaction()
--                    .replace( R.id.fragment_event_container , new EventStaffFragment(databaseEvent))
--                    .addToBackStack("EventStaffFragment")
--                    .commit();
--        }
-+    @Override
-+    public void AddKickStaff() {
-+        getActivity().getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new EventStaffFragment(databaseEvent))
-+                .addToBackStack("EventStaffFragment")
-+                .commit();
-+    }
- 
--        @Override
--        public void Reminder() {
--            getActivity().getSupportFragmentManager()
--                    .beginTransaction()
--                    .replace( R.id.fragment_event_container , new EventReminderFragment(databaseEvent))
--                    .addToBackStack("EventReminderFragment")
--                    .commit();
--        }
-+    @Override
-+    public void Reminder() {
-+        getActivity().getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new EventReminderFragment(databaseEvent))
-+                .addToBackStack("EventReminderFragment")
-+                .commit();
-+    }
- 
--        @Override
--        public void Description() {
--            getActivity().getSupportFragmentManager()
--                        .beginTransaction()
--                        .replace( R.id.fragment_event_container , new EventDescriptionFragment(databaseEvent))
--                        .addToBackStack("EventDescriptionFragment")
--                        .commit();
--        }
-+    @Override
-+    public void Description() {
-+        getActivity().getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new EventDescriptionFragment(databaseEvent))
-+                .addToBackStack("EventDescriptionFragment")
-+                .commit();
-+    }
- 
--        @Override
--        public void CloseEvent() {
--            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
--            Query applesQuery = ref.child("EVENT").orderByChild("event_name").equalTo(databaseEvent.getEvent_name());
-+    @Override
-+    public void CloseEvent() {
-+        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
-+        Query applesQuery = ref.child("EVENT").orderByChild("event_name").equalTo(databaseEvent.getEvent_name());
- 
--            applesQuery.addListenerForSingleValueEvent(new ValueEventListener() {
--                @Override
--                public void onDataChange(DataSnapshot dataSnapshot) {
--                    for (DataSnapshot appleSnapshot: dataSnapshot.getChildren()) {
--                        //clear image
--                        deleteImage(appleSnapshot);
-+        applesQuery.addListenerForSingleValueEvent(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(DataSnapshot dataSnapshot) {
-+                for (DataSnapshot appleSnapshot : dataSnapshot.getChildren()) {
-+                    //clear image
-+                    deleteImage(appleSnapshot);
- 
--                        //delete selected event
--                        appleSnapshot.getRef().removeValue();
-+                    //delete selected event
-+                    appleSnapshot.getRef().removeValue();
- 
--                        //clear it from backstack
--                        clearBackstack();
--                    }
--                }
-+                    //clear it from backstack
-+                    clearBackstack();
-+                }
-+            }
- 
--                @Override
--                public void onCancelled(DatabaseError databaseError) {
--                    //database failed
--                    Log.e("EventFragment", "onCancelled", databaseError.toException());
--                }
--            });
--        }
-+            @Override
-+            public void onCancelled(DatabaseError databaseError) {
-+                //database failed
-+                Log.e("EventFragment", "onCancelled", databaseError.toException());
-+            }
-+        });
-+    }
- 
--        @Override
--        public void JoinLeaveEvent() {
--            final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
--            refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
--                @Override
--                public void onDataChange(@NonNull DataSnapshot snapshot) {
--                    for (final DataSnapshot event : snapshot.getChildren()) {
--                        //Loop 1 to go through all child nodes of users
--                        if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
--                            if(mState == 3){
--                                databaseEvent.addToJoinedListEnd(mUID);
--                                event.getRef().child("joined_members").setValue(databaseEvent.getJoined_members());
--                                mState = 1;
--                            }
--                            else{
--                                databaseEvent.deleteJoinedListElement(mUID);
--                                event.getRef().child("joined_members").setValue(databaseEvent.getJoined_members());
--                                mState = 3;
--                            }
-+    @Override
-+    public void JoinLeaveEvent() {
-+        final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child("EVENT");
-+        refEvent.addListenerForSingleValueEvent(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                for (final DataSnapshot event : snapshot.getChildren()) {
-+                    //Loop 1 to go through all child nodes of users
-+                    if (event.child("event_name").getValue() == databaseEvent.getEvent_name()) {
-+                        if (mState == 3) {
-+                            databaseEvent.addToJoinedListEnd(mUID);
-+                            event.getRef().child("joined_members").setValue(databaseEvent.getJoined_members());
-+                            mState = 1;
-+                        } else {
-+                            databaseEvent.deleteJoinedListElement(mUID);
-+                            event.getRef().child("joined_members").setValue(databaseEvent.getJoined_members());
-+                            mState = 3;
-+                        }
- 
--                        }
--                    }
-+                    }
-+                }
- 
--                }
-+            }
- 
--                @Override
--                public void onCancelled(@NonNull DatabaseError error) {
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
- 
--                }
--            });
-+            }
-+        });
- 
- 
--
--
--        }
-+    }
- 
--        @Override
--        public void ToDo() {
-+    @Override
-+    public void ToDo() {
- 
--        }
--    }
-\ No newline at end of file
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_group.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--Event skeleton-->\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/fragment_group_container\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#D9D9D9\"\r\n    android:clickable=\"true\"\r\n    android:focusable=\"true\"\r\n    tools:context=\".Fragments.GroupFragment.GroupFragment\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"15dp\">\r\n\r\n        <!--Group name-->\r\n        <TextView\r\n            android:id=\"@+id/fg_group_name\"\r\n            android:layout_width=\"222dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/roboto_medium_italic\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:text=\"Group Name\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:layout_alignParentTop=\"true\"\r\n            android:textAlignment=\"center\"\r\n            android:textColor=\"#92129D\"\r\n            android:textSize=\"35sp\" />\r\n\r\n        <!--Owner name-->\r\n        <TextView\r\n            android:id=\"@+id/fg_owner_name\"\r\n            android:layout_width=\"222dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/roboto_medium_italic\"\r\n            android:gravity=\"center\"\r\n            android:text=\"Owner Name\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:layout_below=\"@id/fg_group_name\"\r\n            android:textColor=\"#92129D\"\r\n            android:textSize=\"14sp\" />\r\n\r\n        <!--Chat -->\r\n        <TextView\r\n            android:id=\"@+id/fg_chat_output\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@id/fg_owner_name\"\r\n            android:layout_above=\"@+id/fg_chat_ll\"\r\n            android:scrollbars = \"vertical\"\r\n            android:background=\"@drawable/rect\"\r\n            android:padding=\"15dp\"\r\n            android:gravity=\"bottom\"\r\n            android:text=\"a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\n\"\r\n            />\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/fg_chat_ll\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_above=\"@+id/fg_plus_button\"\r\n            android:layout_marginBottom=\"15dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:weightSum=\"3\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/fg_chat_input\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"2\"/>\r\n\r\n            <Button\r\n                android:id=\"@+id/fg_chat_input_send_button\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:background=\"@drawable/login_button\"\r\n                android:text=\"Send\"/>\r\n\r\n\r\n        </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/fg_plus_button\"\r\n            android:layout_width=\"60dp\"\r\n            android:layout_height=\"60dp\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginRight=\"40dp\"\r\n            android:layout_marginBottom=\"20dp\"\r\n            android:background=\"@drawable/plusbutton\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/fg_back_button\"\r\n            android:layout_width=\"120dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_alignParentLeft=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginLeft=\"32dp\"\r\n            android:layout_marginBottom=\"30dp\"\r\n            android:background=\"@drawable/login_button\"\r\n            android:text=\"Back\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"#92129D\"\r\n            android:textSize=\"22sp\" />\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n</RelativeLayout>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_group.xml	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/res/layout/fragment_group.xml	(date 1608972101701)
-@@ -2,6 +2,7 @@
- <!--Event skeleton-->
- <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-     xmlns:tools="http://schemas.android.com/tools"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-     android:id="@+id/fragment_group_container"
-     android:layout_width="match_parent"
-     android:layout_height="match_parent"
-@@ -17,7 +18,7 @@
- 
-         <!--Group name-->
-         <TextView
--            android:id="@+id/fg_group_name"
-+            android:id="@+id/f_g_group_name"
-             android:layout_width="222dp"
-             android:layout_height="wrap_content"
-             android:fontFamily="@font/roboto_medium_italic"
-@@ -31,59 +32,76 @@
- 
-         <!--Owner name-->
-         <TextView
--            android:id="@+id/fg_owner_name"
-+            android:id="@+id/f_g_owner_name"
-             android:layout_width="222dp"
-             android:layout_height="wrap_content"
-             android:fontFamily="@font/roboto_medium_italic"
-             android:gravity="center"
-             android:text="Owner Name"
-             android:layout_alignParentLeft="true"
--            android:layout_below="@id/fg_group_name"
-+            android:layout_below="@id/f_g_group_name"
-             android:textColor="#92129D"
-             android:textSize="14sp" />
- 
--        <!--Chat -->
--        <TextView
--            android:id="@+id/fg_chat_output"
-+        <!--Chat-->
-+        <RelativeLayout
-+            android:id="@+id/f_g_rlChat"
-             android:layout_width="match_parent"
-             android:layout_height="match_parent"
--            android:layout_below="@id/fg_owner_name"
--            android:layout_above="@+id/fg_chat_ll"
--            android:scrollbars = "vertical"
--            android:background="@drawable/rect"
--            android:padding="15dp"
--            android:gravity="bottom"
--            android:text="a\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n"
--            />
-+            android:padding="16dp"
-+            android:layout_below="@+id/f_g_owner_name"
-+            android:layout_above="@+id/f_g_plus_button">
- 
--        <LinearLayout
--            android:id="@+id/fg_chat_ll"
--            android:layout_width="match_parent"
--            android:layout_height="50dp"
--            android:layout_above="@+id/fg_plus_button"
--            android:layout_marginBottom="15dp"
--            android:layout_marginTop="10dp"
--            android:weightSum="3">
-+            <com.google.android.material.floatingactionbutton.FloatingActionButton
-+                android:id="@+id/f_g_rlChat_sendBtn"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:clickable="true"
-+                android:src="@drawable/ic_baseline_send_24"
-+                android:tint="@android:color/white"
-+                android:layout_alignParentBottom="true"
-+                android:layout_alignParentEnd="true"
-+                app:fabSize="mini"
-+                android:layout_alignParentRight="true"
-+                android:focusable="true" />
-+
-+            <com.google.android.material.textfield.TextInputLayout
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:layout_toLeftOf="@id/f_g_rlChat_sendBtn"
-+                android:layout_alignParentBottom="true"
-+                android:layout_alignParentStart="true"
-+                android:layout_alignParentLeft="true"
-+                android:layout_toStartOf="@id/f_g_rlChat_sendBtn">
- 
--            <EditText
--                android:id="@+id/fg_chat_input"
--                android:layout_width="0dp"
-+                <EditText
-+                    android:id="@+id/f_g_rlChat_et"
-+                    android:layout_width="match_parent"
-+                    android:layout_height="wrap_content"
-+                    android:singleLine="true"
-+                    android:maxLines="1"
-+                    android:imeOptions="actionGo"
-+                    android:imeActionId="666"
-+                    android:imeActionLabel="Some Label"
-+                    android:hint="Input" />
-+            </com.google.android.material.textfield.TextInputLayout>
-+
-+            <ListView
-+                android:id="@+id/f_g_rlChat_lv"
-+                android:layout_width="match_parent"
-                 android:layout_height="match_parent"
--                android:layout_weight="2"/>
-+                android:layout_alignParentTop="true"
-+                android:layout_alignParentStart="true"
-+                android:layout_above="@id/f_g_rlChat_sendBtn"
-+                android:dividerHeight="16dp"
-+                android:divider="@android:color/transparent"
-+                android:layout_marginBottom="16dp"
-+                android:layout_alignParentLeft="true" />
-+
-+        </RelativeLayout>
- 
--            <Button
--                android:id="@+id/fg_chat_input_send_button"
--                android:layout_width="0dp"
--                android:layout_height="match_parent"
--                android:layout_weight="1"
--                android:background="@drawable/login_button"
--                android:text="Send"/>
--
--
--        </LinearLayout>
--
-         <Button
--            android:id="@+id/fg_plus_button"
-+            android:id="@+id/f_g_plus_button"
-             android:layout_width="60dp"
-             android:layout_height="60dp"
-             android:layout_alignParentRight="true"
-@@ -93,7 +111,7 @@
-             android:background="@drawable/plusbutton" />
- 
-         <Button
--            android:id="@+id/fg_back_button"
-+            android:id="@+id/f_g_back_button"
-             android:layout_width="120dp"
-             android:layout_height="40dp"
-             android:layout_alignParentLeft="true"
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/EventRepetitionFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.EventFragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.SwitchCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class EventRepetitionFragment extends Fragment {\r\n\r\n    private View containerView;\r\n\r\n    //database event\r\n    private DatabaseEvent databaseEvent;\r\n\r\n    private SwitchCompat sw;\r\n    private ImageView iv;\r\n    private Spinner sp;\r\n    private TextView tv;\r\n    private Button bt;\r\n\r\n    private boolean switch_on = false;\r\n\r\n    EventRepetitionFragment(DatabaseEvent dE){\r\n        databaseEvent = dE;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_event_repetition, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_event_layout);\r\n\r\n        sw = view.findViewById(R.id.f_e_rep_sw);\r\n        iv = view.findViewById(R.id.f_e_rep_iv);\r\n        sp = view.findViewById(R.id.f_e_rep_sp);\r\n        tv = view.findViewById(R.id.f_e_rep_rl3_tv);\r\n        bt = view.findViewById(R.id.f_e_rep_btn);\r\n\r\n        iv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                clearBackstack();\r\n            }\r\n        });\r\n\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(getActivity(),\r\n                R.array.repetition, android.R.layout.simple_spinner_item);\r\n        // Specify the layout to use when the list of choices appears\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        sp.setAdapter(adapter);\r\n\r\n        sp.setVisibility(View.GONE);\r\n        tv.setVisibility(View.GONE);\r\n\r\n        if(databaseEvent.getRepetition() != null){\r\n            if(!databaseEvent.getRepetition().equals(\"\")){\r\n                sp.setVisibility(View.VISIBLE);\r\n                tv.setVisibility(View.VISIBLE);\r\n                sw.setChecked(true);\r\n                switch_on = true;\r\n\r\n                ArrayList<String> repetitionArr = new ArrayList<>();\r\n                repetitionArr.add(\"daily\");\r\n                repetitionArr.add(\"weekly\");\r\n                repetitionArr.add(\"monthly\");\r\n                int i=repetitionArr.indexOf(databaseEvent.getRepetition().toString());\r\n                sp.setSelection(i);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        sw.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                if (isChecked) {\r\n                    //switch on\r\n                    sp.setVisibility(View.VISIBLE);\r\n                    tv.setVisibility(View.VISIBLE);\r\n                    switch_on = true;\r\n                } else {\r\n                    //switch off\r\n                    sp.setVisibility(View.GONE);\r\n                    tv.setVisibility(View.GONE);\r\n                    switch_on = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        bt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                final DatabaseReference refEvent = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n                refEvent.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        for (final DataSnapshot event : snapshot.getChildren()) {\r\n                            //Loop 1 to go through all child nodes of users\r\n                            if (event.child(\"event_name\").getValue() == databaseEvent.getEvent_name()) {\r\n                                if (switch_on) {\r\n                                    databaseEvent.setRepetition(sp.getSelectedItem().toString());\r\n                                } else {\r\n                                    databaseEvent.setRepetition(\"\");\r\n                                }\r\n                                event.getRef().child(\"repetition\").setValue(databaseEvent.getRepetition());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        //database failed\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    /**\r\n     * clearBackstack\r\n     */\r\n    public void clearBackstack(){\r\n        //clear all backstact\r\n        getActivity().getSupportFragmentManager().popBackStack(\"EventRepetitionFragment\", 1);\r\n    }\r\n\r\n    /**\r\n     * onStart\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n    }\r\n\r\n    /**\r\n     * onStop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/EventRepetitionFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/EventRepetitionFragment.java	(date 1608986752080)
-@@ -1,11 +1,6 @@
- package com.example.pabs.Fragments.EventFragment;
- 
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.appcompat.widget.SwitchCompat;
--import androidx.fragment.app.Fragment;
--
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
-@@ -16,6 +11,10 @@
- import android.widget.Spinner;
- import android.widget.TextView;
- 
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.widget.SwitchCompat;
-+import androidx.fragment.app.Fragment;
-+
- import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.R;
- import com.google.firebase.database.DataSnapshot;
-@@ -31,7 +30,7 @@
-     private View containerView;
- 
-     //database event
--    private DatabaseEvent databaseEvent;
-+    private final DatabaseEvent databaseEvent;
- 
-     private SwitchCompat sw;
-     private ImageView iv;
-@@ -41,7 +40,7 @@
- 
-     private boolean switch_on = false;
- 
--    EventRepetitionFragment(DatabaseEvent dE){
-+    EventRepetitionFragment(DatabaseEvent dE) {
-         databaseEvent = dE;
-     }
- 
-@@ -80,8 +79,8 @@
-         sp.setVisibility(View.GONE);
-         tv.setVisibility(View.GONE);
- 
--        if(databaseEvent.getRepetition() != null){
--            if(!databaseEvent.getRepetition().equals("")){
-+        if (databaseEvent.getRepetition() != null) {
-+            if (!databaseEvent.getRepetition().equals("")) {
-                 sp.setVisibility(View.VISIBLE);
-                 tv.setVisibility(View.VISIBLE);
-                 sw.setChecked(true);
-@@ -91,13 +90,12 @@
-                 repetitionArr.add("daily");
-                 repetitionArr.add("weekly");
-                 repetitionArr.add("monthly");
--                int i=repetitionArr.indexOf(databaseEvent.getRepetition().toString());
-+                int i = repetitionArr.indexOf(databaseEvent.getRepetition());
-                 sp.setSelection(i);
-             }
-         }
- 
- 
--
-         sw.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                 if (isChecked) {
-@@ -150,7 +148,7 @@
-     /**
-      * clearBackstack
-      */
--    public void clearBackstack(){
-+    public void clearBackstack() {
-         //clear all backstact
-         getActivity().getSupportFragmentManager().popBackStack("EventRepetitionFragment", 1);
-     }
-Index: app/src/main/java/com/example/pabs/Models/Group.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Models;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Group {\r\n    String group_name;\r\n    String group_owner;\r\n    String invite_code;\r\n    ArrayList<String> member_list;\r\n\r\n    public Group() {\r\n    }\r\n\r\n    public Group(String group_name, String group_owner, String invite_code, ArrayList<String> member_list) {\r\n        this.group_name = group_name;\r\n        this.group_owner = group_owner;\r\n        this.invite_code = invite_code;\r\n        this.member_list = member_list;\r\n    }\r\n\r\n    public String getGroup_name() {\r\n        return group_name;\r\n    }\r\n\r\n    public void setGroup_name(String group_name) {\r\n        this.group_name = group_name;\r\n    }\r\n\r\n    public String getGroup_owner() {\r\n        return group_owner;\r\n    }\r\n\r\n    public void setGroup_owner(String group_owner) {\r\n        this.group_owner = group_owner;\r\n    }\r\n\r\n    public String getInvite_code() {\r\n        return invite_code;\r\n    }\r\n\r\n    public void setInvite_code(String invite_code) {\r\n        this.invite_code = invite_code;\r\n    }\r\n\r\n    public ArrayList<String> getMember_list() {\r\n        return member_list;\r\n    }\r\n\r\n    public void setMember_list(ArrayList<String> member_list) {\r\n        this.member_list = member_list;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Models/Group.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Models/Group.java	(date 1608986751966)
-@@ -6,15 +6,17 @@
-     String group_name;
-     String group_owner;
-     String invite_code;
-+    String group_id;
-     ArrayList<String> member_list;
- 
-     public Group() {
-     }
- 
--    public Group(String group_name, String group_owner, String invite_code, ArrayList<String> member_list) {
-+    public Group(String group_name, String group_owner, String invite_code, String group_id, ArrayList<String> member_list) {
-         this.group_name = group_name;
-         this.group_owner = group_owner;
-         this.invite_code = invite_code;
-+        this.group_id = group_id;
-         this.member_list = member_list;
-     }
- 
-@@ -42,6 +44,14 @@
-         this.invite_code = invite_code;
-     }
- 
-+    public String getGroup_id() {
-+        return group_id;
-+    }
-+
-+    public void setGroup_id(String group_id) {
-+        this.group_id = group_id;
-+    }
-+
-     public ArrayList<String> getMember_list() {
-         return member_list;
-     }
-Index: app/src/main/java/com/example/pabs/Fragments/GroupFragment/GroupFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.GroupFragment;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport android.text.method.ScrollingMovementMethod;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport android.widget.Button;\r\n\r\nimport android.widget.TextView;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.pabs.Models.Group;\r\nimport com.example.pabs.R;\r\n\r\npublic class GroupFragment extends Fragment {\r\n    private static final String TAG = \"GroupFragment\";\r\n    //UI\r\n    private Button back_button;\r\n    private Button plus_button;\r\n    private View containerView;\r\n    private TextView group_name_tv;\r\n    private TextView group_owner_tv;\r\n    private TextView chat_output_tv;\r\n\r\n    private Group mGroup;\r\n    private String mUID;\r\n    /**\r\n     * Constructor\r\n     */\r\n    public GroupFragment(Group grp, String uID) {\r\n        mGroup = grp;\r\n        mUID = uID;\r\n    }\r\n\r\n    /**\r\n     * On Create\r\n     */\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    /**\r\n     * On Create View\r\n     */\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, final ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_group, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_group_layout);\r\n\r\n        //init UI\r\n        group_name_tv = view.findViewById(R.id.fg_group_name);\r\n        group_owner_tv = view.findViewById(R.id.fg_owner_name);\r\n        chat_output_tv = view.findViewById(R.id.fg_chat_output);\r\n\r\n        chat_output_tv.setMovementMethod(new ScrollingMovementMethod());\r\n\r\n\r\n        //setting text in UI with Group data\r\n        group_name_tv.setText(mGroup.getGroup_name());\r\n        group_owner_tv.setText(mGroup.getGroup_owner());\r\n\r\n        //back button\r\n        back_button = view.findViewById(R.id.fg_back_button);\r\n\r\n        back_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //clear all backstack\r\n                clearBackstack();\r\n            }\r\n        });\r\n\r\n        //delete button to delete event\r\n        plus_button = view.findViewById(R.id.fg_plus_button);\r\n\r\n        plus_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                // openGroupOptionsDialogFragment();\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    /**\r\n     * clearBackstack\r\n     */\r\n    public void clearBackstack(){\r\n        //clear all backstact\r\n        if (getActivity().getSupportFragmentManager().getBackStackEntryCount() == 1) {\r\n            getActivity().getSupportFragmentManager().popBackStack(\"GroupFragment\", 1);\r\n        } else {\r\n            for(int i = 0; i < getActivity().getSupportFragmentManager().getBackStackEntryCount(); ++i) {\r\n                getActivity().getSupportFragmentManager().popBackStack();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * onStart\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n    }\r\n\r\n    /**\r\n     * onStop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/GroupFragment/GroupFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/GroupFragment/GroupFragment.java	(date 1608986752477)
-@@ -1,22 +1,32 @@
- package com.example.pabs.Fragments.GroupFragment;
- 
- import android.os.Bundle;
--
--import android.text.method.ScrollingMovementMethod;
-+import android.text.format.DateFormat;
-+import android.view.KeyEvent;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
--
-+import android.view.inputmethod.EditorInfo;
- import android.widget.Button;
--
-+import android.widget.EditText;
-+import android.widget.ListView;
- import android.widget.TextView;
- 
-+import androidx.annotation.NonNull;
- import androidx.fragment.app.Fragment;
- 
-+import com.example.pabs.Models.ChatMessage;
- import com.example.pabs.Models.Group;
- import com.example.pabs.R;
-+import com.firebase.ui.database.FirebaseListAdapter;
-+import com.google.android.material.floatingactionbutton.FloatingActionButton;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.ValueEventListener;
- 
--public class GroupFragment extends Fragment {
-+public class GroupFragment extends Fragment implements GroupOptionsDialogFragment.GroupOptionsDialogListener {
-     private static final String TAG = "GroupFragment";
-     //UI
-     private Button back_button;
-@@ -24,10 +34,18 @@
-     private View containerView;
-     private TextView group_name_tv;
-     private TextView group_owner_tv;
--    private TextView chat_output_tv;
-+    private FloatingActionButton fab;
-+
-+    private final Group mGroup;
-+    private final String mUID;
-+    private int mState;
-+    private String nickname;
-+    private String group_owner_username;
- 
--    private Group mGroup;
--    private String mUID;
-+    private EditText input_et;
-+
-+    private FirebaseListAdapter<ChatMessage> adapter;
-+
-     /**
-      * Constructor
-      */
-@@ -36,6 +54,16 @@
-         mUID = uID;
-     }
- 
-+    private int getStatus() {
-+        if (mUID.equals(mGroup.getGroup_owner())) {
-+            //owner
-+            return 0;
-+        } else {
-+            //member
-+            return 1;
-+        }
-+    }
-+
-     /**
-      * On Create
-      */
-@@ -55,19 +83,94 @@
-         containerView = getActivity().findViewById(R.id.activity_group_layout);
- 
-         //init UI
--        group_name_tv = view.findViewById(R.id.fg_group_name);
--        group_owner_tv = view.findViewById(R.id.fg_owner_name);
--        chat_output_tv = view.findViewById(R.id.fg_chat_output);
-+        group_name_tv = view.findViewById(R.id.f_g_group_name);
-+        group_owner_tv = view.findViewById(R.id.f_g_owner_name);
-+        input_et = (EditText) view.findViewById(R.id.f_g_rlChat_et);
-+
-+        mState = getStatus();
-+
-+        //Getting events from database and setting them to recyclerview
-+        DatabaseReference databaseUserRef;
-+        databaseUserRef = FirebaseDatabase.getInstance().getReference().child("USER");
-+
-+        databaseUserRef.addListenerForSingleValueEvent(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                for (DataSnapshot user : snapshot.getChildren()) {
-+                    if ((user.getKey()).equals(mUID)) {
-+                        nickname = user.child("nickname").getValue().toString();
-+                    }
-+                    if ((user.getKey()).equals(mGroup.getGroup_owner())) {
-+                        group_owner_username = user.child("user_name").getValue().toString();
-+                        group_owner_tv.setText(group_owner_username);
-+                    }
-+                }
-+            }
-+
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
-+
-+            }
-+        });
-+
-+        fab = (FloatingActionButton) view.findViewById(R.id.f_g_rlChat_sendBtn);
-+
-+        fab.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                // Read the input field and push a new instance
-+                // of ChatMessage to the Firebase database
-+                FirebaseDatabase.getInstance()
-+                        .getReference().child("CHAT").child(mGroup.getGroup_id())
-+                        .push()
-+                        .setValue(new ChatMessage(input_et.getText().toString(), nickname)
-+                        );
-+
-+                // Clear the input
-+                input_et.setText("");
-+            }
-+        });
-+
-+        input_et.setOnEditorActionListener(new TextView.OnEditorActionListener() {
-+            @Override
-+            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
-+                boolean handled = false;
-+                if (actionId == EditorInfo.IME_ACTION_GO) {
-+                    //Perform your Actions here.
-+                    fab.performClick();
-+                }
-+                return handled;
-+            }
-+        });
-+
-+        ListView listOfMessages = (ListView) view.findViewById(R.id.f_g_rlChat_lv);
- 
--        chat_output_tv.setMovementMethod(new ScrollingMovementMethod());
-+        adapter = new FirebaseListAdapter<ChatMessage>(getActivity(), ChatMessage.class,
-+                R.layout.message, FirebaseDatabase.getInstance().getReference().child("CHAT").child(mGroup.getGroup_id())) {
-+            @Override
-+            protected void populateView(View v, ChatMessage model, int position) {
-+                // Get references to the views of message.xml
-+                TextView messageText = (TextView) v.findViewById(R.id.message_text);
-+                TextView messageUser = (TextView) v.findViewById(R.id.message_user);
-+                TextView messageTime = (TextView) v.findViewById(R.id.message_time);
- 
-+                // Set their text
-+                messageText.setText(model.getMessageText());
-+                messageUser.setText(model.getMessageUser());
-+
-+                // Format the date before showing it
-+                messageTime.setText(DateFormat.format("dd-MM-yyyy (HH:mm:ss)",
-+                        model.getMessageTime()));
-+            }
-+        };
-+
-+        listOfMessages.setAdapter(adapter);
- 
-         //setting text in UI with Group data
-         group_name_tv.setText(mGroup.getGroup_name());
--        group_owner_tv.setText(mGroup.getGroup_owner());
- 
-         //back button
--        back_button = view.findViewById(R.id.fg_back_button);
-+        back_button = view.findViewById(R.id.f_g_back_button);
- 
-         back_button.setOnClickListener(new View.OnClickListener() {
-             @Override
-@@ -77,13 +180,13 @@
-             }
-         });
- 
--        //delete button to delete event
--        plus_button = view.findViewById(R.id.fg_plus_button);
-+        //plus button to open more options
-+        plus_button = view.findViewById(R.id.f_g_plus_button);
- 
-         plus_button.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
--                // openGroupOptionsDialogFragment();
-+                openGroupOptionsDialogFragment();
-             }
-         });
- 
-@@ -93,17 +196,27 @@
-     /**
-      * clearBackstack
-      */
--    public void clearBackstack(){
-+    public void clearBackstack() {
-         //clear all backstact
-         if (getActivity().getSupportFragmentManager().getBackStackEntryCount() == 1) {
-             getActivity().getSupportFragmentManager().popBackStack("GroupFragment", 1);
-         } else {
--            for(int i = 0; i < getActivity().getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-+            for (int i = 0; i < getActivity().getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-                 getActivity().getSupportFragmentManager().popBackStack();
-             }
-         }
-     }
- 
-+    /**
-+     * open group dialog fragment
-+     */
-+    private void openGroupOptionsDialogFragment() {
-+        GroupOptionsDialogFragment groupOptionsDialogFragment = new GroupOptionsDialogFragment();
-+        groupOptionsDialogFragment.setListener(GroupFragment.this, mState);
-+        groupOptionsDialogFragment.setCancelable(false);
-+        groupOptionsDialogFragment.show(getActivity().getSupportFragmentManager(), "groupDialogFragment");
-+    }
-+
-     /**
-      * onStart
-      */
-@@ -123,4 +236,29 @@
-         containerView.setVisibility(View.VISIBLE);
-     }
- 
-+    @Override
-+    public void CloseGroup() {
-+
-+    }
-+
-+    @Override
-+    public void AddKickMembers() {
-+
-+    }
-+
-+    @Override
-+    public void GroupEvents() {
-+
-+    }
-+
-+    @Override
-+    public void LeaveGroup() {
-+
-+    }
-+
-+    @Override
-+    public void ShowCode() {
-+        ShowCodeDialogFragment showCodeDialogFragment = new ShowCodeDialogFragment(mGroup.getInvite_code());
-+        showCodeDialogFragment.show(getActivity().getSupportFragmentManager(), "showCodeDialogFragment");
-+    }
- }
-Index: app/src/main/res/layout/fragment_dialog_event_options.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--Container for nickname fragment-->\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/half_transparent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:visibility=\"visible\"\r\n    tools:context=\".Fragments.NicknameDialogFragment\"\r\n    >\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"16dp\">\r\n\r\n        <!--Container 0-->\r\n        <RelativeLayout\r\n            android:id=\"@+id/f_e_o_lr0\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:paddingBottom=\"100dp\">\r\n\r\n        </RelativeLayout>\r\n\r\n        <!--Container 1-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr1\"\r\n            android:layout_above=\"@id/f_e_o_lr0\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingRight=\"30dp\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/f_e_o_lr1_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:textSize=\"20sp\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:paddingRight=\"10dp\"\r\n                android:text=\"Join/Leave event\"\r\n                android:textColor=\"#720BC2\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_JoinLeaveEventImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/joinleaveevent\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <!--Container 2-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr2\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr1\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:paddingRight=\"10dp\"\r\n                android:textSize=\"20sp\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:text=\"Create/View ToDo\"\r\n                android:textColor=\"#720BC2\"/>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_ToDoImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/createviewtodo\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <!--Container 3-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr3\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr2\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:textSize=\"20sp\"\r\n                android:paddingRight=\"10dp\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:text=\"Close event\"\r\n                android:textColor=\"#720BC2\"/>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_CloseEventImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/closeevent\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <!--Container 4-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr4\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr3\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:paddingRight=\"10dp\"\r\n                android:textSize=\"20sp\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:text=\"Description\"\r\n                android:textColor=\"#720BC2\"/>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_DescriptionImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/description\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <!--Container 5-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr5\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr4\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"20sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:paddingRight=\"10dp\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:text=\"Reminder\"\r\n                android:textColor=\"#720BC2\"/>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_ReminderImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/reminder\" />\r\n        </LinearLayout>\r\n\r\n        <!--Container 6-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr6\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr5\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:text=\"Add/Kick Staff\"\r\n                android:textSize=\"20sp\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:textColor=\"#720BC2\"\r\n                android:paddingRight=\"10dp\"\r\n                />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_AddKickStaffImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/addkickstaff\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <!--Container 7-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr7\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr6\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"20sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:paddingRight=\"10dp\"\r\n                android:text=\"Repetition\"\r\n                android:textColor=\"#720BC2\"/>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_RepetitionImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/repetition\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <!--Container 8-->\r\n        <LinearLayout\r\n            android:id=\"@+id/f_e_o_lr8\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_above=\"@id/f_e_o_lr7\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingRight=\"30dp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:paddingBottom=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textSize=\"20sp\"\r\n                android:layout_gravity=\"center\"\r\n                android:fontFamily=\"@font/roboto_black_italic\"\r\n                android:text=\"Upload/Change Image\"\r\n                android:textColor=\"#720BC2\"\r\n                android:paddingRight=\"10dp\"\r\n                />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_UpChImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:background=\"@drawable/uploadchangeimage\"\r\n                />\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/f_e_o_exitImg\"\r\n                android:layout_width=\"50dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:src=\"@drawable/x\"\r\n                />\r\n\r\n        </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_dialog_event_options.xml	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/res/layout/fragment_dialog_event_options.xml	(date 1608976342295)
-@@ -8,7 +8,7 @@
-     android:background="@color/half_transparent"
-     android:animateLayoutChanges="true"
-     android:visibility="visible"
--    tools:context=".Fragments.NicknameDialogFragment"
-+    tools:context=".Fragments.EventFragment.EventOptionsDialogFragment"
-     >
- 
-     <RelativeLayout
-Index: app/src/main/java/com/example/pabs/HelperClass/DateInputMask.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.HelperClass;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.widget.EditText;\r\n\r\nimport java.util.Calendar;\r\n\r\n/**\r\n *  Watches text of dates, to make sure the input is a correct date\r\n */\r\n\r\npublic class DateInputMask implements TextWatcher {\r\n\r\n    private String current = \"\";\r\n    private String ddmmyyyy = \"DDMMYYYY\";\r\n    private Calendar cal = Calendar.getInstance();\r\n    private EditText input;\r\n\r\n    public DateInputMask(EditText input) {\r\n        this.input = input;\r\n        this.input.addTextChangedListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n    }\r\n\r\n    @SuppressLint(\"DefaultLocale\")\r\n    @Override\r\n    public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n        if (s.toString().equals(current)) {\r\n            return;\r\n        }\r\n\r\n        String clean = s.toString().replaceAll(\"[^\\\\d.]|\\\\.\", \"\");\r\n        String cleanC = current.replaceAll(\"[^\\\\d.]|\\\\.\", \"\");\r\n\r\n        int cl = clean.length();\r\n        int sel = cl;\r\n        for (int i = 2; i <= cl && i < 6; i += 2) {\r\n            sel++;\r\n        }\r\n        //Fix for pressing delete next to a forward slash\r\n        if (clean.equals(cleanC)) sel--;\r\n\r\n        if (clean.length() < 8){\r\n            clean = clean + ddmmyyyy.substring(clean.length());\r\n        }else{\r\n            //This part makes sure that when we finish entering numbers\r\n            //the date is correct, fixing it otherwise\r\n            int day  = Integer.parseInt(clean.substring(0,2));\r\n            int mon  = Integer.parseInt(clean.substring(2,4));\r\n            int year = Integer.parseInt(clean.substring(4,8));\r\n\r\n            mon = mon < 1 ? 1 : Math.min(mon, 12);\r\n            cal.set(Calendar.MONTH, mon-1);\r\n            year = (year<1900)?1900: Math.min(year, 2100);\r\n            cal.set(Calendar.YEAR, year);\r\n            // ^ first set year for the line below to work correctly\r\n            //with leap years - otherwise, date e.g. 29/02/2012\r\n            //would be automatically corrected to 28/02/2012\r\n\r\n            day = Math.min(day, cal.getActualMaximum(Calendar.DATE));\r\n            clean = String.format(\"%02d%02d%02d\",day, mon, year);\r\n        }\r\n\r\n        clean = String.format(\"%s/%s/%s\", clean.substring(0, 2),\r\n                clean.substring(2, 4),\r\n                clean.substring(4, 8));\r\n\r\n        sel = Math.max(sel, 0);\r\n        current = clean;\r\n        input.setText(current);\r\n        input.setSelection(Math.min(sel, current.length()));\r\n    }\r\n\r\n    @Override\r\n    public void afterTextChanged(Editable s) {\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/HelperClass/DateInputMask.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/HelperClass/DateInputMask.java	(date 1608986752498)
-@@ -8,15 +8,15 @@
- import java.util.Calendar;
- 
- /**
-- *  Watches text of dates, to make sure the input is a correct date
-+ * Watches text of dates, to make sure the input is a correct date
-  */
- 
- public class DateInputMask implements TextWatcher {
- 
-     private String current = "";
--    private String ddmmyyyy = "DDMMYYYY";
--    private Calendar cal = Calendar.getInstance();
--    private EditText input;
-+    private final String ddmmyyyy = "DDMMYYYY";
-+    private final Calendar cal = Calendar.getInstance();
-+    private final EditText input;
- 
-     public DateInputMask(EditText input) {
-         this.input = input;
-@@ -46,25 +46,25 @@
-         //Fix for pressing delete next to a forward slash
-         if (clean.equals(cleanC)) sel--;
- 
--        if (clean.length() < 8){
-+        if (clean.length() < 8) {
-             clean = clean + ddmmyyyy.substring(clean.length());
--        }else{
-+        } else {
-             //This part makes sure that when we finish entering numbers
-             //the date is correct, fixing it otherwise
--            int day  = Integer.parseInt(clean.substring(0,2));
--            int mon  = Integer.parseInt(clean.substring(2,4));
--            int year = Integer.parseInt(clean.substring(4,8));
-+            int day = Integer.parseInt(clean.substring(0, 2));
-+            int mon = Integer.parseInt(clean.substring(2, 4));
-+            int year = Integer.parseInt(clean.substring(4, 8));
- 
-             mon = mon < 1 ? 1 : Math.min(mon, 12);
--            cal.set(Calendar.MONTH, mon-1);
--            year = (year<1900)?1900: Math.min(year, 2100);
-+            cal.set(Calendar.MONTH, mon - 1);
-+            year = (year < 1900) ? 1900 : Math.min(year, 2100);
-             cal.set(Calendar.YEAR, year);
-             // ^ first set year for the line below to work correctly
-             //with leap years - otherwise, date e.g. 29/02/2012
-             //would be automatically corrected to 28/02/2012
- 
-             day = Math.min(day, cal.getActualMaximum(Calendar.DATE));
--            clean = String.format("%02d%02d%02d",day, mon, year);
-+            clean = String.format("%02d%02d%02d", day, mon, year);
-         }
- 
-         clean = String.format("%s/%s/%s", clean.substring(0, 2),
-Index: app/src/main/java/com/example/pabs/Adapters/GroupRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Fragments.EventFragment.EventFragment;\r\nimport com.example.pabs.Fragments.GroupFragment.GroupFragment;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.Models.Group;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\npublic class GroupRecyclerViewAdapter  extends RecyclerView.Adapter<GroupRecyclerViewAdapter.MyViewHolder>{\r\n    private Context mContext;\r\n    private ArrayList<Group> mData;\r\n    private ArrayList<Group> mDataCopy;\r\n    private FragmentManager mFragment;\r\n    private String mUID;\r\n\r\n    /**\r\n     * Constructor of EventRecyclerViewAdapter\r\n     */\r\n    public GroupRecyclerViewAdapter(Context mContext, ArrayList<Group> mData, FragmentManager fragment, String uID) {\r\n        this.mContext = mContext;\r\n        this.mData = mData;\r\n        this.mFragment = fragment;\r\n        this.mUID = uID;\r\n\r\n        //list copy\r\n        mDataCopy = new ArrayList<>();\r\n        Collections.copy(mData, mDataCopy);\r\n        mDataCopy.addAll(mData);\r\n\r\n    }\r\n\r\n    public void filter(String text) {\r\n\r\n        mData.clear();\r\n        if(text.isEmpty()){\r\n            mData.addAll(mDataCopy);\r\n        } else{\r\n            text = text.toLowerCase();\r\n            for(Group item: mDataCopy){\r\n                if(item.getGroup_name().toLowerCase().contains(text)){\r\n                    mData.add(item);\r\n                }\r\n            }\r\n        }\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    /**\r\n     * OnCreateViewHolder - layout initializer\r\n     */\r\n    @NonNull\r\n    @Override\r\n    public GroupRecyclerViewAdapter.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        //Init view and set view of viewHolder\r\n        View view;\r\n        LayoutInflater mInflater = LayoutInflater.from(mContext);\r\n        view = mInflater.inflate(R.layout.cardview_group, parent, false);\r\n        return new GroupRecyclerViewAdapter.MyViewHolder(view);\r\n    }\r\n\r\n    /**\r\n     * Set data for every individual card\r\n     */\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final GroupRecyclerViewAdapter.MyViewHolder holder, final int position) {\r\n\r\n        //set data\r\n        holder.tv_title.setText(mData.get(position).getGroup_name());\r\n\r\n        //set click listener\r\n        holder.cardView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Toast.makeText(mContext, mData.get(position).getTitle(), Toast.LENGTH_SHORT).show();\r\n\r\n                //Getting events from database and setting them to recyclerview\r\n                DatabaseReference databaseGroupRef;\r\n                databaseGroupRef = FirebaseDatabase.getInstance().getReference().child(\"GROUP\");\r\n                databaseGroupRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (final DataSnapshot group : snapshot.getChildren()) {\r\n                                //Loop to go through all child nodes of event\r\n\r\n                                //temp for storing data from database\r\n                                final Group temp = new Group();\r\n                                //setting data to temp from database\r\n                                temp.setGroup_owner(group.child(\"group_owner\").getValue().toString());\r\n                                temp.setGroup_name(group.child(\"group_name\").getValue().toString());\r\n\r\n                                final ArrayList<String> joined_members =  new ArrayList<>();\r\n                                group.getRef().child(\"joined_members\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                                        for (DataSnapshot member : snapshot.getChildren()) {\r\n                                            //Loop 1 to go through all child nodes of staff members\r\n                                            joined_members.add(member.getValue().toString());\r\n                                        }\r\n\r\n                                        //add staff members to event\r\n                                        temp.setMember_list(joined_members);\r\n\r\n\r\n                                        //open Event which matches with the title from the Database Event\r\n                                        if(mData.get(position).getGroup_name().equals(temp.getGroup_name())){\r\n                                            mFragment\r\n                                                    .beginTransaction()\r\n                                                    .replace( R.id.fragment_group_container , new GroupFragment(temp, mUID))\r\n                                                    .addToBackStack(\"GroupFragment\")\r\n                                                    .commit();\r\n                                        }\r\n\r\n                                            }\r\n\r\n                                            @Override\r\n                                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                            }\r\n                                        });\r\n\r\n\r\n\r\n                                    }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            //if database failed\r\n                        }\r\n                    });\r\n                }\r\n\r\n        });\r\n///////////////////\r\n    }\r\n\r\n    /**\r\n     * Returns size of cards\r\n     */\r\n    @Override\r\n    public int getItemCount() {\r\n        return mData.size();\r\n    }\r\n\r\n    /**\r\n     * Creates card item\r\n     */\r\n    public static class MyViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        //UI\r\n        TextView tv_title;\r\n        CardView cardView;\r\n\r\n        /**\r\n         * Creates view for the item\r\n         */\r\n        public MyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            //get UI as objects\r\n            tv_title = (TextView) itemView.findViewById(R.id.c_e_group_title);\r\n            cardView = (CardView) itemView.findViewById(R.id.card_group);\r\n\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/GroupRecyclerViewAdapter.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Adapters/GroupRecyclerViewAdapter.java	(date 1608987005032)
-@@ -11,9 +11,7 @@
- import androidx.fragment.app.FragmentManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
--import com.example.pabs.Fragments.EventFragment.EventFragment;
- import com.example.pabs.Fragments.GroupFragment.GroupFragment;
--import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.Models.Group;
- import com.example.pabs.R;
- import com.google.firebase.database.DataSnapshot;
-@@ -24,17 +22,22 @@
- 
- import java.util.ArrayList;
- import java.util.Collections;
--import java.util.List;
- 
--public class GroupRecyclerViewAdapter  extends RecyclerView.Adapter<GroupRecyclerViewAdapter.MyViewHolder>{
--    private Context mContext;
--    private ArrayList<Group> mData;
--    private ArrayList<Group> mDataCopy;
--    private FragmentManager mFragment;
--    private String mUID;
-+public class GroupRecyclerViewAdapter extends RecyclerView.Adapter<GroupRecyclerViewAdapter.MyViewHolder> {
-+
-+    //UI
-+    private final Context mContext;
-+    private final FragmentManager mFragment;
-+
-+    //Array
-+    private final ArrayList<Group> mData;
-+    private final ArrayList<Group> mDataCopy;
-+
-+    //data
-+    private final String mUID;
- 
-     /**
--     * Constructor of EventRecyclerViewAdapter
-+     * Constructor of GroupRecyclerViewAdapter
-      */
-     public GroupRecyclerViewAdapter(Context mContext, ArrayList<Group> mData, FragmentManager fragment, String uID) {
-         this.mContext = mContext;
-@@ -49,15 +52,18 @@
- 
-     }
- 
-+    /**
-+     * filter for searching through adapter elements
-+     */
-     public void filter(String text) {
- 
-         mData.clear();
--        if(text.isEmpty()){
-+        if (text.isEmpty()) {
-             mData.addAll(mDataCopy);
--        } else{
-+        } else {
-             text = text.toLowerCase();
--            for(Group item: mDataCopy){
--                if(item.getGroup_name().toLowerCase().contains(text)){
-+            for (Group item : mDataCopy) {
-+                if (item.getGroup_name().toLowerCase().contains(text)) {
-                     mData.add(item);
-                 }
-             }
-@@ -97,62 +103,62 @@
-                 DatabaseReference databaseGroupRef;
-                 databaseGroupRef = FirebaseDatabase.getInstance().getReference().child("GROUP");
-                 databaseGroupRef.addListenerForSingleValueEvent(new ValueEventListener() {
--                        @Override
--                        public void onDataChange(@NonNull DataSnapshot snapshot) {
--                            for (final DataSnapshot group : snapshot.getChildren()) {
--                                //Loop to go through all child nodes of event
-+                    @Override
-+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                        for (final DataSnapshot group : snapshot.getChildren()) {
-+                            //Loop to go through all child nodes of event
- 
--                                //temp for storing data from database
--                                final Group temp = new Group();
--                                //setting data to temp from database
--                                temp.setGroup_owner(group.child("group_owner").getValue().toString());
--                                temp.setGroup_name(group.child("group_name").getValue().toString());
-+                            //temp for storing data from database
-+                            final Group temp = new Group();
-+                            //setting data to temp from database
-+                            temp.setGroup_owner(group.child("group_owner").getValue().toString());
-+                            temp.setGroup_name(group.child("group_name").getValue().toString());
-+                            temp.setGroup_id(group.child("group_id").getValue().toString());
-+                            temp.setInvite_code(group.child("invite_code").getValue().toString());
- 
--                                final ArrayList<String> joined_members =  new ArrayList<>();
--                                group.getRef().child("joined_members").addListenerForSingleValueEvent(new ValueEventListener() {
--                                    @Override
--                                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                            final ArrayList<String> joined_members = new ArrayList<>();
-+                            group.getRef().child("joined_members").addListenerForSingleValueEvent(new ValueEventListener() {
-+                                @Override
-+                                public void onDataChange(@NonNull DataSnapshot snapshot) {
- 
--                                        for (DataSnapshot member : snapshot.getChildren()) {
--                                            //Loop 1 to go through all child nodes of staff members
--                                            joined_members.add(member.getValue().toString());
--                                        }
-+                                    for (DataSnapshot member : snapshot.getChildren()) {
-+                                        //Loop to go through all child nodes of joined members
-+                                        joined_members.add(member.getValue().toString());
-+                                    }
- 
--                                        //add staff members to event
--                                        temp.setMember_list(joined_members);
-+                                    //add joined members to event
-+                                    temp.setMember_list(joined_members);
- 
- 
--                                        //open Event which matches with the title from the Database Event
--                                        if(mData.get(position).getGroup_name().equals(temp.getGroup_name())){
--                                            mFragment
--                                                    .beginTransaction()
--                                                    .replace( R.id.fragment_group_container , new GroupFragment(temp, mUID))
--                                                    .addToBackStack("GroupFragment")
--                                                    .commit();
--                                        }
-+                                    //open Group which matches with the name from the Database Group
-+                                    if (mData.get(position).getGroup_name().equals(temp.getGroup_name())) {
-+                                        mFragment
-+                                                .beginTransaction()
-+                                                .replace(R.id.fragment_group_container, new GroupFragment(temp, mUID))
-+                                                .addToBackStack("GroupFragment")
-+                                                .commit();
-+                                    }
- 
--                                            }
-+                                }
- 
--                                            @Override
--                                            public void onCancelled(@NonNull DatabaseError error) {
-+                                @Override
-+                                public void onCancelled(@NonNull DatabaseError error) {
- 
--                                            }
--                                        });
-+                                }
-+                            });
- 
- 
--
--                                    }
--                        }
-+                        }
-+                    }
- 
--                        @Override
--                        public void onCancelled(@NonNull DatabaseError error) {
--                            //if database failed
--                        }
--                    });
--                }
-+                    @Override
-+                    public void onCancelled(@NonNull DatabaseError error) {
-+                        //if database failed
-+                    }
-+                });
-+            }
- 
-         });
--///////////////////
-     }
- 
-     /**
-@@ -166,7 +172,7 @@
-     /**
-      * Creates card item
-      */
--    public static class MyViewHolder extends RecyclerView.ViewHolder{
-+    public static class MyViewHolder extends RecyclerView.ViewHolder {
- 
-         //UI
-         TextView tv_title;
-Index: app/src/main/java/com/example/pabs/LoginActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.pabs.Fragments.NicknameDialogFragment;\r\nimport com.example.pabs.Fragments.PasswordRecoveryFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\n/**\r\n * Handles login for users\r\n */\r\n\r\npublic class LoginActivity extends AppCompatActivity implements NicknameDialogFragment.NicknameDialogListener {\r\n\r\n    //DEBUG\r\n    private static final String TAG = \"LoginActivity\";\r\n\r\n    //UI\r\n    private EditText email_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n    private FirebaseAuth mAuth = null;\r\n    private FirebaseUser user = null;\r\n    private String token = null;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        email_et = findViewById(R.id.l_email);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openPasswordRecoveryFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //dialog on loading\r\n                mDialog = new ProgressDialog(LoginActivity.this);\r\n\r\n                mDialog.setMessage(\"Please wait...\");\r\n                mDialog.setCancelable(false);\r\n                mDialog.show();\r\n\r\n\r\n                login_btn.setClickable(false);\r\n                //check internet connection\r\n                if(isInternetConnectionActivated()){\r\n                    //internet is active\r\n                    login();\r\n                }\r\n                else{\r\n                    //internet is not active\r\n                    new AlertDialog.Builder(LoginActivity.this)\r\n                            .setTitle(\"No internet connection!\")\r\n                            .setMessage(\"Please enable your internet to login!\")\r\n                            // A null listener allows the button to dismiss the dialog and take no further action.\r\n                            .setPositiveButton(\"Okay\", null)\r\n                            .setIcon(android.R.drawable.ic_dialog_alert)\r\n                            .show();\r\n                    login_btn.setClickable(true);\r\n                    mDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    /**\r\n     * Check internet connection\r\n     */\r\n    private boolean isInternetConnectionActivated() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            return true;\r\n        }\r\n        else{\r\n            //we are not connected to a network\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set token to avoid losing it\r\n     */\r\n    private void setToken(String s){\r\n        this.token = s;\r\n    }\r\n\r\n    /**\r\n     * Login\r\n     */\r\n    private void login(){\r\n\r\n        // check if fields are empty\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {\r\n\r\n            //get information from the edit text fields\r\n            final String email = email_et.getText().toString();\r\n            final String password = password_et.getText().toString();\r\n\r\n            //get token for user\r\n            FirebaseMessaging.getInstance().getToken()\r\n                    .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<String> task) {\r\n                            if (!task.isSuccessful()) {\r\n                                Log.w(TAG, \"Fetching FCM registration token failed\", task.getException());\r\n                                return;\r\n                            }\r\n\r\n                            // Get new FCM registration token\r\n                            token = task.getResult();\r\n                            //we have to use a setter else we lose the information inside onComplete\r\n                            setToken(token);\r\n                        }\r\n                    });\r\n\r\n            //Sign in using auth(email, pass)\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                // Sign in success\r\n                                user = mAuth.getCurrentUser();\r\n\r\n                                //Verify if user has nickname\r\n                                reference.child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        //check if user is online\r\n                                        if(snapshot.child(\"online\").getValue().equals(\"false\")){\r\n                                            //check if use has a nickname\r\n                                            if (snapshot.child(\"nickname\").getValue().equals(\"\")) {\r\n                                                //set nickname\r\n                                                openNicknameDialogFragment();\r\n                                                //settings\r\n                                                login_btn.setClickable(true);\r\n                                                mDialog.dismiss();\r\n                                            } else {\r\n                                                //proceed to next activity\r\n                                                loginSuccessful();\r\n                                                //settings\r\n                                                mDialog.dismiss();\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            Log.d(TAG, \"User is already online!\");\r\n                                            Toast.makeText(LoginActivity.this, \"User is already online!\", Toast.LENGTH_SHORT).show();\r\n                                            //settings\r\n                                            login_btn.setClickable(true);\r\n                                            mDialog.dismiss();\r\n                                        }\r\n                                    }\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database error\r\n                                        login_btn.setClickable(true);\r\n                                        //settings\r\n                                        mDialog.dismiss();\r\n                                        Log.w(TAG, \"On cancelled: \" + error);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                // If sign in fails, display a message to the user.\r\n                                Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                //settings\r\n                                login_btn.setClickable(true);\r\n                                mDialog.dismiss();\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n        {\r\n            // If sign in fails, display a message to the user.\r\n            Toast.makeText(LoginActivity.this, \"Wrong E-mail or Password!\", Toast.LENGTH_SHORT).show();\r\n            //settings\r\n            login_btn.setClickable(true);\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * apply nickname on dialog pressed OK\r\n     */\r\n    @Override\r\n    public void applyNickname(String nickname) {\r\n        reference.child(user.getUid()).child(\"nickname\").setValue(nickname);\r\n        loginSuccessful();\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void loginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n        //settings for user\r\n        reference.child(user.getUid()).child(\"online\").setValue(\"true\");\r\n        reference.child(user.getUid()).child(\"token\").setValue(token);\r\n\r\n        openEventActivity();\r\n    }\r\n\r\n    /**\r\n     * open nickname dialog fragment\r\n     */\r\n    private void openNicknameDialogFragment(){\r\n        NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();\r\n        nicknameDialogFragment.show(getSupportFragmentManager(),\"nicknameDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    private void openPasswordRecoveryFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_container_login, new PasswordRecoveryFragment())\r\n                .addToBackStack(\"PasswordRecoveryFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    private void openRegisterActivity(){\r\n        Intent intent = new Intent(this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open event activity\r\n     */\r\n    protected void openEventActivity() {\r\n        Intent intent = new Intent(this, EventActivity.class);\r\n        intent.putExtra(\"USER\", user.getUid());\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        login_btn.setClickable(true);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/LoginActivity.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1608986752177)
-@@ -98,11 +98,10 @@
- 
-                 login_btn.setClickable(false);
-                 //check internet connection
--                if(isInternetConnectionActivated()){
-+                if (isInternetConnectionActivated()) {
-                     //internet is active
-                     login();
--                }
--                else{
-+                } else {
-                     //internet is not active
-                     new AlertDialog.Builder(LoginActivity.this)
-                             .setTitle("No internet connection!")
-@@ -129,31 +128,26 @@
-      */
-     private boolean isInternetConnectionActivated() {
-         ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
--        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||
--                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {
--            //we are connected to a network
--            return true;
--        }
--        else{
--            //we are not connected to a network
--            return false;
--        }
-+        //we are connected to a network
-+        //we are not connected to a network
-+        return connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||
-+                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED;
-     }
- 
-     /**
-      * Set token to avoid losing it
-      */
--    private void setToken(String s){
-+    private void setToken(String s) {
-         this.token = s;
-     }
- 
-     /**
-      * Login
-      */
--    private void login(){
-+    private void login() {
- 
-         // check if fields are empty
--        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {
-+        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString())) {
- 
-             //get information from the edit text fields
-             final String email = email_et.getText().toString();
-@@ -190,7 +184,7 @@
-                                     @Override
-                                     public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                         //check if user is online
--                                        if(snapshot.child("online").getValue().equals("false")){
-+                                        if (snapshot.child("online").getValue().equals("false")) {
-                                             //check if use has a nickname
-                                             if (snapshot.child("nickname").getValue().equals("")) {
-                                                 //set nickname
-@@ -204,8 +198,7 @@
-                                                 //settings
-                                                 mDialog.dismiss();
-                                             }
--                                        }
--                                        else{
-+                                        } else {
-                                             Log.d(TAG, "User is already online!");
-                                             Toast.makeText(LoginActivity.this, "User is already online!", Toast.LENGTH_SHORT).show();
-                                             //settings
-@@ -213,6 +206,7 @@
-                                             mDialog.dismiss();
-                                         }
-                                     }
-+
-                                     @Override
-                                     public void onCancelled(@NonNull DatabaseError error) {
-                                         //database error
-@@ -222,9 +216,7 @@
-                                         Log.w(TAG, "On cancelled: " + error);
-                                     }
-                                 });
--                            }
--                            else
--                            {
-+                            } else {
-                                 // If sign in fails, display a message to the user.
-                                 Toast.makeText(LoginActivity.this, "Authentication failed.", Toast.LENGTH_SHORT).show();
-                                 //settings
-@@ -233,9 +225,7 @@
-                             }
-                         }
-                     });
--        }
--        else
--        {
-+        } else {
-             // If sign in fails, display a message to the user.
-             Toast.makeText(LoginActivity.this, "Wrong E-mail or Password!", Toast.LENGTH_SHORT).show();
-             //settings
-@@ -246,7 +236,6 @@
-     }
- 
- 
--
-     /**
-      * apply nickname on dialog pressed OK
-      */
-@@ -259,7 +248,7 @@
-     /**
-      * login successful
-      */
--    private void loginSuccessful(){
-+    private void loginSuccessful() {
-         Toast.makeText(LoginActivity.this, "Login Successful!", Toast.LENGTH_SHORT).show();
- 
-         //settings for user
-@@ -272,15 +261,15 @@
-     /**
-      * open nickname dialog fragment
-      */
--    private void openNicknameDialogFragment(){
-+    private void openNicknameDialogFragment() {
-         NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();
--        nicknameDialogFragment.show(getSupportFragmentManager(),"nicknameDialogFragment");
-+        nicknameDialogFragment.show(getSupportFragmentManager(), "nicknameDialogFragment");
-     }
- 
-     /**
-      * open forgot password fragment
-      */
--    private void openPasswordRecoveryFragment(){
-+    private void openPasswordRecoveryFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_container_login, new PasswordRecoveryFragment())
-@@ -291,7 +280,7 @@
-     /**
-      * open register activity
-      */
--    private void openRegisterActivity(){
-+    private void openRegisterActivity() {
-         Intent intent = new Intent(this, RegisterActivity.class);
-         startActivity(intent);
-     }
-Index: app/src/main/java/com/example/pabs/Models/DatabaseEvent.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Models;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * Class to store Events from Firebase Database\r\n */\r\n\r\npublic class DatabaseEvent {\r\n    String description;\r\n    String start_date;\r\n    String end_date;\r\n    String reminder;\r\n    String repetition;\r\n    String inv_code;\r\n    String event_name;\r\n    double location_x;\r\n    double location_y;\r\n    String location_name;\r\n    String thumbnail;\r\n    String priv_pub;\r\n    List<String> staff_members;\r\n    String owner_id;\r\n    List<String> joined_members;\r\n\r\n    public DatabaseEvent(){};\r\n\r\n    public DatabaseEvent(String description, String start_date, String end_date, String reminder, String repetition, String inv_code, String event_name, double location_x, double location_y, String location_name, String thumbnail, String priv_pub, List<String> staff_members, String user_id, List<String> joined_members) {\r\n        this.description = description;\r\n        this.start_date = start_date;\r\n        this.end_date = end_date;\r\n        this.reminder = reminder;\r\n        this.repetition = repetition;\r\n        this.inv_code = inv_code;\r\n        this.event_name = event_name;\r\n        this.location_x = location_x;\r\n        this.location_y = location_y;\r\n        this.location_name = location_name;\r\n        this.thumbnail = thumbnail;\r\n        this.priv_pub = priv_pub;\r\n        this.staff_members = staff_members;\r\n        this.owner_id = user_id;\r\n        this.joined_members = joined_members;\r\n    }\r\n\r\n    public List<String> getJoined_members() { return joined_members; }\r\n\r\n    public void setJoined_members(List<String> joined_members) { this.joined_members = joined_members; }\r\n\r\n    public String getOwner_id() {\r\n        return owner_id;\r\n    }\r\n\r\n    public void setOwner_id(String owner_id) {\r\n        this.owner_id = owner_id;\r\n    }\r\n\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n    public String getStart_date() {\r\n        return start_date;\r\n    }\r\n\r\n    public void setStart_date(String start_date) {\r\n        this.start_date = start_date;\r\n    }\r\n\r\n    public String getEnd_date() {\r\n        return end_date;\r\n    }\r\n\r\n    public void setEnd_date(String end_date) {\r\n        this.end_date = end_date;\r\n    }\r\n\r\n    public String getReminder() {\r\n        return reminder;\r\n    }\r\n\r\n    public void setReminder(String reminder) {\r\n        this.reminder = reminder;\r\n    }\r\n\r\n    public String getRepetition() {\r\n        return repetition;\r\n    }\r\n\r\n    public void setRepetition(String repetition) {\r\n        this.repetition = repetition;\r\n    }\r\n\r\n    public String getInv_code() {\r\n        return inv_code;\r\n    }\r\n\r\n    public void setInv_code(String inv_code) {\r\n        this.inv_code = inv_code;\r\n    }\r\n\r\n    public String getEvent_name() {\r\n        return event_name;\r\n    }\r\n\r\n    public void setEvent_name(String event_name) {\r\n        this.event_name = event_name;\r\n    }\r\n\r\n    public double getLocation_x() {\r\n        return location_x;\r\n    }\r\n\r\n    public void setLocation_x(double location_x) {\r\n        this.location_x = location_x;\r\n    }\r\n\r\n    public double getLocation_y() {\r\n        return location_y;\r\n    }\r\n\r\n    public void setLocation_y(double location_y) {\r\n        this.location_y = location_y;\r\n    }\r\n\r\n    public String getLocation_name() {\r\n        return location_name;\r\n    }\r\n\r\n    public void setLocation_name(String location_name) {\r\n        this.location_name = location_name;\r\n    }\r\n\r\n    public String getThumbnail() {\r\n        return thumbnail;\r\n    }\r\n\r\n    public void setThumbnail(String thumbnail) {\r\n        this.thumbnail = thumbnail;\r\n    }\r\n\r\n    public String getPriv_pub() {\r\n        return priv_pub;\r\n    }\r\n\r\n    public void setPriv_pub(String priv_pub) {\r\n        this.priv_pub = priv_pub;\r\n    }\r\n\r\n    public List<String> getStaff_members() {\r\n        return staff_members;\r\n    }\r\n\r\n    public void addToStaffListEnd(String str){\r\n        staff_members.add(str);\r\n    }\r\n\r\n    public void deleteStaffListElement(String str){\r\n        staff_members.remove(str);\r\n    }\r\n\r\n    public void addToJoinedListEnd(String str){\r\n        joined_members.add(str);\r\n    }\r\n\r\n    public void deleteJoinedListElement(String str){\r\n        joined_members.remove(str);\r\n    }\r\n\r\n    public void setStaff_members(List<String> staff_members) {\r\n        this.staff_members = staff_members;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Models/DatabaseEvent.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Models/DatabaseEvent.java	(date 1608986752220)
-@@ -23,7 +23,8 @@
-     String owner_id;
-     List<String> joined_members;
- 
--    public DatabaseEvent(){};
-+    public DatabaseEvent() {
-+    }
- 
-     public DatabaseEvent(String description, String start_date, String end_date, String reminder, String repetition, String inv_code, String event_name, double location_x, double location_y, String location_name, String thumbnail, String priv_pub, List<String> staff_members, String user_id, List<String> joined_members) {
-         this.description = description;
-@@ -43,9 +44,13 @@
-         this.joined_members = joined_members;
-     }
- 
--    public List<String> getJoined_members() { return joined_members; }
--
--    public void setJoined_members(List<String> joined_members) { this.joined_members = joined_members; }
-+    public List<String> getJoined_members() {
-+        return joined_members;
-+    }
-+
-+    public void setJoined_members(List<String> joined_members) {
-+        this.joined_members = joined_members;
-+    }
- 
-     public String getOwner_id() {
-         return owner_id;
-@@ -155,23 +160,23 @@
-         return staff_members;
-     }
- 
--    public void addToStaffListEnd(String str){
-+    public void setStaff_members(List<String> staff_members) {
-+        this.staff_members = staff_members;
-+    }
-+
-+    public void addToStaffListEnd(String str) {
-         staff_members.add(str);
-     }
- 
--    public void deleteStaffListElement(String str){
-+    public void deleteStaffListElement(String str) {
-         staff_members.remove(str);
-     }
- 
--    public void addToJoinedListEnd(String str){
-+    public void addToJoinedListEnd(String str) {
-         joined_members.add(str);
-     }
- 
--    public void deleteJoinedListElement(String str){
-+    public void deleteJoinedListElement(String str) {
-         joined_members.remove(str);
-     }
--
--    public void setStaff_members(List<String> staff_members) {
--        this.staff_members = staff_members;
--    }
- }
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment/CreateEventFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.EventFragment;\r\n\r\nimport android.content.Context;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Fragments.EventFragment.EventFragment;\r\nimport com.example.pabs.HelperClass.DateInputMask;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.R;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.concurrent.Callable;\r\nimport java.util.concurrent.ExecutionException;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.Future;\r\n\r\n/**\r\n * Creates a new event\r\n */\r\n\r\npublic class CreateEventFragment extends Fragment {\r\n\r\n    private static final String TAG = \"CreateEventFragment\";\r\n\r\n    //UI\r\n    private View containerView;\r\n    private Button back_button;\r\n    private Button next_button;\r\n    private EditText start_date_et;\r\n    private EditText end_date_et;\r\n    private EditText name_et;\r\n    private Spinner dropdown;\r\n    private EditText location_et;\r\n    private FrameLayout FragmentEventContainer;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n\r\n    private String mUID;\r\n\r\n    public CreateEventFragment(String uID){\r\n        mUID = uID;\r\n    }\r\n\r\n    /**\r\n     * on fragment created\r\n     */\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    /**\r\n     * on view created\r\n     */\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View CreateEventView = inflater.inflate(R.layout.fragment_create_event, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_event_layout);\r\n        //\r\n        FragmentEventContainer = getActivity().findViewById(R.id.fragment_event_container);\r\n\r\n        //back button\r\n        back_button = CreateEventView.findViewById(R.id.c_e_back_button);\r\n\r\n\r\n        back_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                getActivity().getSupportFragmentManager().popBackStack(\"CreateEventFragment\", 1);\r\n            }\r\n        });\r\n\r\n        //date edit text\r\n        //start date\r\n        start_date_et = CreateEventView.findViewById(R.id.c_e_event_start_date_edit);\r\n\r\n        new DateInputMask(start_date_et);\r\n\r\n        //end date\r\n        end_date_et = CreateEventView.findViewById(R.id.c_e_event_end_date_edit);\r\n\r\n        new DateInputMask(end_date_et);\r\n\r\n        //spinner\r\n        //get the spinner from the xml.\r\n        dropdown = CreateEventView.findViewById(R.id.c_e_public_private_spinner);\r\n        //create a list of items for the spinner.\r\n        String[] items = new String[]{\"Public\", \"Private\"};\r\n        //create an adapter to describe how the items are displayed, adapters are used in several places in android.\r\n        //There are multiple variations of this, but this is the basic variant.\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(getActivity(), android.R.layout.simple_spinner_dropdown_item, items);\r\n        //set the spinners adapter to the previously created one.\r\n        dropdown.setAdapter(adapter);\r\n\r\n        //location\r\n        location_et = CreateEventView.findViewById(R.id.c_e_event_location_edit);\r\n\r\n        //event name\r\n        name_et = CreateEventView.findViewById(R.id.c_e_event_name_edit);\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n        //next button\r\n        next_button = CreateEventView.findViewById(R.id.c_e_next_button);\r\n        next_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                if (!TextUtils.isEmpty(location_et.getText().toString())) {\r\n                    //if location field is not empty\r\n\r\n                    //getting lat and lng from location\r\n                    LatLng latLng = getLocationFromAddress(getActivity(), location_et.getText().toString());\r\n\r\n                    //if location is found\r\n                    if (latLng != null) {\r\n                        //getting user logged in\r\n                        FirebaseUser fireBaseUser = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n                        //check for empty fields\r\n                        if (!TextUtils.isEmpty(name_et.getText().toString()) && !TextUtils.isEmpty(start_date_et.getText().toString()) && !TextUtils.isEmpty(end_date_et.getText().toString())) {\r\n                            //new Database created from field contents written in by user\r\n                            DatabaseEvent databaseEvent = new DatabaseEvent();\r\n                            databaseEvent.setLocation_x(latLng.latitude);\r\n                            databaseEvent.setLocation_y(latLng.longitude);\r\n                            databaseEvent.setEvent_name(name_et.getText().toString());\r\n                            databaseEvent.setLocation_name(location_et.getText().toString());\r\n                            databaseEvent.setStart_date(start_date_et.getText().toString());\r\n                            databaseEvent.setEnd_date(end_date_et.getText().toString());\r\n                            databaseEvent.setPriv_pub(dropdown.getSelectedItem().toString());\r\n                            databaseEvent.setOwner_id(fireBaseUser.getUid());\r\n                            //set basic thumbnail\r\n                            databaseEvent.setThumbnail(\"https://firebasestorage.googleapis.com/v0/b/pabs-fa777.appspot.com/o/Images%2FNo_image_3x4.svg.png?alt=media&token=1a73a7ae-0447-4827-87c9-9ed1bb463351\");\r\n\r\n                            //pushing databaseEvent to database\r\n                            reference.push().setValue(databaseEvent);\r\n\r\n                            //open event\r\n                            openEvent(databaseEvent);\r\n                        }\r\n\r\n                        getAddress(latLng.latitude, latLng.longitude);\r\n\r\n                    } else {\r\n                        //if location is not found\r\n                        Toast.makeText(getActivity(), \"Wrong location!\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n                else{\r\n                    //if fields are empty\r\n                    Toast.makeText(getActivity(), \"Empty Fields!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        //return view\r\n        return CreateEventView;\r\n    }\r\n\r\n\r\n    /**\r\n     * open EventFragment with Data of created event\r\n     */\r\n    public void openEvent(DatabaseEvent databaseEvent){\r\n        getActivity().getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace( R.id.fragment_event_container , new EventFragment(databaseEvent, mUID))\r\n                .addToBackStack(\"EventFragment\")\r\n                .commit();\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Address from location\r\n     */\r\n    public void getAddress(double lat, double lng) {\r\n        try {\r\n            //init\r\n            Geocoder geo = new Geocoder(getActivity().getApplicationContext(), Locale.getDefault());\r\n            //get location address from lat lng\r\n            List<Address> addresses = geo.getFromLocation(lat, lng, 5);\r\n            if (addresses.isEmpty()) {\r\n                Log.d(TAG, \"Waiting for Location\");\r\n            }\r\n            else {\r\n                if (addresses.size() > 0) {\r\n                    //if location from lat lng was found write address\r\n                    Log.d(TAG, addresses.get(0).getAddressLine(0) + \", \" + addresses.get(0).getFeatureName() + \", \" + addresses.get(0).getLocality() +\", \" + addresses.get(0).getAdminArea() + \", \" + addresses.get(0).getCountryName());\r\n                }\r\n            }\r\n        }\r\n        catch(Exception e){\r\n            //if location lat lng was not found\r\n            Log.d(TAG, \"No Location Name Found\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Thread for handling the location search, to avoid UI failure\r\n     */\r\n    public class MyThread implements Callable<LatLng> {\r\n\r\n        private String strAddress;\r\n        private Geocoder coder;\r\n\r\n        public MyThread(String strAddress, Geocoder coder){\r\n            this.strAddress=strAddress;\r\n            this.coder=coder;\r\n        }\r\n        @Override\r\n        public LatLng call() {\r\n            LatLng p1 = null;\r\n            List<Address> address;\r\n            try {\r\n                // May throw an IOException\r\n\r\n                //getting first 5 results of address\r\n                address = coder.getFromLocationName(strAddress, 5);\r\n                if (address == null) {\r\n                    return null;\r\n                }\r\n\r\n                if(address.size() < 1)\r\n                {\r\n                    //if location not found\r\n                    //Toast.makeText(context, \"Invalid Location\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                else\r\n                {\r\n                    //get lat lng from location\r\n                    Address location = address.get(0);\r\n                    p1 = new LatLng(location.getLatitude(), location.getLongitude() );\r\n                }\r\n\r\n\r\n            } catch (IOException ex) {\r\n\r\n                ex.printStackTrace();\r\n            }\r\n            return p1;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * Get Location From Address\r\n     */\r\n    public LatLng getLocationFromAddress(Context context, String strAddress) {\r\n\r\n        //init\r\n        Geocoder coder = new Geocoder(context);\r\n        //get executer\r\n        ExecutorService service =  Executors.newSingleThreadExecutor();\r\n        //creating new thread\r\n        MyThread myThread = new MyThread(strAddress, coder);\r\n        //future variable to get the value after thread completed\r\n        Future<LatLng> future = service.submit(myThread);\r\n        //init p1\r\n        LatLng p1= null;\r\n        try {\r\n            //get LatLng result and give it to p1\r\n            p1 = future.get();\r\n        } catch (ExecutionException e) {\r\n            e.printStackTrace();\r\n        } catch (InterruptedException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //return lat lng of location\r\n        return p1;\r\n    }\r\n\r\n    /**\r\n     * on fragment start\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n        Log.d(TAG, \"onStart: \"+getActivity().getSupportFragmentManager().getBackStackEntryCount());\r\n    }\r\n\r\n    /**\r\n     * on fragment stop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment/CreateEventFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment/CreateEventFragment.java	(date 1608986752388)
-@@ -4,9 +4,6 @@
- import android.location.Address;
- import android.location.Geocoder;
- import android.os.Bundle;
--
--import androidx.fragment.app.Fragment;
--
- import android.text.TextUtils;
- import android.util.Log;
- import android.view.LayoutInflater;
-@@ -19,7 +16,8 @@
- import android.widget.Spinner;
- import android.widget.Toast;
- 
--import com.example.pabs.Fragments.EventFragment.EventFragment;
-+import androidx.fragment.app.Fragment;
-+
- import com.example.pabs.HelperClass.DateInputMask;
- import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.R;
-@@ -30,7 +28,6 @@
- import com.google.firebase.database.FirebaseDatabase;
- 
- import java.io.IOException;
--import java.util.ArrayList;
- import java.util.List;
- import java.util.Locale;
- import java.util.concurrent.Callable;
-@@ -61,9 +58,9 @@
-     //firebase
-     private DatabaseReference reference = null;
- 
--    private String mUID;
-+    private final String mUID;
- 
--    public CreateEventFragment(String uID){
-+    public CreateEventFragment(String uID) {
-         mUID = uID;
-     }
- 
-@@ -175,8 +172,7 @@
-                         //if location is not found
-                         Toast.makeText(getActivity(), "Wrong location!", Toast.LENGTH_SHORT).show();
-                     }
--                }
--                else{
-+                } else {
-                     //if fields are empty
-                     Toast.makeText(getActivity(), "Empty Fields!", Toast.LENGTH_SHORT).show();
-                 }
-@@ -191,10 +187,10 @@
-     /**
-      * open EventFragment with Data of created event
-      */
--    public void openEvent(DatabaseEvent databaseEvent){
-+    public void openEvent(DatabaseEvent databaseEvent) {
-         getActivity().getSupportFragmentManager()
-                 .beginTransaction()
--                .replace( R.id.fragment_event_container , new EventFragment(databaseEvent, mUID))
-+                .replace(R.id.fragment_event_container, new EventFragment(databaseEvent, mUID))
-                 .addToBackStack("EventFragment")
-                 .commit();
-     }
-@@ -211,66 +207,18 @@
-             List<Address> addresses = geo.getFromLocation(lat, lng, 5);
-             if (addresses.isEmpty()) {
-                 Log.d(TAG, "Waiting for Location");
--            }
--            else {
-+            } else {
-                 if (addresses.size() > 0) {
-                     //if location from lat lng was found write address
--                    Log.d(TAG, addresses.get(0).getAddressLine(0) + ", " + addresses.get(0).getFeatureName() + ", " + addresses.get(0).getLocality() +", " + addresses.get(0).getAdminArea() + ", " + addresses.get(0).getCountryName());
-+                    Log.d(TAG, addresses.get(0).getAddressLine(0) + ", " + addresses.get(0).getFeatureName() + ", " + addresses.get(0).getLocality() + ", " + addresses.get(0).getAdminArea() + ", " + addresses.get(0).getCountryName());
-                 }
-             }
--        }
--        catch(Exception e){
-+        } catch (Exception e) {
-             //if location lat lng was not found
-             Log.d(TAG, "No Location Name Found");
-         }
-     }
- 
--    /**
--     * Thread for handling the location search, to avoid UI failure
--     */
--    public class MyThread implements Callable<LatLng> {
--
--        private String strAddress;
--        private Geocoder coder;
--
--        public MyThread(String strAddress, Geocoder coder){
--            this.strAddress=strAddress;
--            this.coder=coder;
--        }
--        @Override
--        public LatLng call() {
--            LatLng p1 = null;
--            List<Address> address;
--            try {
--                // May throw an IOException
--
--                //getting first 5 results of address
--                address = coder.getFromLocationName(strAddress, 5);
--                if (address == null) {
--                    return null;
--                }
--
--                if(address.size() < 1)
--                {
--                    //if location not found
--                    //Toast.makeText(context, "Invalid Location", Toast.LENGTH_SHORT).show();
--                }
--                else
--                {
--                    //get lat lng from location
--                    Address location = address.get(0);
--                    p1 = new LatLng(location.getLatitude(), location.getLongitude() );
--                }
--
--
--            } catch (IOException ex) {
--
--                ex.printStackTrace();
--            }
--            return p1;
--        }
--
--    }
-     /**
-      * Get Location From Address
-      */
-@@ -279,13 +227,13 @@
-         //init
-         Geocoder coder = new Geocoder(context);
-         //get executer
--        ExecutorService service =  Executors.newSingleThreadExecutor();
-+        ExecutorService service = Executors.newSingleThreadExecutor();
-         //creating new thread
-         MyThread myThread = new MyThread(strAddress, coder);
-         //future variable to get the value after thread completed
-         Future<LatLng> future = service.submit(myThread);
-         //init p1
--        LatLng p1= null;
-+        LatLng p1 = null;
-         try {
-             //get LatLng result and give it to p1
-             p1 = future.get();
-@@ -306,7 +254,7 @@
-         super.onStart();
-         //Hiding the activity layout
-         containerView.setVisibility(View.GONE);
--        Log.d(TAG, "onStart: "+getActivity().getSupportFragmentManager().getBackStackEntryCount());
-+        Log.d(TAG, "onStart: " + getActivity().getSupportFragmentManager().getBackStackEntryCount());
-     }
- 
-     /**
-@@ -317,4 +265,49 @@
-         super.onStop();
-         containerView.setVisibility(View.VISIBLE);
-     }
-+
-+    /**
-+     * Thread for handling the location search, to avoid UI failure
-+     */
-+    public class MyThread implements Callable<LatLng> {
-+
-+        private final String strAddress;
-+        private final Geocoder coder;
-+
-+        public MyThread(String strAddress, Geocoder coder) {
-+            this.strAddress = strAddress;
-+            this.coder = coder;
-+        }
-+
-+        @Override
-+        public LatLng call() {
-+            LatLng p1 = null;
-+            List<Address> address;
-+            try {
-+                // May throw an IOException
-+
-+                //getting first 5 results of address
-+                address = coder.getFromLocationName(strAddress, 5);
-+                if (address == null) {
-+                    return null;
-+                }
-+
-+                if (address.size() < 1) {
-+                    //if location not found
-+                    //Toast.makeText(context, "Invalid Location", Toast.LENGTH_SHORT).show();
-+                } else {
-+                    //get lat lng from location
-+                    Address location = address.get(0);
-+                    p1 = new LatLng(location.getLatitude(), location.getLongitude());
-+                }
-+
-+
-+            } catch (IOException ex) {
-+
-+                ex.printStackTrace();
-+            }
-+            return p1;
-+        }
-+
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/EventActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.SearchView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.EventRecyclerViewAdapter;\r\nimport com.example.pabs.Fragments.CalendarFragment;\r\nimport com.example.pabs.Fragments.EventFragment.CreateEventFragment;\r\nimport com.example.pabs.Models.Event;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * Main screen, handles more fragments, events, groups\r\n */\r\n\r\npublic class EventActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    //UI\r\n    private ImageView create_event_img_btn;\r\n    private ImageView open_group_btn;\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    //events\r\n    private List<Event> lstEvent;\r\n\r\n    //drawer\r\n    private DrawerLayout drawer = null;\r\n    private NavigationView navigationView = null;\r\n\r\n    //\r\n    private SearchView sw;\r\n    private EventRecyclerViewAdapter myEventAdapter;\r\n\r\n    /**\r\n     * On create\r\n     */\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_event);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseEvents;\r\n        databaseEvents = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n        databaseEvents.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (DataSnapshot event : snapshot.getChildren()) {\r\n                    //Loop 1 to go through all child nodes of events\r\n                    String temp = event.child(\"event_name\").getValue().toString();\r\n\r\n                    Uri myUri = null;\r\n                    String UriStr = null;\r\n\r\n                    //if the event has a thumbnail, get Uri\r\n                    if (event.child(\"thumbnail\").getValue() != null) {\r\n                        UriStr = event.child(\"thumbnail\").getValue().toString();\r\n                        myUri = Uri.parse(UriStr);\r\n                    }\r\n\r\n                    //get no image Uri\r\n                    Uri testUri = Uri.parse(\"https://firebasestorage.googleapis.com/v0/b/pabs-fa777.appspot.com/o/Images%2FNo_image_3x4.svg.png?alt=media&token=1a73a7ae-0447-4827-87c9-9ed1bb463351\");\r\n\r\n                    //Create temporary Event\r\n                    Event tempEv;\r\n\r\n                    //if Event has no thumbnail\r\n                    if (UriStr == null) {\r\n                        //Give the event, the no image thumbnail\r\n                        tempEv = new Event();\r\n                        tempEv.setTitle(temp);\r\n                        tempEv.setThumbnail(testUri);\r\n                    }\r\n                    //if Event has thumbnail\r\n                    else {\r\n                        //Set thumbnail of event\r\n                        tempEv = new Event();\r\n                        tempEv.setTitle(temp);\r\n                        tempEv.setThumbnail(myUri);\r\n                    }\r\n\r\n                    //add events to array\r\n                    addToEventsArray(tempEv);\r\n                }\r\n\r\n                //Set and show events on main screen\r\n                setEvents();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        //nav view and drawer\r\n        navigationView = findViewById(R.id.a_e_nav_view);\r\n        drawer = findViewById(R.id.a_e_drawer_layout);\r\n\r\n        //handle navigation drawer open/close with toggle\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, null, R.string.navigation_drawer_open, R.string.navigation_drawer_close) {\r\n            /**\r\n             * Called when a drawer has settled in a completely closed state.\r\n             */\r\n            public void onDrawerClosed(View view) {\r\n                super.onDrawerClosed(view);\r\n                for (int i = 0; i < navigationView.getMenu().size(); ++i)\r\n                    navigationView.getMenu().getItem(i).setChecked(false);\r\n            }\r\n\r\n            /**\r\n             * Called when a drawer has settled in a completely open state.\r\n             */\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //add toggle to drawer\r\n        drawer.addDrawerListener(toggle);\r\n\r\n        //sync toggle\r\n        toggle.syncState();\r\n\r\n        // Write a string to database when this client loses connection\r\n        reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n\r\n        DatabaseReference connectedRef = FirebaseDatabase.getInstance().getReference(\".info/connected\");\r\n        connectedRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(DataSnapshot snapshot) {\r\n                boolean connected = snapshot.getValue(Boolean.class);\r\n                if (connected) {\r\n                    //user is connected\r\n                } else {\r\n                    //user disconnected\r\n                    reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n                    openLoginActivity();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(DatabaseError error) {\r\n                System.err.println(\"Listener was cancelled\");\r\n            }\r\n        });\r\n\r\n        //create event button\r\n        create_event_img_btn = findViewById(R.id.a_e_create_event_button);\r\n        create_event_img_btn.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent motionEvent) {\r\n                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n                    openCreateEventFragment();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n        //\r\n\r\n        //open group button\r\n        open_group_btn = findViewById(R.id.a_e_open_group_button);\r\n        open_group_btn.setOnTouchListener(new View.OnTouchListener() {\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent motionEvent) {\r\n                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {\r\n                    clearBackstack();\r\n                    openGroupActivity();\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        //\r\n        sw = findViewById(R.id.e_search_bar);\r\n        sw.setQueryHint(\"Search event name...\");\r\n\r\n        sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                myEventAdapter.filter(query);\r\n                hideKeyboard(EventActivity.this);\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                myEventAdapter.filter(newText);\r\n                return true;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public static void hideKeyboard(Activity activity) {\r\n        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n        //Find the currently focused view, so we can grab the correct window token from it.\r\n        View view = activity.getCurrentFocus();\r\n        //If no view currently has focus, create a new one, just so we can grab a window token from it\r\n        if (view == null) {\r\n            view = new View(activity);\r\n        }\r\n        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n    }\r\n\r\n    private void openLoginActivity(){\r\n        Intent intent = new Intent(this, LoginActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Add to events inside DataChanged method so we don't lose the results\r\n     */\r\n    public void addToEventsArray(Event tempEv){\r\n        lstEvent.add(tempEv);\r\n    }\r\n\r\n    /**\r\n     * Clear events inside DataChanged method\r\n     */\r\n    public void clearEvents(){\r\n        lstEvent.clear();\r\n    }\r\n\r\n    /**\r\n     * Set events inside DataChanged method\r\n     */\r\n    public void setEvents(){\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);\r\n        //create Adapter with lstEvent in this context\r\n        myEventAdapter = new EventRecyclerViewAdapter(this, lstEvent, getSupportFragmentManager(), uID);\r\n        //separate the Recyclerview to 3 columns\r\n        myRv.setLayoutManager(new GridLayoutManager(this, 3));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myEventAdapter);\r\n    }\r\n\r\n    /**\r\n     * Called on selecting item from navigation list\r\n     */\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.nav_events:\r\n                clearBackstack();\r\n                Toast.makeText(this, \"nav_events\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_calendar:\r\n                clearBackstack();\r\n                openCalendarFragment();\r\n                Toast.makeText(this, \"nav_calendar\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_groups:\r\n                clearBackstack();\r\n                openGroupActivity();\r\n                Toast.makeText(this, \"nav_groups\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_profile:\r\n                Toast.makeText(this, \"nav_profile\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_settings:\r\n                Toast.makeText(this, \"nav_settings\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_logout:\r\n                Toast.makeText(this, \"nav_logout\", Toast.LENGTH_SHORT).show();\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n                break;\r\n\r\n            default:\r\n                Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n\r\n        //close drawer on item clicked\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    private void clearBackstack(){\r\n        for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {\r\n            getSupportFragmentManager().popBackStack();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * open group activity\r\n     */\r\n    private void openGroupActivity(){\r\n        Intent intent = new Intent(this, GroupActivity.class);\r\n        intent.putExtra(\"USER\", uID);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open create event fragment\r\n     */\r\n    private void openCreateEventFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CreateEventFragment(uID))\r\n                .addToBackStack(\"CreateEventFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * open calendar event fragment\r\n     */\r\n    private void openCalendarFragment(){\r\n        getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace(R.id.fragment_event_container, new CalendarFragment())\r\n                .addToBackStack(\"CalendarFragment\")\r\n                .commit();\r\n    }\r\n\r\n    /**\r\n     * Called when the activity is exiting\r\n     */\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        lstEvent.clear();\r\n        reference.child(uID).child(\"online\").setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * Called when the activity started\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/EventActivity.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1608987886858)
-@@ -1,13 +1,5 @@
- package com.example.pabs;
- 
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.ActionBarDrawerToggle;
--import androidx.appcompat.app.AppCompatActivity;
--import androidx.core.view.GravityCompat;
--import androidx.drawerlayout.widget.DrawerLayout;
--import androidx.recyclerview.widget.GridLayoutManager;
--import androidx.recyclerview.widget.RecyclerView;
--
- import android.annotation.SuppressLint;
- import android.app.Activity;
- import android.content.Intent;
-@@ -21,6 +13,14 @@
- import android.widget.SearchView;
- import android.widget.Toast;
- 
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.ActionBarDrawerToggle;
-+import androidx.appcompat.app.AppCompatActivity;
-+import androidx.core.view.GravityCompat;
-+import androidx.drawerlayout.widget.DrawerLayout;
-+import androidx.recyclerview.widget.GridLayoutManager;
-+import androidx.recyclerview.widget.RecyclerView;
-+
- import com.example.pabs.Adapters.EventRecyclerViewAdapter;
- import com.example.pabs.Fragments.CalendarFragment;
- import com.example.pabs.Fragments.EventFragment.CreateEventFragment;
-@@ -61,6 +61,17 @@
-     private SearchView sw;
-     private EventRecyclerViewAdapter myEventAdapter;
- 
-+    public static void hideKeyboard(Activity activity) {
-+        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
-+        //Find the currently focused view, so we can grab the correct window token from it.
-+        View view = activity.getCurrentFocus();
-+        //If no view currently has focus, create a new one, just so we can grab a window token from it
-+        if (view == null) {
-+            view = new View(activity);
-+        }
-+        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
-+    }
-+
-     /**
-      * On create
-      */
-@@ -214,10 +225,18 @@
-             }
-         });
- 
--        //
-+        //search view
-         sw = findViewById(R.id.e_search_bar);
-         sw.setQueryHint("Search event name...");
- 
-+        sw.setOnCloseListener(new SearchView.OnCloseListener() {
-+            @Override
-+            public boolean onClose() {
-+                hideKeyboard(EventActivity.this);
-+                return false;
-+            }
-+        });
-+
-         sw.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
-             @Override
-             public boolean onQueryTextSubmit(String query) {
-@@ -235,18 +254,7 @@
- 
-     }
- 
--    public static void hideKeyboard(Activity activity) {
--        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
--        //Find the currently focused view, so we can grab the correct window token from it.
--        View view = activity.getCurrentFocus();
--        //If no view currently has focus, create a new one, just so we can grab a window token from it
--        if (view == null) {
--            view = new View(activity);
--        }
--        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
--    }
--
--    private void openLoginActivity(){
-+    private void openLoginActivity() {
-         Intent intent = new Intent(this, LoginActivity.class);
-         startActivity(intent);
-     }
-@@ -254,21 +262,21 @@
-     /**
-      * Add to events inside DataChanged method so we don't lose the results
-      */
--    public void addToEventsArray(Event tempEv){
-+    public void addToEventsArray(Event tempEv) {
-         lstEvent.add(tempEv);
-     }
- 
-     /**
-      * Clear events inside DataChanged method
-      */
--    public void clearEvents(){
-+    public void clearEvents() {
-         lstEvent.clear();
-     }
- 
-     /**
-      * Set events inside DataChanged method
-      */
--    public void setEvents(){
-+    public void setEvents() {
-         //create and set RecyclerView
-         RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);
-         //create Adapter with lstEvent in this context
-@@ -285,7 +293,7 @@
-     @SuppressLint("NonConstantResourceId")
-     @Override
-     public boolean onNavigationItemSelected(@NonNull MenuItem item) {
--        switch (item.getItemId()){
-+        switch (item.getItemId()) {
-             case R.id.nav_events:
-                 clearBackstack();
-                 Toast.makeText(this, "nav_events", Toast.LENGTH_SHORT).show();
-@@ -327,8 +335,8 @@
-         return true;
-     }
- 
--    private void clearBackstack(){
--        for(int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-+    private void clearBackstack() {
-+        for (int i = 0; i < getSupportFragmentManager().getBackStackEntryCount(); ++i) {
-             getSupportFragmentManager().popBackStack();
-         }
-     }
-@@ -336,16 +344,17 @@
-     /**
-      * open group activity
-      */
--    private void openGroupActivity(){
-+    private void openGroupActivity() {
-         Intent intent = new Intent(this, GroupActivity.class);
-         intent.putExtra("USER", uID);
-+        finish();
-         startActivity(intent);
-     }
- 
-     /**
-      * open create event fragment
-      */
--    private void openCreateEventFragment(){
-+    private void openCreateEventFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_event_container, new CreateEventFragment(uID))
-@@ -356,7 +365,7 @@
-     /**
-      * open calendar event fragment
-      */
--    private void openCalendarFragment(){
-+    private void openCalendarFragment() {
-         getSupportFragmentManager()
-                 .beginTransaction()
-                 .replace(R.id.fragment_event_container, new CalendarFragment())
-Index: app/src/main/java/com/example/pabs/RegisterActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\nimport com.example.pabs.Models.User;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport static com.example.pabs.R.layout.activity_register;\r\n\r\n/**\r\n * Handles Register for users\r\n */\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    private EditText name_et = null, password_et = null, email_et = null;\r\n    private Button register_btn = null, back_to_login = null;\r\n    private FirebaseAuth currAuth;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    DatabaseReference reference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(activity_register);\r\n\r\n            //edittext\r\n            name_et = findViewById(R.id.r_username);\r\n            password_et = findViewById(R.id.r_password);\r\n            email_et = findViewById(R.id.r_email);\r\n\r\n            //button\r\n            register_btn = findViewById(R.id.r_signup_button);\r\n\r\n            back_to_login = findViewById(R.id.r_existing_account);\r\n\r\n            //open login\r\n            back_to_login.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    finish();\r\n                }\r\n            });\r\n\r\n            //firebase database -> get reference to USER table\r\n            reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n            register_btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    //dialog on loading\r\n                    mDialog = new ProgressDialog(RegisterActivity.this);\r\n\r\n                    mDialog.setMessage(\"Please wait...\");\r\n                    mDialog.setCancelable(false);\r\n                    mDialog.show();\r\n\r\n                    register();\r\n                }\r\n            });\r\n    }\r\n\r\n    private void register(){\r\n\r\n        //getting user credentials\r\n        String name = name_et.getText().toString();\r\n        String email = email_et.getText().toString();\r\n        final String password = password_et.getText().toString();\r\n\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) && !TextUtils.isEmpty(name_et.getText().toString())) {\r\n\r\n            //creating a user type object\r\n            final User user = new User(\"\", email, \"\", name, \"false\");\r\n\r\n            //getting an instance of firebase authentication token\r\n            currAuth = FirebaseAuth.getInstance();\r\n            currAuth.createUserWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n\r\n                                FirebaseMessaging.getInstance().deleteToken();\r\n\r\n                                reference.child(currAuth.getUid()).setValue(user);\r\n                                FirebaseAuth.getInstance().signOut();\r\n                                mDialog.dismiss();\r\n                                Toast.makeText(RegisterActivity.this, \"Succesfully registered!\", Toast.LENGTH_SHORT).show();\r\n                                finish();\r\n                            }\r\n                            else\r\n                            {\r\n                                if (password.length() < 6) {\r\n                                    Toast.makeText(RegisterActivity.this, \"The given password is too short \\nIt needs to be at least 6 characters!\", Toast.LENGTH_SHORT).show();\r\n                                    mDialog.dismiss();\r\n                                }\r\n                                else\r\n                                {\r\n                                    Toast.makeText(RegisterActivity.this, \"The given E-mail may contain errors!\", Toast.LENGTH_SHORT).show();\r\n                                    mDialog.dismiss();\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n            {\r\n            Toast.makeText(RegisterActivity.this, \"Fields are empty!.\", Toast.LENGTH_SHORT).show();\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/RegisterActivity.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/RegisterActivity.java	(date 1608986751951)
-@@ -1,8 +1,5 @@
- package com.example.pabs;
- 
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.AppCompatActivity;
--
- import android.app.ProgressDialog;
- import android.os.Bundle;
- import android.text.TextUtils;
-@@ -10,6 +7,10 @@
- import android.widget.Button;
- import android.widget.EditText;
- import android.widget.Toast;
-+
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.AppCompatActivity;
-+
- import com.example.pabs.Models.User;
- import com.google.android.gms.tasks.OnCompleteListener;
- import com.google.android.gms.tasks.Task;
-@@ -27,57 +28,56 @@
- 
- public class RegisterActivity extends AppCompatActivity {
- 
-+    //firebase
-+    DatabaseReference reference;
-     //UI
-     private EditText name_et = null, password_et = null, email_et = null;
-     private Button register_btn = null, back_to_login = null;
-     private FirebaseAuth currAuth;
-     private ProgressDialog mDialog = null;
- 
--    //firebase
--    DatabaseReference reference;
--
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(activity_register);
- 
--            //edittext
--            name_et = findViewById(R.id.r_username);
--            password_et = findViewById(R.id.r_password);
--            email_et = findViewById(R.id.r_email);
-+        //edittext
-+        name_et = findViewById(R.id.r_username);
-+        password_et = findViewById(R.id.r_password);
-+        email_et = findViewById(R.id.r_email);
- 
--            //button
--            register_btn = findViewById(R.id.r_signup_button);
-+        //button
-+        register_btn = findViewById(R.id.r_signup_button);
- 
--            back_to_login = findViewById(R.id.r_existing_account);
-+        back_to_login = findViewById(R.id.r_existing_account);
- 
--            //open login
--            back_to_login.setOnClickListener(new View.OnClickListener() {
--                @Override
--                public void onClick(View view) {
--                    finish();
--                }
--            });
-+        //open login
-+        back_to_login.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                finish();
-+            }
-+        });
- 
--            //firebase database -> get reference to USER table
--            reference = FirebaseDatabase.getInstance().getReference().child("USER");
-+        //firebase database -> get reference to USER table
-+        reference = FirebaseDatabase.getInstance().getReference().child("USER");
- 
--            register_btn.setOnClickListener(new View.OnClickListener() {
--                @Override
--                public void onClick(View v) {
--                    //dialog on loading
--                    mDialog = new ProgressDialog(RegisterActivity.this);
-+        register_btn.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View v) {
-+                //dialog on loading
-+                mDialog = new ProgressDialog(RegisterActivity.this);
- 
--                    mDialog.setMessage("Please wait...");
--                    mDialog.setCancelable(false);
--                    mDialog.show();
-+                mDialog.setMessage("Please wait...");
-+                mDialog.setCancelable(false);
-+                mDialog.show();
- 
--                    register();
--                }
--            });
-+                register();
-+            }
-+        });
-     }
- 
--    private void register(){
-+    private void register() {
- 
-         //getting user credentials
-         String name = name_et.getText().toString();
-@@ -104,24 +104,18 @@
-                                 mDialog.dismiss();
-                                 Toast.makeText(RegisterActivity.this, "Succesfully registered!", Toast.LENGTH_SHORT).show();
-                                 finish();
--                            }
--                            else
--                            {
-+                            } else {
-                                 if (password.length() < 6) {
-                                     Toast.makeText(RegisterActivity.this, "The given password is too short \nIt needs to be at least 6 characters!", Toast.LENGTH_SHORT).show();
-                                     mDialog.dismiss();
--                                }
--                                else
--                                {
-+                                } else {
-                                     Toast.makeText(RegisterActivity.this, "The given E-mail may contain errors!", Toast.LENGTH_SHORT).show();
-                                     mDialog.dismiss();
-                                 }
-                             }
-                         }
-                     });
--        }
--        else
--            {
-+        } else {
-             Toast.makeText(RegisterActivity.this, "Fields are empty!.", Toast.LENGTH_SHORT).show();
-             mDialog.dismiss();
-         }
-Index: app/src/main/java/com/example/pabs/Fcm/MyFirebaseMessagingService.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fcm;\r\n\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.google.firebase.messaging.FirebaseMessagingService;\r\n\r\n/**\r\n * Handles push notifications\r\n */\r\npublic class MyFirebaseMessagingService extends FirebaseMessagingService {\r\n    @Override\r\n    public void onNewToken(@NonNull String s) {\r\n        super.onNewToken(s);\r\n        Log.d(\"MYTOKEN\", \"onNewToken: \"+s);\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fcm/MyFirebaseMessagingService.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fcm/MyFirebaseMessagingService.java	(date 1608986752342)
-@@ -13,6 +13,6 @@
-     @Override
-     public void onNewToken(@NonNull String s) {
-         super.onNewToken(s);
--        Log.d("MYTOKEN", "onNewToken: "+s);
-+        Log.d("MYTOKEN", "onNewToken: " + s);
-     }
- }
-Index: app/src/main/java/com/example/pabs/Adapters/EventStaffRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Fragments.EventFragment.EventFragment;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.Models.Event;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport android.os.Handler;\r\n\r\n/**\r\n * Creates an array of card elements\r\n */\r\n\r\npublic class EventStaffRecyclerViewAdapter extends RecyclerView.Adapter<EventStaffRecyclerViewAdapter.MyViewHolder>{\r\n\r\n    private Context mContext;\r\n    private List<String> mData;\r\n\r\n    /**\r\n     * Constructor of EventRecyclerViewAdapter\r\n     */\r\n    public EventStaffRecyclerViewAdapter(Context mContext, List<String> mData) {\r\n        this.mContext = mContext;\r\n        this.mData = mData;\r\n    }\r\n\r\n    /**\r\n     * OnCreateViewHolder - layout initializer\r\n     */\r\n    @NonNull\r\n    @Override\r\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        //Init view and set view of viewHolder\r\n        View view;\r\n        LayoutInflater mInflater = LayoutInflater.from(mContext);\r\n        view = mInflater.inflate(R.layout.cardview_event_staff, parent, false);\r\n        return new MyViewHolder(view);\r\n    }\r\n\r\n    /**\r\n     * Set data for every individual card\r\n     */\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final MyViewHolder holder, final int position) {\r\n        //set data\r\n        final DatabaseReference refUsers = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n        refUsers.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for (DataSnapshot user : snapshot.getChildren()) {\r\n                    if (user.getKey().toString().equals(mData.get(position).toString())) {\r\n                        holder.tv_name.setText(user.child(\"user_name\").getValue().toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        holder.cardView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Toast.makeText(mContext, mData.get(position), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns size of cards\r\n     */\r\n    @Override\r\n    public int getItemCount() {\r\n        return mData.size();\r\n    }\r\n\r\n    /**\r\n     * Creates card item\r\n     */\r\n    public static class MyViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        //UI\r\n        TextView tv_name;\r\n        CardView cardView;\r\n\r\n        /**\r\n         * Creates view for the item\r\n         */\r\n        public MyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            //get UI as objects\r\n            tv_name = (TextView) itemView.findViewById(R.id.c_e_s_tv);\r\n            cardView = (CardView) itemView.findViewById(R.id.card_event_staff);\r\n\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/EventStaffRecyclerViewAdapter.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Adapters/EventStaffRecyclerViewAdapter.java	(date 1608986751997)
-@@ -1,42 +1,32 @@
- package com.example.pabs.Adapters;
- 
- import android.content.Context;
--import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
--import android.widget.ImageView;
- import android.widget.TextView;
--import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
- import androidx.cardview.widget.CardView;
--import androidx.fragment.app.FragmentManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
--import com.example.pabs.Fragments.EventFragment.EventFragment;
--import com.example.pabs.Models.DatabaseEvent;
--import com.example.pabs.Models.Event;
- import com.example.pabs.R;
- import com.google.firebase.database.DataSnapshot;
- import com.google.firebase.database.DatabaseError;
- import com.google.firebase.database.DatabaseReference;
- import com.google.firebase.database.FirebaseDatabase;
- import com.google.firebase.database.ValueEventListener;
--import com.squareup.picasso.Picasso;
- 
--import java.util.ArrayList;
- import java.util.List;
--import android.os.Handler;
- 
- /**
-  * Creates an array of card elements
-  */
- 
--public class EventStaffRecyclerViewAdapter extends RecyclerView.Adapter<EventStaffRecyclerViewAdapter.MyViewHolder>{
-+public class EventStaffRecyclerViewAdapter extends RecyclerView.Adapter<EventStaffRecyclerViewAdapter.MyViewHolder> {
- 
--    private Context mContext;
--    private List<String> mData;
-+    private final Context mContext;
-+    private final List<String> mData;
- 
-     /**
-      * Constructor of EventRecyclerViewAdapter
-@@ -70,7 +60,7 @@
-             @Override
-             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                 for (DataSnapshot user : snapshot.getChildren()) {
--                    if (user.getKey().toString().equals(mData.get(position).toString())) {
-+                    if (user.getKey().equals(mData.get(position))) {
-                         holder.tv_name.setText(user.child("user_name").getValue().toString());
-                     }
-                 }
-@@ -101,7 +91,7 @@
-     /**
-      * Creates card item
-      */
--    public static class MyViewHolder extends RecyclerView.ViewHolder{
-+    public static class MyViewHolder extends RecyclerView.ViewHolder {
- 
-         //UI
-         TextView tv_name;
-Index: app/src/main/java/com/example/pabs/Models/User.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Models;\r\n\r\n/**\r\n * User from database\r\n */\r\n\r\npublic class User {\r\n    private String token;\r\n    private String e_mail;\r\n    private String nickname;\r\n    private String user_name;\r\n    private String online;\r\n\r\n    public User(){\r\n    }\r\n\r\n    public User(String token, String e_mail, String nickname, String user_name, String online) {\r\n        this.token = token;\r\n        this.e_mail = e_mail;\r\n        this.nickname = nickname;\r\n        this.user_name = user_name;\r\n        this.online = online;\r\n    }\r\n\r\n    public String getOnline() {\r\n        return online;\r\n    }\r\n\r\n    public void setOnline(String online) {\r\n        this.online = online;\r\n    }\r\n\r\n    public String getToken() {\r\n        return token;\r\n    }\r\n\r\n    public void setToken(String token) {\r\n        this.token = token;\r\n    }\r\n\r\n    public String getE_mail() {\r\n        return e_mail;\r\n    }\r\n\r\n    public void setE_mail(String e_mail) {\r\n        this.e_mail = e_mail;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public String getUser_name() {\r\n        return user_name;\r\n    }\r\n\r\n    public void setUser_name(String user_name) {\r\n        this.user_name = user_name;\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Models/User.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Models/User.java	(date 1608986752528)
-@@ -11,7 +11,7 @@
-     private String user_name;
-     private String online;
- 
--    public User(){
-+    public User() {
-     }
- 
-     public User(String token, String e_mail, String nickname, String user_name, String online) {
-Index: app/src/main/java/com/example/pabs/Models/Event.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Models;\r\n\r\nimport android.net.Uri;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * Event cards\r\n */\r\n\r\npublic class Event {\r\n    private String Title;\r\n    private Uri Thumbnail;\r\n\r\n    public Event(){}\r\n\r\n    public Event(String title, Uri thumbnail, String startDate, List<String> j_members) {\r\n        Title = title;\r\n        Thumbnail = thumbnail;\r\n    }\r\n\r\n    public String getTitle() {\r\n        return Title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        Title = title;\r\n    }\r\n\r\n    public Uri getThumbnail() {\r\n        return Thumbnail;\r\n    }\r\n\r\n    public void setThumbnail(Uri thumbnail) {\r\n        Thumbnail = thumbnail;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Models/Event.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Models/Event.java	(date 1608986751926)
-@@ -12,7 +12,8 @@
-     private String Title;
-     private Uri Thumbnail;
- 
--    public Event(){}
-+    public Event() {
-+    }
- 
-     public Event(String title, Uri thumbnail, String startDate, List<String> j_members) {
-         Title = title;
-Index: app/src/main/res/drawable/ic_baseline_send_24.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/drawable/ic_baseline_send_24.xml	(date 1608966185468)
-+++ app/src/main/res/drawable/ic_baseline_send_24.xml	(date 1608966185468)
-@@ -0,0 +1,11 @@
-+<vector xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:width="24dp"
-+    android:height="24dp"
-+    android:viewportWidth="24"
-+    android:viewportHeight="24"
-+    android:tint="?attr/colorControlNormal"
-+    android:autoMirrored="true">
-+  <path
-+      android:fillColor="@android:color/white"
-+      android:pathData="M2.01,21L23,12 2.01,3 2,10l15,2 -15,2z"/>
-+</vector>
-Index: app/src/main/java/com/example/pabs/Models/ChatMessage.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Models/ChatMessage.java	(date 1608986751938)
-+++ app/src/main/java/com/example/pabs/Models/ChatMessage.java	(date 1608986751938)
-@@ -0,0 +1,46 @@
-+package com.example.pabs.Models;
-+
-+import java.util.Date;
-+
-+public class ChatMessage {
-+
-+    private String messageText;
-+    private String messageUser;
-+    private long messageTime;
-+
-+    public ChatMessage(String messageText, String messageUser) {
-+        this.messageText = messageText;
-+        this.messageUser = messageUser;
-+
-+        // Initialize to current time
-+        messageTime = new Date().getTime();
-+    }
-+
-+    public ChatMessage() {
-+
-+    }
-+
-+    public String getMessageText() {
-+        return messageText;
-+    }
-+
-+    public void setMessageText(String messageText) {
-+        this.messageText = messageText;
-+    }
-+
-+    public String getMessageUser() {
-+        return messageUser;
-+    }
-+
-+    public void setMessageUser(String messageUser) {
-+        this.messageUser = messageUser;
-+    }
-+
-+    public long getMessageTime() {
-+        return messageTime;
-+    }
-+
-+    public void setMessageTime(long messageTime) {
-+        this.messageTime = messageTime;
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Adapters/EventRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Fragments.EventFragment.EventFragment;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.Models.Event;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport android.os.Handler;\r\n\r\nimport static android.view.View.GONE;\r\n\r\n/**\r\n * Creates an array of card elements\r\n */\r\n\r\npublic class EventRecyclerViewAdapter extends RecyclerView.Adapter<EventRecyclerViewAdapter.MyViewHolder>{\r\n\r\n    private Context mContext;\r\n    private List<Event> mData;\r\n    private List<Event> mDataCopy;\r\n    private FragmentManager mFragment;\r\n    private String mUID;\r\n\r\n    /**\r\n     * Constructor of EventRecyclerViewAdapter\r\n     */\r\n    public EventRecyclerViewAdapter(Context mContext, List<Event> mData, FragmentManager fragment, String uID) {\r\n        this.mContext = mContext;\r\n        this.mData = mData;\r\n        this.mFragment = fragment;\r\n        this.mUID = uID;\r\n\r\n        //list copy\r\n        mDataCopy = new ArrayList<>();\r\n        Collections.copy(mData, mDataCopy);\r\n        mDataCopy.addAll(mData);\r\n\r\n    }\r\n\r\n    public void filter(String text) {\r\n        mData.clear();\r\n        if(text.isEmpty()){\r\n            mData.addAll(mDataCopy);\r\n        } else{\r\n            text = text.toLowerCase();\r\n            for(Event item: mDataCopy){\r\n                if(item.getTitle().toLowerCase().contains(text)){\r\n                    mData.add(item);\r\n                }\r\n            }\r\n        }\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    /**\r\n     * OnCreateViewHolder - layout initializer\r\n     */\r\n    @NonNull\r\n    @Override\r\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        //Init view and set view of viewHolder\r\n        View view;\r\n        LayoutInflater mInflater = LayoutInflater.from(mContext);\r\n        view = mInflater.inflate(R.layout.cardview_event, parent, false);\r\n        return new MyViewHolder(view);\r\n    }\r\n\r\n    /**\r\n     * Set data for every individual card\r\n     */\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final MyViewHolder holder, final int position) {\r\n\r\n        //set data\r\n        holder.tv_title.setText(mData.get(position).getTitle());\r\n\r\n        Picasso.get().load(mData.get(position).getThumbnail()).resize(400,400).centerCrop().into(holder.img_thumbnail);\r\n\r\n        //set click listener\r\n        holder.cardView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Toast.makeText(mContext, mData.get(position).getTitle(), Toast.LENGTH_SHORT).show();\r\n\r\n                if(holder.tv_title.getVisibility() == View.VISIBLE){\r\n                    //Getting events from database and setting them to recyclerview\r\n                    DatabaseReference databaseEvents;\r\n                    databaseEvents = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n                    databaseEvents.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                            for (final DataSnapshot event : snapshot.getChildren()) {\r\n                                //Loop to go through all child nodes of event\r\n\r\n                                //temp for storing data from database\r\n                                final DatabaseEvent temp = new DatabaseEvent();\r\n                                //setting data to temp from database\r\n                                temp.setOwner_id(event.child(\"owner_id\").getValue().toString());\r\n                                if(event.child(\"description\").getValue() != null){\r\n                                    temp.setDescription(event.child(\"description\").getValue().toString());\r\n                                }\r\n                                if(event.child(\"reminder\").getValue() != null){\r\n                                    temp.setReminder(event.child(\"reminder\").getValue().toString());\r\n                                }\r\n                                if(event.child(\"repetition\").getValue() != null){\r\n                                    temp.setRepetition(event.child(\"repetition\").getValue().toString());\r\n                                }\r\n                                temp.setEvent_name(event.child(\"event_name\").getValue().toString());\r\n                                temp.setLocation_name(event.child(\"location_name\").getValue().toString());\r\n                                String tempx = event.child(\"location_x\").getValue().toString();\r\n                                temp.setLocation_x(Double.parseDouble(tempx));\r\n                                String tempy = event.child(\"location_y\").getValue().toString();\r\n                                temp.setLocation_y(Double.parseDouble(tempy));\r\n                                temp.setStart_date(event.child(\"start_date\").getValue().toString());\r\n                                temp.setEnd_date(event.child(\"end_date\").getValue().toString());\r\n                                temp.setPriv_pub(event.child(\"priv_pub\").getValue().toString());\r\n\r\n                                final List<String> staff_members =  new ArrayList<>();\r\n                                event.getRef().child(\"staff_members\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                                        for (DataSnapshot staff : snapshot.getChildren()) {\r\n                                            //Loop 1 to go through all child nodes of staff members\r\n                                            staff_members.add(staff.getValue().toString());\r\n                                        }\r\n\r\n                                        //add staff members to event\r\n                                        temp.setStaff_members(staff_members);\r\n\r\n                                        //if event has a thumbnail add it to temp\r\n                                        if(event.child(\"thumbnail\").getValue() != null){\r\n                                            temp.setThumbnail(event.child(\"thumbnail\").getValue().toString());\r\n                                        }\r\n\r\n\r\n                                        final List<String> joined_members =  new ArrayList<>();\r\n                                        event.getRef().child(\"joined_members\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                            @Override\r\n                                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                                                for (DataSnapshot staff : snapshot.getChildren()) {\r\n                                                    //Loop 1 to go through all child nodes of staff members\r\n                                                    joined_members.add(staff.getValue().toString());\r\n                                                }\r\n\r\n                                                //add staff members to event\r\n                                                temp.setJoined_members(joined_members);\r\n\r\n                                                //open Event which matches with the title from the Database Event\r\n                                                if(mData.get(position).getTitle().equals(temp.getEvent_name())){\r\n\r\n                                                    holder.tv_title.postDelayed(new Runnable() {\r\n                                                        public void run() {\r\n                                                            holder.tv_title.setVisibility(View.GONE);\r\n                                                        }\r\n                                                    }, 1000);\r\n\r\n                                                    mFragment\r\n                                                            .beginTransaction()\r\n                                                            .replace( R.id.fragment_event_container , new EventFragment(temp, mUID))\r\n                                                            .addToBackStack(\"EventFragment\")\r\n                                                            .commit();\r\n                                                }\r\n\r\n                                            }\r\n\r\n                                            @Override\r\n                                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                            }\r\n                                        });\r\n\r\n\r\n\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                    }\r\n                                });\r\n\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n                            //if database failed\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    holder.tv_title.setVisibility(View.VISIBLE);\r\n\r\n                    holder.tv_title.postDelayed(new Runnable() {\r\n                        public void run() {\r\n                            holder.tv_title.setVisibility(View.GONE);\r\n                        }\r\n                    }, 3000);\r\n                }\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns size of cards\r\n     */\r\n    @Override\r\n    public int getItemCount() {\r\n        return mData.size();\r\n    }\r\n\r\n    /**\r\n     * Creates card item\r\n     */\r\n    public static class MyViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        //UI\r\n        TextView tv_title;\r\n        ImageView img_thumbnail;\r\n        CardView cardView;\r\n\r\n        /**\r\n         * Creates view for the item\r\n         */\r\n        public MyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            //get UI as objects\r\n            tv_title = (TextView) itemView.findViewById(R.id.c_e_event_title);\r\n            img_thumbnail= (ImageView) itemView.findViewById(R.id.c_e_thumbnail);\r\n            cardView = (CardView) itemView.findViewById(R.id.card_event);\r\n\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/EventRecyclerViewAdapter.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Adapters/EventRecyclerViewAdapter.java	(date 1608986752130)
-@@ -1,13 +1,11 @@
- package com.example.pabs.Adapters;
- 
- import android.content.Context;
--import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
- import android.widget.ImageView;
- import android.widget.TextView;
--import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
- import androidx.cardview.widget.CardView;
-@@ -28,21 +26,18 @@
- import java.util.ArrayList;
- import java.util.Collections;
- import java.util.List;
--import android.os.Handler;
--
--import static android.view.View.GONE;
- 
- /**
-  * Creates an array of card elements
-  */
- 
--public class EventRecyclerViewAdapter extends RecyclerView.Adapter<EventRecyclerViewAdapter.MyViewHolder>{
-+public class EventRecyclerViewAdapter extends RecyclerView.Adapter<EventRecyclerViewAdapter.MyViewHolder> {
- 
--    private Context mContext;
--    private List<Event> mData;
--    private List<Event> mDataCopy;
--    private FragmentManager mFragment;
--    private String mUID;
-+    private final Context mContext;
-+    private final List<Event> mData;
-+    private final List<Event> mDataCopy;
-+    private final FragmentManager mFragment;
-+    private final String mUID;
- 
-     /**
-      * Constructor of EventRecyclerViewAdapter
-@@ -62,12 +57,12 @@
- 
-     public void filter(String text) {
-         mData.clear();
--        if(text.isEmpty()){
-+        if (text.isEmpty()) {
-             mData.addAll(mDataCopy);
--        } else{
-+        } else {
-             text = text.toLowerCase();
--            for(Event item: mDataCopy){
--                if(item.getTitle().toLowerCase().contains(text)){
-+            for (Event item : mDataCopy) {
-+                if (item.getTitle().toLowerCase().contains(text)) {
-                     mData.add(item);
-                 }
-             }
-@@ -97,7 +92,7 @@
-         //set data
-         holder.tv_title.setText(mData.get(position).getTitle());
- 
--        Picasso.get().load(mData.get(position).getThumbnail()).resize(400,400).centerCrop().into(holder.img_thumbnail);
-+        Picasso.get().load(mData.get(position).getThumbnail()).resize(400, 400).centerCrop().into(holder.img_thumbnail);
- 
-         //set click listener
-         holder.cardView.setOnClickListener(new View.OnClickListener() {
-@@ -105,7 +100,7 @@
-             public void onClick(View view) {
-                 //Toast.makeText(mContext, mData.get(position).getTitle(), Toast.LENGTH_SHORT).show();
- 
--                if(holder.tv_title.getVisibility() == View.VISIBLE){
-+                if (holder.tv_title.getVisibility() == View.VISIBLE) {
-                     //Getting events from database and setting them to recyclerview
-                     DatabaseReference databaseEvents;
-                     databaseEvents = FirebaseDatabase.getInstance().getReference().child("EVENT");
-@@ -120,13 +115,13 @@
-                                 final DatabaseEvent temp = new DatabaseEvent();
-                                 //setting data to temp from database
-                                 temp.setOwner_id(event.child("owner_id").getValue().toString());
--                                if(event.child("description").getValue() != null){
-+                                if (event.child("description").getValue() != null) {
-                                     temp.setDescription(event.child("description").getValue().toString());
-                                 }
--                                if(event.child("reminder").getValue() != null){
-+                                if (event.child("reminder").getValue() != null) {
-                                     temp.setReminder(event.child("reminder").getValue().toString());
-                                 }
--                                if(event.child("repetition").getValue() != null){
-+                                if (event.child("repetition").getValue() != null) {
-                                     temp.setRepetition(event.child("repetition").getValue().toString());
-                                 }
-                                 temp.setEvent_name(event.child("event_name").getValue().toString());
-@@ -139,7 +134,7 @@
-                                 temp.setEnd_date(event.child("end_date").getValue().toString());
-                                 temp.setPriv_pub(event.child("priv_pub").getValue().toString());
- 
--                                final List<String> staff_members =  new ArrayList<>();
-+                                final List<String> staff_members = new ArrayList<>();
-                                 event.getRef().child("staff_members").addListenerForSingleValueEvent(new ValueEventListener() {
-                                     @Override
-                                     public void onDataChange(@NonNull DataSnapshot snapshot) {
-@@ -153,12 +148,12 @@
-                                         temp.setStaff_members(staff_members);
- 
-                                         //if event has a thumbnail add it to temp
--                                        if(event.child("thumbnail").getValue() != null){
-+                                        if (event.child("thumbnail").getValue() != null) {
-                                             temp.setThumbnail(event.child("thumbnail").getValue().toString());
-                                         }
- 
- 
--                                        final List<String> joined_members =  new ArrayList<>();
-+                                        final List<String> joined_members = new ArrayList<>();
-                                         event.getRef().child("joined_members").addListenerForSingleValueEvent(new ValueEventListener() {
-                                             @Override
-                                             public void onDataChange(@NonNull DataSnapshot snapshot) {
-@@ -172,7 +167,7 @@
-                                                 temp.setJoined_members(joined_members);
- 
-                                                 //open Event which matches with the title from the Database Event
--                                                if(mData.get(position).getTitle().equals(temp.getEvent_name())){
-+                                                if (mData.get(position).getTitle().equals(temp.getEvent_name())) {
- 
-                                                     holder.tv_title.postDelayed(new Runnable() {
-                                                         public void run() {
-@@ -182,7 +177,7 @@
- 
-                                                     mFragment
-                                                             .beginTransaction()
--                                                            .replace( R.id.fragment_event_container , new EventFragment(temp, mUID))
-+                                                            .replace(R.id.fragment_event_container, new EventFragment(temp, mUID))
-                                                             .addToBackStack("EventFragment")
-                                                             .commit();
-                                                 }
-@@ -196,7 +191,6 @@
-                                         });
- 
- 
--
-                                     }
- 
-                                     @Override
-@@ -214,8 +208,7 @@
-                             //if database failed
-                         }
-                     });
--                }
--                else{
-+                } else {
-                     holder.tv_title.setVisibility(View.VISIBLE);
- 
-                     holder.tv_title.postDelayed(new Runnable() {
-@@ -226,7 +219,6 @@
-                 }
- 
- 
--
-             }
-         });
- 
-@@ -243,7 +235,7 @@
-     /**
-      * Creates card item
-      */
--    public static class MyViewHolder extends RecyclerView.ViewHolder{
-+    public static class MyViewHolder extends RecyclerView.ViewHolder {
- 
-         //UI
-         TextView tv_title;
-@@ -258,7 +250,7 @@
- 
-             //get UI as objects
-             tv_title = (TextView) itemView.findViewById(R.id.c_e_event_title);
--            img_thumbnail= (ImageView) itemView.findViewById(R.id.c_e_thumbnail);
-+            img_thumbnail = (ImageView) itemView.findViewById(R.id.c_e_thumbnail);
-             cardView = (CardView) itemView.findViewById(R.id.card_event);
- 
-         }
-Index: app/src/main/java/com/example/pabs/Fragments/GroupFragment/GroupOptionsDialogFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/GroupFragment/GroupOptionsDialogFragment.java	(date 1608986752063)
-+++ app/src/main/java/com/example/pabs/Fragments/GroupFragment/GroupOptionsDialogFragment.java	(date 1608986752063)
-@@ -0,0 +1,171 @@
-+package com.example.pabs.Fragments.GroupFragment;
-+
-+import android.app.Dialog;
-+import android.graphics.Color;
-+import android.graphics.drawable.ColorDrawable;
-+import android.os.Bundle;
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.widget.ImageView;
-+import android.widget.LinearLayout;
-+
-+import androidx.appcompat.app.AppCompatDialogFragment;
-+
-+import com.example.pabs.R;
-+
-+import static android.view.View.GONE;
-+
-+public class GroupOptionsDialogFragment extends AppCompatDialogFragment {
-+    //edittext
-+    private GroupOptionsDialogFragment.GroupOptionsDialogListener groupOptionsDialogListener;
-+    //dialog
-+    private Dialog dialog;
-+    //ImageView
-+    private ImageView closeGroupImg;
-+    private ImageView addKickMembersImg;
-+    private ImageView groupEventsImg;
-+    private ImageView leaveGroupImg;
-+    private ImageView showCodeImg;
-+
-+    private ImageView exitImg;
-+
-+    private LinearLayout closeGroupLinL;
-+    private LinearLayout addKickMembersLinL;
-+    private LinearLayout groupEventsLinL;
-+    private LinearLayout leaveGroupLinL;
-+    private LinearLayout showCodeLinL;
-+
-+    private int mState;
-+
-+    public void setListener(GroupOptionsDialogFragment.GroupOptionsDialogListener groupOptionsDialogListener, int state) {
-+        this.groupOptionsDialogListener = groupOptionsDialogListener;
-+        this.mState = state;
-+    }
-+
-+    /**
-+     * When the dialog is created
-+     */
-+    @Override
-+    public Dialog onCreateDialog(Bundle savedInstanceState) {
-+        //setting view
-+        LayoutInflater inflater = getActivity().getLayoutInflater();
-+        View view = inflater.inflate(R.layout.fragment_dialog_group_options, null);
-+
-+        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);
-+
-+        closeGroupImg = view.findViewById(R.id.f_g_o_closeGroupImg);
-+        addKickMembersImg = view.findViewById(R.id.f_g_o_addKickMembersImg);
-+        groupEventsImg = view.findViewById(R.id.f_g_o_groupEventsImg);
-+        leaveGroupImg = view.findViewById(R.id.f_g_o_leaveGroupImg);
-+        showCodeImg = view.findViewById(R.id.f_g_o_showCodeImg);
-+
-+        exitImg = view.findViewById(R.id.f_g_o_exitImg);
-+
-+        showCodeLinL = view.findViewById(R.id.f_g_o_lr5);
-+        closeGroupLinL = view.findViewById(R.id.f_g_o_lr4);
-+        addKickMembersLinL = view.findViewById(R.id.f_g_o_lr3);
-+        groupEventsLinL = view.findViewById(R.id.f_g_o_lr2);
-+        leaveGroupLinL = view.findViewById(R.id.f_g_o_lr1);
-+
-+        closeGroupImg.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                groupOptionsDialogListener.CloseGroup();
-+                dialog.dismiss();
-+            }
-+        });
-+
-+        addKickMembersImg.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                groupOptionsDialogListener.AddKickMembers();
-+                dialog.dismiss();
-+            }
-+        });
-+
-+        groupEventsImg.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                groupOptionsDialogListener.GroupEvents();
-+                dialog.dismiss();
-+            }
-+        });
-+
-+        leaveGroupLinL.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                groupOptionsDialogListener.LeaveGroup();
-+                dialog.dismiss();
-+            }
-+        });
-+
-+        showCodeLinL.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                groupOptionsDialogListener.ShowCode();
-+                dialog.dismiss();
-+            }
-+        });
-+
-+
-+        dialog.setContentView(view);
-+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
-+
-+        exitImg.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                dialog.dismiss();
-+            }
-+        });
-+
-+        if (mState == 0) {
-+            //owner
-+            hideLeaveGroup();
-+        } else if (mState == 1) {
-+            //member
-+            hideCloseGroupImage();
-+            hideAddKickMembers();
-+
-+        } else {
-+            Log.d("GODF", "Wrong mState!");
-+        }
-+
-+        return dialog;
-+    }
-+
-+    void hideCloseGroupImage() {
-+        closeGroupLinL.setVisibility(GONE);
-+    }
-+
-+    void hideAddKickMembers() {
-+        addKickMembersLinL.setVisibility(GONE);
-+    }
-+
-+    void hideGroupEvents() {
-+        groupEventsLinL.setVisibility(GONE);
-+    }
-+
-+    void hideLeaveGroup() {
-+        leaveGroupLinL.setVisibility(GONE);
-+    }
-+
-+    void hideShowCode() {
-+        showCodeLinL.setVisibility(GONE);
-+    }
-+
-+    /**
-+     * interface to launch option elements
-+     */
-+    public interface GroupOptionsDialogListener {
-+        void CloseGroup();
-+
-+        void AddKickMembers();
-+
-+        void GroupEvents();
-+
-+        void LeaveGroup();
-+
-+        void ShowCode();
-+    }
-+}
-Index: app/src/main/java/com/example/pabs/Fragments/CalendarFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Adapters.CalendarRecyclerViewAdapter;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.Models.Event;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.text.DateFormatSymbols;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.StringTokenizer;\r\n\r\nimport sun.bob.mcalendarview.MarkStyle;\r\nimport sun.bob.mcalendarview.listeners.OnDateClickListener;\r\nimport sun.bob.mcalendarview.listeners.OnMonthChangeListener;\r\nimport sun.bob.mcalendarview.vo.DateData;\r\n\r\npublic class CalendarFragment extends Fragment {\r\n\r\n    //calendar\r\n    sun.bob.mcalendarview.views.ExpCalendarView customCalendar;\r\n\r\n    //TextViews\r\n    TextView curr_month, currDate;\r\n\r\n    Context mContext;\r\n    //List<DatabaseEvent> lstDatabaseEvent;\r\n    //events\r\n    List<DatabaseEvent> lstEvent;\r\n    private View listView;\r\n    //firebase\r\n    private String uID;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        //get uid of logged in user\r\n        uID = getActivity().getIntent().getStringExtra(\"USER\");\r\n\r\n        // Inflate the layout for this fragment\r\n        View calendarView = inflater.inflate(R.layout.fragment_calendar, container, false);\r\n\r\n        listView = getActivity().findViewById(R.id.activity_event_layout);\r\n        final RecyclerView rvCalendarfragment = (RecyclerView) calendarView.findViewById(R.id.calendar_rec_view);\r\n\r\n        //setting the current date in CalendarView\r\n        setCurrDateInCalendarFragment(calendarView);\r\n\r\n        //getting the custom calendar view object\r\n        customCalendar = calendarView.findViewById(R.id.calendar_calendar);\r\n\r\n        //setting the current month and year in CalendarView\r\n        curr_month = calendarView.findViewById(R.id.calendar_curr_month);\r\n        int cmonth = Calendar.getInstance().get(Calendar.MONTH)+1;\r\n        int cyear = Calendar.getInstance().get(Calendar.YEAR);\r\n        setCurrMonthandYear(curr_month, cmonth, cyear);\r\n\r\n        customCalendar.setOnMonthChangeListener(new OnMonthChangeListener() {\r\n            @Override\r\n            public void onMonthChange(int year, int month) {\r\n                setCurrMonthandYear(curr_month, month, year);\r\n            }\r\n        });\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        //Getting events from database and setting them to recyclerview\r\n        DatabaseReference databaseEvents;\r\n        databaseEvents = FirebaseDatabase.getInstance().getReference().child(\"EVENT\");\r\n\r\n        //databaseEvents.addValueEventListener(new ValueEventListener() {\r\n        databaseEvents.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                clearEvents();\r\n                for (final DataSnapshot event : snapshot.getChildren()) {\r\n                    final DatabaseEvent tempEv = new DatabaseEvent();\r\n\r\n                    //Loop 1 to go through all child nodes of events\r\n\r\n\r\n                    final List<String> joined_users =  new ArrayList<>();\r\n                    event.getRef().child(\"joined_members\").addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                            for (DataSnapshot users : snapshot.getChildren()) {\r\n                                //Loop 1 to go through all child nodes of joined members\r\n                                joined_users.add(users.getValue().toString());\r\n                            }\r\n\r\n\r\n                            final Handler handler = new Handler();\r\n                            final int delay = 1000; //milliseconds\r\n\r\n                            handler.postDelayed(new Runnable(){\r\n                            public void run(){\r\n                                if(!joined_users.isEmpty())//checking if the data is loaded or not\r\n                                {\r\n\r\n                                String e_name = event.child(\"event_name\").getValue().toString();\r\n                                tempEv.setEvent_name(e_name);\r\n                                String event_startdate = event.child(\"start_date\").getValue().toString();\r\n                                tempEv.setStart_date(event_startdate);\r\n\r\n                                tempEv.setJoined_members(joined_users);\r\n\r\n\r\n                                //pushing the temporary event object into an arraylist\r\n                                    lstEvent.add(tempEv);\r\n\r\n                                    for(DatabaseEvent i : lstEvent){\r\n                                        for(String j: i.getJoined_members()){\r\n                                            if(uID.equals(j)){\r\n                                                //marking the Dates on which we have Events\r\n                                                DateData temp = convertDate(i.getStart_date());\r\n                                                customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR, Color.BLUE));\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        if(uID.equals(i.getOwner_id())){\r\n                                            DateData temp = convertDate(i.getStart_date());\r\n                                            customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR,Color.CYAN));\r\n                                        }\r\n                                    }\r\n\r\n                                    final List<DatabaseEvent> onDateEvents = new ArrayList<>();\r\n                                    customCalendar.setOnDateClickListener(new OnDateClickListener() {\r\n                                        @Override\r\n                                        public void onDateClick(View view, DateData clickedDate) {\r\n                                            Log.d(\"DateClicked\", \"onDateClick: \" + clickedDate);\r\n                                            for(DatabaseEvent i : lstEvent){\r\n                                                if(convertDate(i.getStart_date()).equals(clickedDate)){\r\n                                                    onDateEvents.add(i);\r\n                                                }\r\n                                            }\r\n                                            CalendarRecyclerViewAdapter adapter = new CalendarRecyclerViewAdapter(onDateEvents);\r\n                                            rvCalendarfragment.setAdapter(adapter);\r\n                                            rvCalendarfragment.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else\r\n                                    handler.postDelayed(this, delay);\r\n                            }\r\n                            }, delay);\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        return calendarView;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        listView.setVisibility(View.GONE);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        listView.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void setCurrDateInCalendarFragment(View calendarView){\r\n        Date d = Calendar.getInstance().getTime();\r\n        SimpleDateFormat df = new SimpleDateFormat(\"dd/MM/yyyy\", Locale.getDefault());\r\n        String curr_date = df.format(d);\r\n        currDate = calendarView.findViewById(R.id.calendar_curr_date);\r\n        currDate.setText(curr_date);\r\n    }\r\n\r\n    private void setCurrMonthandYear(TextView curr_month, int month, int year){\r\n        curr_month.setText(getMonth(month) + \" \" + year);\r\n    }\r\n\r\n    private DateData convertDate(String date){\r\n        StringTokenizer token = new StringTokenizer(date,\"/\");\r\n        int nap=0,honap=0,ev=0;\r\n        int cnt = 0;\r\n        while(token.hasMoreTokens()){\r\n            if(cnt == 0) {\r\n                nap = Integer.parseInt(token.nextToken());\r\n                cnt++;\r\n            }\r\n            else if(cnt == 1){\r\n                honap = Integer.parseInt(token.nextToken());\r\n                cnt++;\r\n            }\r\n            else if(cnt == 2){\r\n                ev = Integer.parseInt(token.nextToken());\r\n                cnt++;\r\n            }\r\n        }\r\n        DateData dateData = new DateData(ev,honap,nap);\r\n        return dateData;\r\n    }\r\n\r\n    public String getMonth(int month) {\r\n        return new DateFormatSymbols().getMonths()[month-1];\r\n    }\r\n\r\n    public void clearEvents(){\r\n        lstEvent.clear();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/CalendarFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/CalendarFragment.java	(date 1608986752562)
-@@ -17,7 +17,6 @@
- 
- import com.example.pabs.Adapters.CalendarRecyclerViewAdapter;
- import com.example.pabs.Models.DatabaseEvent;
--import com.example.pabs.Models.Event;
- import com.example.pabs.R;
- import com.google.firebase.database.DataSnapshot;
- import com.google.firebase.database.DatabaseError;
-@@ -81,7 +80,7 @@
- 
-         //setting the current month and year in CalendarView
-         curr_month = calendarView.findViewById(R.id.calendar_curr_month);
--        int cmonth = Calendar.getInstance().get(Calendar.MONTH)+1;
-+        int cmonth = Calendar.getInstance().get(Calendar.MONTH) + 1;
-         int cyear = Calendar.getInstance().get(Calendar.YEAR);
-         setCurrMonthandYear(curr_month, cmonth, cyear);
- 
-@@ -110,7 +109,7 @@
-                     //Loop 1 to go through all child nodes of events
- 
- 
--                    final List<String> joined_users =  new ArrayList<>();
-+                    final List<String> joined_users = new ArrayList<>();
-                     event.getRef().child("joined_members").addValueEventListener(new ValueEventListener() {
-                         @Override
-                         public void onDataChange(@NonNull DataSnapshot snapshot) {
-@@ -124,56 +123,55 @@
-                             final Handler handler = new Handler();
-                             final int delay = 1000; //milliseconds
- 
--                            handler.postDelayed(new Runnable(){
--                            public void run(){
--                                if(!joined_users.isEmpty())//checking if the data is loaded or not
--                                {
-+                            handler.postDelayed(new Runnable() {
-+                                public void run() {
-+                                    if (!joined_users.isEmpty())//checking if the data is loaded or not
-+                                    {
- 
--                                String e_name = event.child("event_name").getValue().toString();
--                                tempEv.setEvent_name(e_name);
--                                String event_startdate = event.child("start_date").getValue().toString();
--                                tempEv.setStart_date(event_startdate);
-+                                        String e_name = event.child("event_name").getValue().toString();
-+                                        tempEv.setEvent_name(e_name);
-+                                        String event_startdate = event.child("start_date").getValue().toString();
-+                                        tempEv.setStart_date(event_startdate);
- 
--                                tempEv.setJoined_members(joined_users);
-+                                        tempEv.setJoined_members(joined_users);
- 
- 
--                                //pushing the temporary event object into an arraylist
--                                    lstEvent.add(tempEv);
-+                                        //pushing the temporary event object into an arraylist
-+                                        lstEvent.add(tempEv);
- 
--                                    for(DatabaseEvent i : lstEvent){
--                                        for(String j: i.getJoined_members()){
--                                            if(uID.equals(j)){
--                                                //marking the Dates on which we have Events
--                                                DateData temp = convertDate(i.getStart_date());
--                                                customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR, Color.BLUE));
--                                                break;
--                                            }
--                                        }
--                                        if(uID.equals(i.getOwner_id())){
--                                            DateData temp = convertDate(i.getStart_date());
--                                            customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR,Color.CYAN));
--                                        }
--                                    }
-+                                        for (DatabaseEvent i : lstEvent) {
-+                                            for (String j : i.getJoined_members()) {
-+                                                if (uID.equals(j)) {
-+                                                    //marking the Dates on which we have Events
-+                                                    DateData temp = convertDate(i.getStart_date());
-+                                                    customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR, Color.BLUE));
-+                                                    break;
-+                                                }
-+                                            }
-+                                            if (uID.equals(i.getOwner_id())) {
-+                                                DateData temp = convertDate(i.getStart_date());
-+                                                customCalendar.markDate(temp.setMarkStyle(MarkStyle.LEFTSIDEBAR, Color.CYAN));
-+                                            }
-+                                        }
- 
--                                    final List<DatabaseEvent> onDateEvents = new ArrayList<>();
--                                    customCalendar.setOnDateClickListener(new OnDateClickListener() {
--                                        @Override
--                                        public void onDateClick(View view, DateData clickedDate) {
--                                            Log.d("DateClicked", "onDateClick: " + clickedDate);
--                                            for(DatabaseEvent i : lstEvent){
--                                                if(convertDate(i.getStart_date()).equals(clickedDate)){
--                                                    onDateEvents.add(i);
--                                                }
--                                            }
--                                            CalendarRecyclerViewAdapter adapter = new CalendarRecyclerViewAdapter(onDateEvents);
--                                            rvCalendarfragment.setAdapter(adapter);
--                                            rvCalendarfragment.setLayoutManager(new LinearLayoutManager(getActivity()));
--                                        }
--                                    });
--                                }
--                                else
--                                    handler.postDelayed(this, delay);
--                            }
-+                                        final List<DatabaseEvent> onDateEvents = new ArrayList<>();
-+                                        customCalendar.setOnDateClickListener(new OnDateClickListener() {
-+                                            @Override
-+                                            public void onDateClick(View view, DateData clickedDate) {
-+                                                Log.d("DateClicked", "onDateClick: " + clickedDate);
-+                                                for (DatabaseEvent i : lstEvent) {
-+                                                    if (convertDate(i.getStart_date()).equals(clickedDate)) {
-+                                                        onDateEvents.add(i);
-+                                                    }
-+                                                }
-+                                                CalendarRecyclerViewAdapter adapter = new CalendarRecyclerViewAdapter(onDateEvents);
-+                                                rvCalendarfragment.setAdapter(adapter);
-+                                                rvCalendarfragment.setLayoutManager(new LinearLayoutManager(getActivity()));
-+                                            }
-+                                        });
-+                                    } else
-+                                        handler.postDelayed(this, delay);
-+                                }
-                             }, delay);
- 
-                         }
-@@ -209,7 +207,7 @@
-         listView.setVisibility(View.VISIBLE);
-     }
- 
--    private void setCurrDateInCalendarFragment(View calendarView){
-+    private void setCurrDateInCalendarFragment(View calendarView) {
-         Date d = Calendar.getInstance().getTime();
-         SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy", Locale.getDefault());
-         String curr_date = df.format(d);
-@@ -217,37 +215,35 @@
-         currDate.setText(curr_date);
-     }
- 
--    private void setCurrMonthandYear(TextView curr_month, int month, int year){
-+    private void setCurrMonthandYear(TextView curr_month, int month, int year) {
-         curr_month.setText(getMonth(month) + " " + year);
-     }
- 
--    private DateData convertDate(String date){
--        StringTokenizer token = new StringTokenizer(date,"/");
--        int nap=0,honap=0,ev=0;
-+    private DateData convertDate(String date) {
-+        StringTokenizer token = new StringTokenizer(date, "/");
-+        int nap = 0, honap = 0, ev = 0;
-         int cnt = 0;
--        while(token.hasMoreTokens()){
--            if(cnt == 0) {
-+        while (token.hasMoreTokens()) {
-+            if (cnt == 0) {
-                 nap = Integer.parseInt(token.nextToken());
-                 cnt++;
--            }
--            else if(cnt == 1){
-+            } else if (cnt == 1) {
-                 honap = Integer.parseInt(token.nextToken());
-                 cnt++;
--            }
--            else if(cnt == 2){
-+            } else if (cnt == 2) {
-                 ev = Integer.parseInt(token.nextToken());
-                 cnt++;
-             }
-         }
--        DateData dateData = new DateData(ev,honap,nap);
-+        DateData dateData = new DateData(ev, honap, nap);
-         return dateData;
-     }
- 
-     public String getMonth(int month) {
--        return new DateFormatSymbols().getMonths()[month-1];
-+        return new DateFormatSymbols().getMonths()[month - 1];
-     }
- 
--    public void clearEvents(){
-+    public void clearEvents() {
-         lstEvent.clear();
-     }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatDialogFragment;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.text.TextUtils;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.R;\r\n\r\n/**\r\n * Sets Nickname for new Users\r\n */\r\n\r\npublic class NicknameDialogFragment extends AppCompatDialogFragment {\r\n\r\n    //edittext\r\n    private EditText nickname_et = null;\r\n    private NicknameDialogListener nicknameDialogListener;\r\n    //\r\n    private Dialog dialog;\r\n    //\r\n    private Button continue_bt;\r\n\r\n    /**\r\n     * When the dialog is created\r\n     */\r\n    @Override\r\n    public Dialog onCreateDialog(Bundle savedInstanceState){\r\n        //setting view\r\n        LayoutInflater inflater = getActivity().getLayoutInflater();\r\n        View view = inflater.inflate(R.layout.fragment_dialog_nickname, null);\r\n\r\n        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);\r\n\r\n        nickname_et = view.findViewById(R.id.d_n_nickname);\r\n\r\n        continue_bt = (Button) view.findViewById(R.id.d_n_continue);\r\n\r\n        continue_bt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (!TextUtils.isEmpty(nickname_et.getText().toString())) {\r\n                    String nickname = nickname_et.getText().toString();\r\n                    //calling interface to set the nickname\r\n                    nicknameDialogListener.applyNickname(nickname);\r\n                    dialog.dismiss();\r\n                }\r\n                else{\r\n                    Toast.makeText(getActivity(), \"Please type in you nickname!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        dialog.setContentView(view);\r\n\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n\r\n        return dialog;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when the NicknameDialogListener is implemented in another class\r\n     */\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n\r\n        try {\r\n            nicknameDialogListener = (NicknameDialogListener) context;\r\n        } catch (ClassCastException e) {\r\n            throw new ClassCastException(context.toString() +\r\n                \"Must implement NicknameDialogListener\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * interface to set the nickname\r\n     */\r\n    public interface NicknameDialogListener{\r\n        void applyNickname(String nickname);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java	(date 1608986752012)
-@@ -1,25 +1,20 @@
- package com.example.pabs.Fragments;
- 
--import android.app.AlertDialog;
- import android.app.Dialog;
- import android.content.Context;
--import android.content.DialogInterface;
- import android.graphics.Color;
- import android.graphics.drawable.ColorDrawable;
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.appcompat.app.AppCompatDialogFragment;
--import androidx.fragment.app.Fragment;
--
- import android.text.TextUtils;
- import android.view.LayoutInflater;
- import android.view.View;
--import android.view.ViewGroup;
- import android.widget.Button;
- import android.widget.EditText;
- import android.widget.Toast;
- 
-+import androidx.annotation.NonNull;
-+import androidx.appcompat.app.AppCompatDialogFragment;
-+
- import com.example.pabs.R;
- 
- /**
-@@ -40,7 +35,7 @@
-      * When the dialog is created
-      */
-     @Override
--    public Dialog onCreateDialog(Bundle savedInstanceState){
-+    public Dialog onCreateDialog(Bundle savedInstanceState) {
-         //setting view
-         LayoutInflater inflater = getActivity().getLayoutInflater();
-         View view = inflater.inflate(R.layout.fragment_dialog_nickname, null);
-@@ -59,8 +54,7 @@
-                     //calling interface to set the nickname
-                     nicknameDialogListener.applyNickname(nickname);
-                     dialog.dismiss();
--                }
--                else{
-+                } else {
-                     Toast.makeText(getActivity(), "Please type in you nickname!", Toast.LENGTH_SHORT).show();
-                 }
-             }
-@@ -74,7 +68,6 @@
-     }
- 
- 
--
-     /**
-      * when the NicknameDialogListener is implemented in another class
-      */
-@@ -86,14 +79,14 @@
-             nicknameDialogListener = (NicknameDialogListener) context;
-         } catch (ClassCastException e) {
-             throw new ClassCastException(context.toString() +
--                "Must implement NicknameDialogListener");
-+                    "Must implement NicknameDialogListener");
-         }
-     }
- 
-     /**
-      * interface to set the nickname
-      */
--    public interface NicknameDialogListener{
-+    public interface NicknameDialogListener {
-         void applyNickname(String nickname);
-     }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Fragments/PasswordRecoveryFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.LoginActivity;\r\nimport com.example.pabs.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\npublic class PasswordRecoveryFragment extends Fragment {\r\n\r\n    private Button PR_donebtn;\r\n    private EditText PR_email;\r\n    private FirebaseAuth auth;\r\n    private View listView;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View PasswordRecoveryView = inflater.inflate(R.layout.fragment_password_recovery, container, false);\r\n        listView = getActivity().findViewById(R.id.ActivityLoginLayout);\r\n\r\n        //importing the objects from the layout\r\n        PR_donebtn = PasswordRecoveryView.findViewById(R.id.PR_done_btn);\r\n        PR_email = PasswordRecoveryView.findViewById(R.id.PR_email);\r\n\r\n        //Setting a clicklistener for the button\r\n        PR_donebtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //reading the text from the EditText\r\n                if(!TextUtils.isEmpty(PR_email.getText().toString())){\r\n                String Emailaddress = PR_email.getText().toString();\r\n                Log.d(\"Email:\",Emailaddress);\r\n                    //Sending the email with firebase auth\r\n                    auth = FirebaseAuth.getInstance();\r\n                    auth.sendPasswordResetEmail(Emailaddress).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n                            if(task.isSuccessful()){\r\n                                Toast.makeText(getActivity(), \"E-mail sent!\", Toast.LENGTH_SHORT);\r\n                                getActivity().getSupportFragmentManager().popBackStack(\"PasswordRecoveryFragment\", 1);\r\n                            }\r\n                            else{\r\n                                Toast.makeText(getActivity(), \"An Eroor occured!\", Toast.LENGTH_SHORT);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                else{\r\n                    Toast.makeText(getActivity(), \"You forgot to give an e-mail\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        return PasswordRecoveryView;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        listView.setVisibility(View.GONE);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        listView.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/PasswordRecoveryFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/PasswordRecoveryFragment.java	(date 1608986752148)
-@@ -1,10 +1,6 @@
- package com.example.pabs.Fragments;
- 
- import android.os.Bundle;
--
--import androidx.annotation.NonNull;
--import androidx.fragment.app.Fragment;
--
- import android.text.TextUtils;
- import android.util.Log;
- import android.view.LayoutInflater;
-@@ -12,15 +8,15 @@
- import android.view.ViewGroup;
- import android.widget.Button;
- import android.widget.EditText;
--import android.widget.RelativeLayout;
- import android.widget.Toast;
- 
--import com.example.pabs.LoginActivity;
-+import androidx.annotation.NonNull;
-+import androidx.fragment.app.Fragment;
-+
- import com.example.pabs.R;
- import com.google.android.gms.tasks.OnCompleteListener;
- import com.google.android.gms.tasks.Task;
- import com.google.firebase.auth.FirebaseAuth;
--import com.google.firebase.auth.FirebaseUser;
- 
- public class PasswordRecoveryFragment extends Fragment {
- 
-@@ -51,25 +47,23 @@
-             @Override
-             public void onClick(View v) {
-                 //reading the text from the EditText
--                if(!TextUtils.isEmpty(PR_email.getText().toString())){
--                String Emailaddress = PR_email.getText().toString();
--                Log.d("Email:",Emailaddress);
-+                if (!TextUtils.isEmpty(PR_email.getText().toString())) {
-+                    String Emailaddress = PR_email.getText().toString();
-+                    Log.d("Email:", Emailaddress);
-                     //Sending the email with firebase auth
-                     auth = FirebaseAuth.getInstance();
-                     auth.sendPasswordResetEmail(Emailaddress).addOnCompleteListener(new OnCompleteListener<Void>() {
-                         @Override
-                         public void onComplete(@NonNull Task<Void> task) {
--                            if(task.isSuccessful()){
-+                            if (task.isSuccessful()) {
-                                 Toast.makeText(getActivity(), "E-mail sent!", Toast.LENGTH_SHORT);
-                                 getActivity().getSupportFragmentManager().popBackStack("PasswordRecoveryFragment", 1);
--                            }
--                            else{
-+                            } else {
-                                 Toast.makeText(getActivity(), "An Eroor occured!", Toast.LENGTH_SHORT);
-                             }
-                         }
-                     });
--                }
--                else{
-+                } else {
-                     Toast.makeText(getActivity(), "You forgot to give an e-mail", Toast.LENGTH_SHORT).show();
-                 }
-             }
-Index: app/src/main/res/layout/fragment_dialog_group_options.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_dialog_group_options.xml	(date 1608984640797)
-+++ app/src/main/res/layout/fragment_dialog_group_options.xml	(date 1608984640797)
-@@ -0,0 +1,190 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<!--Container for nickname fragment-->
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    android:background="@color/half_transparent"
-+    android:animateLayoutChanges="true"
-+    android:visibility="visible"
-+    tools:context=".Fragments.GroupFragment.GroupOptionsDialogFragment"
-+    >
-+
-+    <RelativeLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent"
-+        android:padding="16dp">
-+
-+        <!--Container 0-->
-+        <RelativeLayout
-+            android:id="@+id/f_g_o_lr0"
-+            android:layout_alignParentRight="true"
-+            android:layout_alignParentBottom="true"
-+            android:layout_height="wrap_content"
-+            android:layout_width="wrap_content"
-+            android:paddingRight="30dp"
-+            android:paddingBottom="100dp">
-+
-+        </RelativeLayout>
-+
-+        <!--Container 1-->
-+        <LinearLayout
-+            android:id="@+id/f_g_o_lr1"
-+            android:layout_above="@id/f_g_o_lr0"
-+            android:layout_alignParentRight="true"
-+            android:layout_height="wrap_content"
-+            android:layout_width="wrap_content"
-+            android:paddingRight="30dp">
-+
-+            <TextView
-+                android:id="@+id/f_g_o_lr1_tv"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_gravity="center"
-+                android:textSize="20sp"
-+                android:fontFamily="@font/roboto_black_italic"
-+                android:paddingRight="10dp"
-+                android:text="Leave group"
-+                android:textColor="#720BC2" />
-+
-+            <ImageView
-+                android:id="@+id/f_g_o_leaveGroupImg"
-+                android:layout_width="50dp"
-+                android:layout_height="50dp"
-+                android:background="@drawable/joinleaveevent"
-+                />
-+        </LinearLayout>
-+
-+        <!--Container 2-->
-+        <LinearLayout
-+            android:id="@+id/f_g_o_lr2"
-+            android:layout_above="@id/f_g_o_lr1"
-+            android:layout_alignParentRight="true"
-+            android:layout_height="wrap_content"
-+            android:layout_width="wrap_content"
-+            android:paddingRight="30dp"
-+            android:paddingBottom="10dp">
-+
-+            <TextView
-+                android:id="@+id/f_g_o_lr2_tv"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_gravity="center"
-+                android:textSize="20sp"
-+                android:fontFamily="@font/roboto_black_italic"
-+                android:paddingRight="10dp"
-+                android:text="Group events"
-+                android:textColor="#720BC2" />
-+
-+            <ImageView
-+                android:id="@+id/f_g_o_groupEventsImg"
-+                android:layout_width="50dp"
-+                android:layout_height="50dp"
-+                android:background="@drawable/joinleaveevent"
-+                />
-+        </LinearLayout>
-+
-+        <!--Container 3-->
-+        <LinearLayout
-+            android:id="@+id/f_g_o_lr3"
-+            android:layout_above="@id/f_g_o_lr2"
-+            android:layout_alignParentRight="true"
-+            android:layout_height="wrap_content"
-+            android:layout_width="wrap_content"
-+            android:paddingRight="30dp"
-+            android:paddingBottom="10dp">
-+
-+            <TextView
-+                android:id="@+id/f_g_o_lr3_tv"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_gravity="center"
-+                android:textSize="20sp"
-+                android:fontFamily="@font/roboto_black_italic"
-+                android:paddingRight="10dp"
-+                android:text="Add/kick members"
-+                android:textColor="#720BC2" />
-+
-+            <ImageView
-+                android:id="@+id/f_g_o_addKickMembersImg"
-+                android:layout_width="50dp"
-+                android:layout_height="50dp"
-+                android:background="@drawable/joinleaveevent"
-+                />
-+        </LinearLayout>
-+
-+        <!--Container 4-->
-+        <LinearLayout
-+            android:id="@+id/f_g_o_lr4"
-+            android:layout_above="@id/f_g_o_lr3"
-+            android:layout_alignParentRight="true"
-+            android:layout_height="wrap_content"
-+            android:layout_width="wrap_content"
-+            android:paddingRight="30dp"
-+            android:paddingBottom="10dp">
-+
-+            <TextView
-+                android:id="@+id/f_g_o_lr4_tv"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_gravity="center"
-+                android:textSize="20sp"
-+                android:fontFamily="@font/roboto_black_italic"
-+                android:paddingRight="10dp"
-+                android:text="Close group"
-+                android:textColor="#720BC2" />
-+
-+            <ImageView
-+                android:id="@+id/f_g_o_closeGroupImg"
-+                android:layout_width="50dp"
-+                android:layout_height="50dp"
-+                android:background="@drawable/joinleaveevent"
-+                />
-+        </LinearLayout>
-+
-+        <!--Container 5-->
-+        <LinearLayout
-+            android:id="@+id/f_g_o_lr5"
-+            android:layout_above="@id/f_g_o_lr4"
-+            android:layout_alignParentRight="true"
-+            android:layout_height="wrap_content"
-+            android:layout_width="wrap_content"
-+            android:paddingRight="30dp"
-+            android:paddingBottom="10dp">
-+
-+            <TextView
-+                android:id="@+id/f_g_o_lr5_tv"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_gravity="center"
-+                android:textSize="20sp"
-+                android:fontFamily="@font/roboto_black_italic"
-+                android:paddingRight="10dp"
-+                android:text="Show Code"
-+                android:textColor="#720BC2" />
-+
-+            <ImageView
-+                android:id="@+id/f_g_o_showCodeImg"
-+                android:layout_width="50dp"
-+                android:layout_height="50dp"
-+                android:background="@drawable/joinleaveevent"
-+                />
-+        </LinearLayout>
-+
-+        <RelativeLayout
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content">
-+
-+            <ImageView
-+                android:id="@+id/f_g_o_exitImg"
-+                android:layout_width="50dp"
-+                android:layout_height="50dp"
-+                android:src="@drawable/x"
-+                />
-+
-+        </RelativeLayout>
-+
-+    </RelativeLayout>
-+
-+</RelativeLayout>
-\ No newline at end of file
-Index: app/src/main/res/layout/message.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/message.xml	(date 1608968005399)
-+++ app/src/main/res/layout/message.xml	(date 1608968005399)
-@@ -0,0 +1,32 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:layout_width="match_parent" android:layout_height="match_parent">
-+
-+    <TextView
-+        android:id="@+id/message_user"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:layout_alignParentTop="true"
-+        android:layout_alignParentStart="true"
-+        android:textStyle="normal|bold"
-+        android:layout_alignParentLeft="true" />
-+
-+    <TextView
-+        android:id="@+id/message_time"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:layout_alignBottom="@+id/message_user"
-+        android:layout_alignParentEnd="true"
-+        android:layout_alignParentRight="true" />
-+
-+    <TextView
-+        android:id="@+id/message_text"
-+        android:layout_width="wrap_content"
-+        android:layout_height="wrap_content"
-+        android:layout_below="@+id/message_user"
-+        android:layout_alignParentStart="true"
-+        android:layout_marginTop="5dp"
-+        android:textAppearance="@style/TextAppearance.AppCompat.Body1"
-+        android:textSize="18sp"
-+        android:layout_alignParentLeft="true" />
-+</RelativeLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Adapters/CalendarRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Fragments.EventFragment.EventFragment;\r\nimport com.example.pabs.Models.DatabaseEvent;\r\nimport com.example.pabs.Models.Event;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * Creates an array of card elements\r\n */\r\n\r\npublic class CalendarRecyclerViewAdapter extends RecyclerView.Adapter<CalendarRecyclerViewAdapter.ViewHolder>{\r\n\r\n    // Provide a direct reference to each of the views within a data item\r\n    // Used to cache the views within the item layout for fast access\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        // Your holder should contain a member variable\r\n        // for any view that will be set as you render a row\r\n        public TextView event_name;\r\n        public ImageView event_picture;\r\n\r\n        // We also create a constructor that accepts the entire item row\r\n        // and does the view lookups to find each subview\r\n        public ViewHolder(View itemView) {\r\n            // Stores the itemView in a public final member variable that can be used\r\n            // to access the context from any ViewHolder instance.\r\n            super(itemView);\r\n\r\n            event_name = (TextView) itemView.findViewById(R.id.eventName);\r\n            event_picture = (ImageView) itemView.findViewById(R.id.icon_list_row_calendarfragment);\r\n        }\r\n    }\r\n\r\n    //Store a member variable for the events\r\n    private List<DatabaseEvent> member_Events;\r\n\r\n    //Pass-in the contact array into the constructor\r\n    public CalendarRecyclerViewAdapter(List<DatabaseEvent> events){\r\n        member_Events = events;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        Context context = parent.getContext();\r\n        LayoutInflater inflater = LayoutInflater.from(context);\r\n\r\n        //inflate custom layout\r\n        View calendar_listview = inflater.inflate(R.layout.calendarfragment_list_row,parent,false);\r\n        //Return a new holder instance\r\n        ViewHolder viewHolder = new ViewHolder(calendar_listview);\r\n        return viewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n        //Get the data model based on position\r\n        DatabaseEvent ev = member_Events.get(position);\r\n\r\n        //set item views based on views and data model\r\n        TextView textView = holder.event_name;\r\n        textView.setText(ev.getEvent_name());\r\n        ImageView imgView = holder.event_picture;\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return member_Events.size();\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/CalendarRecyclerViewAdapter.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Adapters/CalendarRecyclerViewAdapter.java	(date 1608986751980)
-@@ -1,64 +1,31 @@
- package com.example.pabs.Adapters;
- 
- import android.content.Context;
--import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
- import android.widget.ImageView;
- import android.widget.TextView;
--import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
--import androidx.cardview.widget.CardView;
--import androidx.fragment.app.FragmentManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
--import com.example.pabs.Fragments.EventFragment.EventFragment;
- import com.example.pabs.Models.DatabaseEvent;
--import com.example.pabs.Models.Event;
- import com.example.pabs.R;
--import com.google.firebase.database.DataSnapshot;
--import com.google.firebase.database.DatabaseError;
--import com.google.firebase.database.DatabaseReference;
--import com.google.firebase.database.FirebaseDatabase;
--import com.google.firebase.database.ValueEventListener;
--import com.squareup.picasso.Picasso;
- 
--import java.util.ArrayList;
- import java.util.List;
- 
- /**
-  * Creates an array of card elements
-  */
- 
--public class CalendarRecyclerViewAdapter extends RecyclerView.Adapter<CalendarRecyclerViewAdapter.ViewHolder>{
-+public class CalendarRecyclerViewAdapter extends RecyclerView.Adapter<CalendarRecyclerViewAdapter.ViewHolder> {
- 
--    // Provide a direct reference to each of the views within a data item
--    // Used to cache the views within the item layout for fast access
--    public class ViewHolder extends RecyclerView.ViewHolder {
--        // Your holder should contain a member variable
--        // for any view that will be set as you render a row
--        public TextView event_name;
--        public ImageView event_picture;
--
--        // We also create a constructor that accepts the entire item row
--        // and does the view lookups to find each subview
--        public ViewHolder(View itemView) {
--            // Stores the itemView in a public final member variable that can be used
--            // to access the context from any ViewHolder instance.
--            super(itemView);
--
--            event_name = (TextView) itemView.findViewById(R.id.eventName);
--            event_picture = (ImageView) itemView.findViewById(R.id.icon_list_row_calendarfragment);
--        }
--    }
--
-     //Store a member variable for the events
--    private List<DatabaseEvent> member_Events;
-+    private final List<DatabaseEvent> member_Events;
- 
-     //Pass-in the contact array into the constructor
--    public CalendarRecyclerViewAdapter(List<DatabaseEvent> events){
-+    public CalendarRecyclerViewAdapter(List<DatabaseEvent> events) {
-         member_Events = events;
-     }
- 
-@@ -69,7 +36,7 @@
-         LayoutInflater inflater = LayoutInflater.from(context);
- 
-         //inflate custom layout
--        View calendar_listview = inflater.inflate(R.layout.calendarfragment_list_row,parent,false);
-+        View calendar_listview = inflater.inflate(R.layout.calendarfragment_list_row, parent, false);
-         //Return a new holder instance
-         ViewHolder viewHolder = new ViewHolder(calendar_listview);
-         return viewHolder;
-@@ -90,4 +57,24 @@
-     public int getItemCount() {
-         return member_Events.size();
-     }
-+
-+    // Provide a direct reference to each of the views within a data item
-+    // Used to cache the views within the item layout for fast access
-+    public class ViewHolder extends RecyclerView.ViewHolder {
-+        // Your holder should contain a member variable
-+        // for any view that will be set as you render a row
-+        public TextView event_name;
-+        public ImageView event_picture;
-+
-+        // We also create a constructor that accepts the entire item row
-+        // and does the view lookups to find each subview
-+        public ViewHolder(View itemView) {
-+            // Stores the itemView in a public final member variable that can be used
-+            // to access the context from any ViewHolder instance.
-+            super(itemView);
-+
-+            event_name = (TextView) itemView.findViewById(R.id.eventName);
-+            event_picture = (ImageView) itemView.findViewById(R.id.icon_list_row_calendarfragment);
-+        }
-+    }
- }
-Index: app/src/main/java/com/example/pabs/Fragments/GroupFragment/CreateGroupFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.GroupFragment;\r\n\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.pabs.Models.Group;\r\nimport com.example.pabs.R;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.security.SecureRandom;\r\n\r\npublic class CreateGroupFragment extends Fragment {\r\n\r\n    private static final String TAG = \"CreateGroupFragment\";\r\n\r\n    //UI\r\n    private View containerView;\r\n    private Button back_button;\r\n    private Button next_button;\r\n    private EditText name_et;\r\n    private FrameLayout FragmentGroupContainer;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n\r\n    private String mUID;\r\n\r\n    //\r\n    static final String AB = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n    static SecureRandom rnd = new SecureRandom();\r\n\r\n    public CreateGroupFragment(String uID){\r\n        mUID = uID;\r\n    }\r\n\r\n    /**\r\n     * on fragment created\r\n     */\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    /**\r\n     * on view created\r\n     */\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View CreateEventView = inflater.inflate(R.layout.fragment_create_group, container, false);\r\n        containerView = getActivity().findViewById(R.id.activity_group_layout);\r\n        //\r\n        FragmentGroupContainer = getActivity().findViewById(R.id.fragment_group_container);\r\n\r\n        //back button\r\n        back_button = CreateEventView.findViewById(R.id.c_g_back_button);\r\n\r\n\r\n        back_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                getActivity().getSupportFragmentManager().popBackStack(\"CreateGroupFragment\", 1);\r\n            }\r\n        });\r\n\r\n        //group name\r\n        name_et = CreateEventView.findViewById(R.id.c_g_group_name_edit);\r\n\r\n        //firebase database -> get reference to GROUP table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"GROUP\");\r\n\r\n        //next button\r\n        next_button = CreateEventView.findViewById(R.id.c_g_next_button);\r\n        next_button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //check for empty fields\r\n                if (!TextUtils.isEmpty(name_et.getText().toString())) {\r\n                    //new Database created from field contents written in by user\r\n                    Group group = new Group();\r\n                    group.setGroup_name(name_et.getText().toString());\r\n                    group.setGroup_owner(mUID);\r\n                    group.setInvite_code(randomString(8));\r\n\r\n                    //pushing databaseEvent to database\r\n                    reference.push().setValue(group);\r\n\r\n                    //open event\r\n                    openGroup(group, mUID);\r\n                }\r\n                else{\r\n                    Toast.makeText(getActivity(), \"Fields are empty!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n        //return view\r\n        return CreateEventView;\r\n    }\r\n\r\n\r\n    String randomString(int len){\r\n        StringBuilder sb = new StringBuilder(len);\r\n        for(int i = 0; i < len; i++)\r\n            sb.append(AB.charAt(rnd.nextInt(AB.length())));\r\n        return sb.toString();\r\n    }\r\n\r\n    /**\r\n     * open EventFragment with Data of created event\r\n     */\r\n    public void openGroup(Group group, String mUID){\r\n        getActivity().getSupportFragmentManager()\r\n                .beginTransaction()\r\n                .replace( R.id.fragment_group_container , new GroupFragment(group, mUID))\r\n                .addToBackStack(\"GroupFragment\")\r\n                .commit();\r\n    }\r\n\r\n\r\n    /**\r\n     * on fragment start\r\n     */\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        //Hiding the activity layout\r\n        containerView.setVisibility(View.GONE);\r\n    }\r\n\r\n    /**\r\n     * on fragment stop\r\n     */\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        containerView.setVisibility(View.VISIBLE);\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/GroupFragment/CreateGroupFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/GroupFragment/CreateGroupFragment.java	(date 1608986752099)
-@@ -21,25 +21,21 @@
- 
- public class CreateGroupFragment extends Fragment {
- 
-+    //
-+    static final String AB = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
-     private static final String TAG = "CreateGroupFragment";
--
-+    static SecureRandom rnd = new SecureRandom();
-     //UI
-     private View containerView;
-     private Button back_button;
-     private Button next_button;
-     private EditText name_et;
-     private FrameLayout FragmentGroupContainer;
--
-     //firebase
-     private DatabaseReference reference = null;
--
--    private String mUID;
--
--    //
--    static final String AB = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
--    static SecureRandom rnd = new SecureRandom();
-+    private final String mUID;
- 
--    public CreateGroupFragment(String uID){
-+    public CreateGroupFragment(String uID) {
-         mUID = uID;
-     }
- 
-@@ -93,14 +89,14 @@
-                     group.setGroup_name(name_et.getText().toString());
-                     group.setGroup_owner(mUID);
-                     group.setInvite_code(randomString(8));
-+                    group.setGroup_id(reference.push().getKey());
- 
-                     //pushing databaseEvent to database
--                    reference.push().setValue(group);
-+                    reference.child(group.getGroup_id()).setValue(group);
- 
-                     //open event
-                     openGroup(group, mUID);
--                }
--                else{
-+                } else {
-                     Toast.makeText(getActivity(), "Fields are empty!", Toast.LENGTH_SHORT).show();
-                 }
- 
-@@ -113,9 +109,9 @@
-     }
- 
- 
--    String randomString(int len){
-+    String randomString(int len) {
-         StringBuilder sb = new StringBuilder(len);
--        for(int i = 0; i < len; i++)
-+        for (int i = 0; i < len; i++)
-             sb.append(AB.charAt(rnd.nextInt(AB.length())));
-         return sb.toString();
-     }
-@@ -123,10 +119,10 @@
-     /**
-      * open EventFragment with Data of created event
-      */
--    public void openGroup(Group group, String mUID){
-+    public void openGroup(Group group, String mUID) {
-         getActivity().getSupportFragmentManager()
-                 .beginTransaction()
--                .replace( R.id.fragment_group_container , new GroupFragment(group, mUID))
-+                .replace(R.id.fragment_group_container, new GroupFragment(group, mUID))
-                 .addToBackStack("GroupFragment")
-                 .commit();
-     }
-Index: app/src/main/java/com/example/pabs/Fragments/GroupFragment/ShowCodeDialogFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/GroupFragment/ShowCodeDialogFragment.java	(date 1608986752267)
-+++ app/src/main/java/com/example/pabs/Fragments/GroupFragment/ShowCodeDialogFragment.java	(date 1608986752267)
-@@ -0,0 +1,76 @@
-+package com.example.pabs.Fragments.GroupFragment;
-+
-+import android.app.Dialog;
-+import android.content.ClipData;
-+import android.content.ClipboardManager;
-+import android.content.Context;
-+import android.graphics.Color;
-+import android.graphics.drawable.ColorDrawable;
-+import android.os.Bundle;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.widget.Button;
-+import android.widget.TextView;
-+import android.widget.Toast;
-+
-+import androidx.appcompat.app.AppCompatDialogFragment;
-+
-+import com.example.pabs.R;
-+
-+public class ShowCodeDialogFragment extends AppCompatDialogFragment {
-+    //edittext
-+    private TextView code_tv;
-+    //
-+    private Dialog dialog;
-+    //
-+    private Button cancel_bt;
-+    private final String codeText;
-+
-+    ShowCodeDialogFragment(String codeText) {
-+        this.codeText = codeText;
-+    }
-+
-+    /**
-+     * When the dialog is created
-+     */
-+    @Override
-+    public Dialog onCreateDialog(Bundle savedInstanceState) {
-+        //setting view
-+        LayoutInflater inflater = getActivity().getLayoutInflater();
-+        View view = inflater.inflate(R.layout.fragment_dialog_show_code, null);
-+
-+        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);
-+
-+        code_tv = view.findViewById(R.id.d_s_c_code);
-+
-+        code_tv.setText(codeText);
-+
-+        code_tv.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
-+                ClipData clip = ClipData.newPlainText("code text", codeText);
-+                clipboard.setPrimaryClip(clip);
-+                Toast.makeText(getActivity(), "Code copied to clipboard!", Toast.LENGTH_SHORT).show();
-+            }
-+        });
-+
-+        cancel_bt = (Button) view.findViewById(R.id.d_s_c_close);
-+
-+        cancel_bt.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                dialog.dismiss();
-+            }
-+        });
-+
-+        setCancelable(false);
-+
-+        dialog.setContentView(view);
-+
-+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
-+
-+        return dialog;
-+    }
-+
-+}
-Index: app/src/main/res/layout/fragment_dialog_show_code.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_dialog_show_code.xml	(date 1608986455651)
-+++ app/src/main/res/layout/fragment_dialog_show_code.xml	(date 1608986455651)
-@@ -0,0 +1,53 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<!--Container for nickname fragment-->
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    android:animateLayoutChanges="true"
-+    android:visibility="visible"
-+    tools:context=".Fragments.GroupFragment.ShowCodeDialogFragment"
-+    android:padding="16dp">
-+
-+    <!--Container for textView and button-->
-+    <RelativeLayout
-+        android:layout_centerInParent="true"
-+        android:background="@drawable/rect"
-+        android:backgroundTint="@color/chinese_silver"
-+        android:layout_height="125dp"
-+        android:layout_width="match_parent">
-+
-+        <!--Code text view-->
-+        <TextView
-+            android:id="@+id/d_s_c_code"
-+            android:layout_width="300dp"
-+            android:layout_height="50dp"
-+            android:layout_centerInParent="true"
-+            android:layout_alignParentTop="true"
-+            android:layout_marginTop="5dp"
-+            android:background="@drawable/login_button"
-+            android:maxLines="1"
-+            android:text="Code"
-+            android:textSize="16sp"
-+            android:textColor="@color/black"
-+            android:padding="15dp"
-+            android:gravity="center_horizontal"
-+            android:clickable="true"/>
-+
-+        <!--Close button-->
-+        <Button
-+            android:id="@+id/d_s_c_close"
-+            android:layout_width="100dp"
-+            android:layout_height="35dp"
-+            android:layout_below="@id/d_s_c_code"
-+            android:layout_centerInParent="true"
-+            android:layout_marginTop="25dp"
-+            android:background="@drawable/login_button"
-+            android:clickable="true"
-+            android:text="Close" />
-+
-+    </RelativeLayout>
-+
-+
-+</RelativeLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Fragments/GroupFragment/CodeDialogFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Fragments.GroupFragment;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatDialogFragment;\r\n\r\nimport com.example.pabs.R;\r\n\r\npublic class CodeDialogFragment  extends AppCompatDialogFragment {\r\n\r\n    //edittext\r\n    private EditText code_et;\r\n    private CodeDialogFragment.CodeDialogListener codeDialogListener;\r\n    //\r\n    private Dialog dialog;\r\n    //\r\n    private Button join_bt;\r\n    private Button cancel_bt;\r\n    /**\r\n     * When the dialog is created\r\n     */\r\n    @Override\r\n    public Dialog onCreateDialog(Bundle savedInstanceState){\r\n        //setting view\r\n        LayoutInflater inflater = getActivity().getLayoutInflater();\r\n        View view = inflater.inflate(R.layout.fragment_dialog_code, null);\r\n\r\n        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);\r\n\r\n        code_et = view.findViewById(R.id.d_c_code);\r\n\r\n        join_bt = (Button) view.findViewById(R.id.d_c_join);\r\n\r\n        join_bt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (!TextUtils.isEmpty(code_et.getText().toString())) {\r\n                    String code = code_et.getText().toString();\r\n                    //calling interface to set the nickname\r\n                    codeDialogListener.applyCode(code);\r\n                    dialog.dismiss();\r\n                }\r\n                else{\r\n                    Toast.makeText(getActivity(), \"Please type in the invite code!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n\r\n        //setCancelButtonListener((Button) Objects.requireNonNull(view.findViewById(R.id.button_cancel)), dialog);\r\n\r\n        cancel_bt = (Button) view.findViewById(R.id.d_c_cancel);\r\n\r\n        cancel_bt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        setCancelable(false);\r\n\r\n        dialog.setContentView(view);\r\n\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n\r\n        return dialog;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when the CodeDialogListener is implemented in another class\r\n     */\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n\r\n        try {\r\n            codeDialogListener = (CodeDialogFragment.CodeDialogListener) context;\r\n        } catch (ClassCastException e) {\r\n            throw new ClassCastException(context.toString() +\r\n                    \"Must implement CodeDialogListener\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * interface to set the nickname\r\n     */\r\n    public interface CodeDialogListener{\r\n        void applyCode(String code);\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/GroupFragment/CodeDialogFragment.java	(revision e15a5f7d83d48e6414d908e6350088a5d46d0c46)
-+++ app/src/main/java/com/example/pabs/Fragments/GroupFragment/CodeDialogFragment.java	(date 1608986752244)
-@@ -17,7 +17,7 @@
- 
- import com.example.pabs.R;
- 
--public class CodeDialogFragment  extends AppCompatDialogFragment {
-+public class CodeDialogFragment extends AppCompatDialogFragment {
- 
-     //edittext
-     private EditText code_et;
-@@ -27,11 +27,12 @@
-     //
-     private Button join_bt;
-     private Button cancel_bt;
-+
-     /**
-      * When the dialog is created
-      */
-     @Override
--    public Dialog onCreateDialog(Bundle savedInstanceState){
-+    public Dialog onCreateDialog(Bundle savedInstanceState) {
-         //setting view
-         LayoutInflater inflater = getActivity().getLayoutInflater();
-         View view = inflater.inflate(R.layout.fragment_dialog_code, null);
-@@ -50,15 +51,12 @@
-                     //calling interface to set the nickname
-                     codeDialogListener.applyCode(code);
-                     dialog.dismiss();
--                }
--                else{
-+                } else {
-                     Toast.makeText(getActivity(), "Please type in the invite code!", Toast.LENGTH_SHORT).show();
-                 }
-             }
-         });
- 
--        //setCancelButtonListener((Button) Objects.requireNonNull(view.findViewById(R.id.button_cancel)), dialog);
--
-         cancel_bt = (Button) view.findViewById(R.id.d_c_cancel);
- 
-         cancel_bt.setOnClickListener(new View.OnClickListener() {
-@@ -78,7 +76,6 @@
-     }
- 
- 
--
-     /**
-      * when the CodeDialogListener is implemented in another class
-      */
-@@ -97,7 +94,7 @@
-     /**
-      * interface to set the nickname
-      */
--    public interface CodeDialogListener{
-+    public interface CodeDialogListener {
-         void applyCode(String code);
-     }
- }
Index: app/src/main/res/drawable/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:width=\"108dp\"\r\n    android:height=\"108dp\"\r\n    android:viewportWidth=\"108\"\r\n    android:viewportHeight=\"108\">\r\n    <path\r\n        android:fillColor=\"#3DDC84\"\r\n        android:pathData=\"M0,0h108v108h-108z\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M9,0L9,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,0L19,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M29,0L29,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M39,0L39,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M49,0L49,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M59,0L59,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M69,0L69,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M79,0L79,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M89,0L89,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M99,0L99,108\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,9L108,9\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,19L108,19\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,29L108,29\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,39L108,39\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,49L108,49\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,59L108,59\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,69L108,69\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,79L108,79\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,89L108,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M0,99L108,99\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,29L89,29\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,39L89,39\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,49L89,49\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,59L89,59\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,69L89,69\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M19,79L89,79\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M29,19L29,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M39,19L39,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M49,19L49,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M59,19L59,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M69,19L69,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n    <path\r\n        android:fillColor=\"#00000000\"\r\n        android:pathData=\"M79,19L79,89\"\r\n        android:strokeWidth=\"0.8\"\r\n        android:strokeColor=\"#33FFFFFF\" />\r\n</vector>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_launcher_background.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ app/src/main/res/drawable/ic_launcher_background.xml	(date 1609587982724)
@@ -4,167 +4,75 @@
     android:height="108dp"
     android:viewportWidth="108"
     android:viewportHeight="108">
-    <path
-        android:fillColor="#3DDC84"
-        android:pathData="M0,0h108v108h-108z" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M9,0L9,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,0L19,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M29,0L29,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M39,0L39,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M49,0L49,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M59,0L59,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M69,0L69,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M79,0L79,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M89,0L89,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M99,0L99,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,9L108,9"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,19L108,19"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,29L108,29"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,39L108,39"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,49L108,49"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,59L108,59"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,69L108,69"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,79L108,79"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,89L108,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,99L108,99"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,29L89,29"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,39L89,39"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,49L89,49"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,59L89,59"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,69L89,69"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,79L89,79"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M29,19L29,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M39,19L39,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M49,19L49,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M59,19L59,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M69,19L69,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M79,19L79,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
+  <group android:scaleX="1.02"
+      android:scaleY="1.02"
+      android:translateX="-1.08"
+      android:translateY="-1.08">
+      <path android:fillColor="#3DDC84"
+            android:pathData="M0,0h108v108h-108z"/>
+      <path android:fillColor="#00000000" android:pathData="M9,0L9,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,0L19,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M29,0L29,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M39,0L39,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M49,0L49,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M59,0L59,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M69,0L69,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M79,0L79,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M89,0L89,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M99,0L99,108"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,9L108,9"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,19L108,19"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,29L108,29"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,39L108,39"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,49L108,49"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,59L108,59"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,69L108,69"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,79L108,79"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,89L108,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M0,99L108,99"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,29L89,29"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,39L89,39"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,49L89,49"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,59L89,59"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,69L89,69"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M19,79L89,79"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M29,19L29,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M39,19L39,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M49,19L49,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M59,19L59,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M69,19L69,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+      <path android:fillColor="#00000000" android:pathData="M79,19L79,89"
+            android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+  </group>
 </vector>
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <background android:drawable=\"@drawable/ic_launcher_background\" />\r\n    <foreground android:drawable=\"@drawable/ic_launcher_foreground\" />\r\n</adaptive-icon>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(date 1609588856391)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <background android:drawable="@mipmap/ic_launcher_background"/>
+    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
 </adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <background android:drawable=\"@drawable/ic_launcher_background\" />\r\n    <foreground android:drawable=\"@drawable/ic_launcher_foreground\" />\r\n</adaptive-icon>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision a9e0c15aba5097cf0b077b2042143f652d46c73a)
+++ app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(date 1609588856250)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <background android:drawable="@mipmap/ic_launcher_background"/>
+    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
 </adaptive-icon>
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021__01__01__15_47__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021__01__01__15_47__Default_Changelist_.xml
