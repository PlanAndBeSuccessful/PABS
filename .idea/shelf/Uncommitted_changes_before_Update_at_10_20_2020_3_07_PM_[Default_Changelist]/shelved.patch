Index: app/src/main/java/com/example/pabs/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pabs;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.pabs.Fragments.NicknameDialogFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\npublic class LoginActivity extends AppCompatActivity implements NicknameDialogFragment.NicknameDialogListener {\r\n\r\n    //DEBUG\r\n    private static final String TAG = \"LoginActivity\";\r\n\r\n    //UI\r\n    private EditText email_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n    private FirebaseAuth mAuth = null;\r\n    private FirebaseUser user = null;\r\n    private String token = null;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        email_et = findViewById(R.id.l_email);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openForgotPasswordFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //dialog on loading\r\n                mDialog = new ProgressDialog(LoginActivity.this);\r\n\r\n                mDialog.setMessage(\"Please wait...\");\r\n                mDialog.show();\r\n\r\n                login_btn.setClickable(false);\r\n                //check internet connection\r\n                if(isInternetConnectionActivated()){\r\n                    //internet is active\r\n                    login();\r\n                }\r\n                else{\r\n                    //internet is not active\r\n                    new AlertDialog.Builder(LoginActivity.this)\r\n                            .setTitle(\"No internet connection!\")\r\n                            .setMessage(\"Please enable your internet to login!\")\r\n                            // A null listener allows the button to dismiss the dialog and take no further action.\r\n                            .setPositiveButton(\"Okay\", null)\r\n                            .setIcon(android.R.drawable.ic_dialog_alert)\r\n                            .show();\r\n                    login_btn.setClickable(true);\r\n                    mDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    /**\r\n     * Check internet connection\r\n     */\r\n    private boolean isInternetConnectionActivated() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            return true;\r\n        }\r\n        else{\r\n            //we are not connected to a network\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set token to avoid losing it\r\n     */\r\n    private void setToken(String s){\r\n        this.token = s;\r\n    }\r\n\r\n    /**\r\n     * Login\r\n     */\r\n    private void login(){\r\n\r\n        // check if fields are empty\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {\r\n\r\n            //get information from the edit text fields\r\n            final String email = email_et.getText().toString();\r\n            final String password = password_et.getText().toString();\r\n\r\n            //get token for user\r\n            FirebaseMessaging.getInstance().getToken()\r\n                    .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<String> task) {\r\n                            if (!task.isSuccessful()) {\r\n                                Log.w(TAG, \"Fetching FCM registration token failed\", task.getException());\r\n                                return;\r\n                            }\r\n\r\n                            // Get new FCM registration token\r\n                            token = task.getResult();\r\n                            //we have to use a setter else we lose the information inside onComplete\r\n                            setToken(token);\r\n                        }\r\n                    });\r\n\r\n            //Sign in using auth(email, pass)\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                // Sign in success\r\n                                user = mAuth.getCurrentUser();\r\n\r\n                                //Verify if user has nickname\r\n                                reference.child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        //check if user is online\r\n                                        if(snapshot.child(\"online\").getValue().equals(\"false\")){\r\n                                            //check if use has a nickname\r\n                                            if (snapshot.child(\"nickname\").getValue().equals(\"\")) {\r\n                                                //set nickname\r\n                                                openNicknameDialogFragment();\r\n                                                login_btn.setClickable(true);\r\n                                                mDialog.dismiss();\r\n                                            } else {\r\n                                                //proceed to next activity\r\n                                                loginSuccessful();\r\n                                                mDialog.dismiss();\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            Log.d(TAG, \"User is already online!\");\r\n                                            Toast.makeText(LoginActivity.this, \"User is already online!\", Toast.LENGTH_SHORT).show();\r\n                                            login_btn.setClickable(true);\r\n                                            mDialog.dismiss();\r\n                                        }\r\n                                    }\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database error\r\n                                        login_btn.setClickable(true);\r\n                                        mDialog.dismiss();\r\n                                        Log.w(TAG, \"On cancelled: \" + error);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                // If sign in fails, display a message to the user.\r\n                                Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                login_btn.setClickable(true);\r\n                                mDialog.dismiss();\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n        {\r\n            // If sign in fails, display a message to the user.\r\n            Toast.makeText(LoginActivity.this, \"Wrong E-mail or Password!\", Toast.LENGTH_SHORT).show();\r\n            login_btn.setClickable(true);\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * apply nickname on dialog pressed OK\r\n     */\r\n    @Override\r\n    public void applyNickname(String nickname) {\r\n        reference.child(user.getUid()).child(\"nickname\").setValue(nickname);\r\n        loginSuccessful();\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void loginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n        //settings for user\r\n        reference.child(user.getUid()).child(\"online\").setValue(\"true\");\r\n        reference.child(user.getUid()).child(\"token\").setValue(token);\r\n        openNextActivity();\r\n    }\r\n\r\n    /**\r\n     * open nickname dialog fragment\r\n     */\r\n    private void openNicknameDialogFragment(){\r\n        NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();\r\n        nicknameDialogFragment.show(getSupportFragmentManager(),\"nicknameDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    private void openForgotPasswordFragment(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    private void openRegisterActivity(){\r\n        Intent intent = new Intent(this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open next activity\r\n     */\r\n    protected void openNextActivity() {\r\n        Intent intent = new Intent(this, MainActivity.class);\r\n        intent.putExtra(\"USER\", user.getUid());\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        login_btn.setClickable(true);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/LoginActivity.java	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1603188170364)
@@ -188,17 +188,20 @@
                                             if (snapshot.child("nickname").getValue().equals("")) {
                                                 //set nickname
                                                 openNicknameDialogFragment();
+                                                //settings
                                                 login_btn.setClickable(true);
                                                 mDialog.dismiss();
                                             } else {
                                                 //proceed to next activity
                                                 loginSuccessful();
+                                                //settings
                                                 mDialog.dismiss();
                                             }
                                         }
                                         else{
                                             Log.d(TAG, "User is already online!");
                                             Toast.makeText(LoginActivity.this, "User is already online!", Toast.LENGTH_SHORT).show();
+                                            //settings
                                             login_btn.setClickable(true);
                                             mDialog.dismiss();
                                         }
@@ -207,6 +210,7 @@
                                     public void onCancelled(@NonNull DatabaseError error) {
                                         //database error
                                         login_btn.setClickable(true);
+                                        //settings
                                         mDialog.dismiss();
                                         Log.w(TAG, "On cancelled: " + error);
                                     }
@@ -216,6 +220,7 @@
                             {
                                 // If sign in fails, display a message to the user.
                                 Toast.makeText(LoginActivity.this, "Authentication failed.", Toast.LENGTH_SHORT).show();
+                                //settings
                                 login_btn.setClickable(true);
                                 mDialog.dismiss();
                             }
@@ -226,6 +231,7 @@
         {
             // If sign in fails, display a message to the user.
             Toast.makeText(LoginActivity.this, "Wrong E-mail or Password!", Toast.LENGTH_SHORT).show();
+            //settings
             login_btn.setClickable(true);
             mDialog.dismiss();
         }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.pabs\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    \r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\">\r\n        <activity android:name=\".MainActivity\"></activity>\r\n\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity android:name=\".LoginActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <service\r\n            android:name=\".fcm.MyFirebaseMessagingService\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
+++ app/src/main/AndroidManifest.xml	(date 1603188539739)
@@ -4,7 +4,7 @@
 
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     <uses-permission android:name="android.permission.INTERNET" />
-    
+
     <application
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
@@ -12,23 +12,22 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme.NoActionBar">
-        <activity android:name=".MainActivity"></activity>
-
+        <activity android:name=".EventActivity"></activity>
+        <activity android:name=".MainActivity" />
         <activity android:name=".RegisterActivity" />
         <activity android:name=".LoginActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
+
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
 
-        <service
-            android:name=".fcm.MyFirebaseMessagingService">
+        <service android:name=".fcm.MyFirebaseMessagingService">
             <intent-filter>
                 <action android:name="com.google.firebase.MESSAGING_EVENT" />
             </intent-filter>
         </service>
-
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#6200EE</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"black\">#000000</color>\r\n    <color name=\"grey\">#A9A9A9</color>\r\n    <color name=\"transparent\"> #00000000</color>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
+++ app/src/main/res/values/colors.xml	(date 1603191509075)
@@ -7,5 +7,6 @@
     <color name="black">#000000</color>
     <color name="grey">#A9A9A9</color>
     <color name="transparent"> #00000000</color>
-
+    <color name="half_transparent"> #50676767</color>
+    <color name="example"> #00d2ff</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/event_element.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/event_element.xml	(date 1603191628101)
+++ app/src/main/res/layout/event_element.xml	(date 1603191628101)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="125dp"
+    android:layout_height="125dp">
+
+    <ImageView
+        android:id="@+id/category_image"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/example"/>
+
+    <TextView
+        android:id="@+id/event_name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:background="@color/half_transparent"
+        android:text="Event" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_event.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_event.xml	(date 1603188540066)
+++ app/src/main/res/layout/activity_event.xml	(date 1603188540066)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".EventActivity">
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/pabs/EventActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/EventActivity.java	(date 1603188540157)
+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1603188540157)
@@ -0,0 +1,14 @@
+package com.example.pabs;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+
+public class EventActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_event);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/pabs/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pabs;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    Button logout_btn;\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        //buttons\r\n        logout_btn = findViewById(R.id.logout);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //logout button on click listener\r\n        logout_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * on stop to remember if user is online or offline after app is closed\r\n     */\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        reference.child(uID).child(\"online\").setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * on post resume to remember if user is online or offline after app is minimized\r\n     */\r\n    @Override\r\n    protected void onPostResume() {\r\n        super.onPostResume();\r\n        reference.child(uID).child(\"online\").setValue(\"true\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/MainActivity.java	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
+++ app/src/main/java/com/example/pabs/MainActivity.java	(date 1603188170517)
@@ -43,23 +43,11 @@
                 finish();
             }
         });
-    }
+        //
+        // Write a string when this client loses connection
+        reference.child(uID).child("online").onDisconnect().setValue("false");
 
-    /**
-     * on stop to remember if user is online or offline after app is closed
-     */
-    @Override
-    protected void onStop() {
-        super.onStop();
-        reference.child(uID).child("online").setValue("false");
+        throw new RuntimeException("BUMM");
     }
 
-    /**
-     * on post resume to remember if user is online or offline after app is minimized
-     */
-    @Override
-    protected void onPostResume() {
-        super.onPostResume();
-        reference.child(uID).child("online").setValue("true");
-    }
 }
\ No newline at end of file
