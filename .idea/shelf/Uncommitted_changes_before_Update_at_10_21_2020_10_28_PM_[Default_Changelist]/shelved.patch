Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#6200EE</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"black\">#000000</color>\r\n    <color name=\"grey\">#A9A9A9</color>\r\n    <color name=\"transparent\"> #00000000</color>\r\n    <color name=\"half_transparent\"> #99676767</color>\r\n    <color name=\"example\"> #00d2ff</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/res/values/colors.xml	(date 1603298748707)
@@ -9,4 +9,6 @@
     <color name="transparent"> #00000000</color>
     <color name="half_transparent"> #99676767</color>
     <color name="example"> #00d2ff</color>
+    <color name="chinese_silver"> #cccccc</color>
+
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/pabs/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\nimport com.example.pabs.Models.User;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport static com.example.pabs.R.layout.activity_register;\r\n\r\n/**\r\n * Handles Register for users\r\n */\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    private EditText name_et = null, password_et = null, email_et = null;\r\n    private Button register_btn = null, back_to_login = null;\r\n    private FirebaseAuth currAuth;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    DatabaseReference reference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(activity_register);\r\n\r\n            //edittext\r\n            name_et = findViewById(R.id.r_username);\r\n            password_et = findViewById(R.id.r_password);\r\n            email_et = findViewById(R.id.r_email);\r\n\r\n            //button\r\n            register_btn = findViewById(R.id.r_signup_button);\r\n\r\n            back_to_login = findViewById(R.id.r_existing_account);\r\n\r\n            //open login\r\n            back_to_login.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    finish();\r\n                }\r\n            });\r\n\r\n            //firebase database -> get reference to USER table\r\n            reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n            register_btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    //dialog on loading\r\n                    mDialog = new ProgressDialog(RegisterActivity.this);\r\n\r\n                    mDialog.setMessage(\"Please wait...\");\r\n                    mDialog.setCancelable(false);\r\n                    mDialog.show();\r\n\r\n                    register();\r\n                }\r\n            });\r\n    }\r\n\r\n    private void register(){\r\n\r\n        //getting user credentials\r\n        String name = name_et.getText().toString();\r\n        String email = email_et.getText().toString();\r\n        final String password = password_et.getText().toString();\r\n\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) && !TextUtils.isEmpty(name_et.getText().toString())) {\r\n\r\n            //creating a user type object\r\n            final User user = new User(\"\", email, \"\", password, name, \"false\");\r\n\r\n            //getting an instance of firebase authentication token\r\n            currAuth = FirebaseAuth.getInstance();\r\n            currAuth.createUserWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n\r\n                                FirebaseMessaging.getInstance().deleteToken();\r\n\r\n                                reference.child(currAuth.getUid()).setValue(user);\r\n                                FirebaseAuth.getInstance().signOut();\r\n                                mDialog.dismiss();\r\n                                Toast.makeText(RegisterActivity.this, \"Succesfully registered!\", Toast.LENGTH_SHORT).show();\r\n                                finish();\r\n                            }\r\n                            else\r\n                            {\r\n                                if (password.length() < 6) {\r\n                                    Toast.makeText(RegisterActivity.this, \"The given password is too short \\nIt needs to be at least 6 characters!\", Toast.LENGTH_SHORT).show();\r\n                                    mDialog.dismiss();\r\n                                }\r\n                                else\r\n                                {\r\n                                    Toast.makeText(RegisterActivity.this, \"The given E-mail may contain errors!\", Toast.LENGTH_SHORT).show();\r\n                                    mDialog.dismiss();\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n            {\r\n            Toast.makeText(RegisterActivity.this, \"Fields are empty!.\", Toast.LENGTH_SHORT).show();\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/RegisterActivity.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/java/com/example/pabs/RegisterActivity.java	(date 1603302933304)
@@ -87,7 +87,7 @@
         if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) && !TextUtils.isEmpty(name_et.getText().toString())) {
 
             //creating a user type object
-            final User user = new User("", email, "", password, name, "false");
+            final User user = new User("", email, "", name, "false");
 
             //getting an instance of firebase authentication token
             currAuth = FirebaseAuth.getInstance();
Index: app/src/main/res/layout/fragment_dialog_nickname.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--Container for nickname-->\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:visibility=\"visible\"\r\n    tools:context=\".Fragments.NicknameDialogFragment\"\r\n    android:padding=\"16dp\">\r\n\r\n    <!--Nickname edit text-->\r\n    <EditText\r\n        android:id=\"@+id/d_n_nickname\"\r\n        android:layout_width=\"325dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:background=\"@drawable/email_bg\"\r\n        android:ems=\"10\"\r\n        android:fontFamily=\"@font/roboto_thin\"\r\n        android:hint=\"nickname\"\r\n        android:inputType=\"text\"\r\n        android:maxLines=\"1\"\r\n        android:padding=\"15dp\"\r\n        android:textColorHint=\"#000000\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_dialog_nickname.xml	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/res/layout/fragment_dialog_nickname.xml	(date 1603298820668)
@@ -10,19 +10,41 @@
     tools:context=".Fragments.NicknameDialogFragment"
     android:padding="16dp">
 
-    <!--Nickname edit text-->
-    <EditText
-        android:id="@+id/d_n_nickname"
-        android:layout_width="325dp"
-        android:layout_height="50dp"
-        android:layout_marginTop="5dp"
-        android:background="@drawable/email_bg"
-        android:ems="10"
-        android:fontFamily="@font/roboto_thin"
-        android:hint="nickname"
-        android:inputType="text"
-        android:maxLines="1"
-        android:padding="15dp"
-        android:textColorHint="#000000" />
+    <RelativeLayout
+        android:layout_centerInParent="true"
+        android:background="@drawable/login_button"
+        android:backgroundTint="@color/chinese_silver"
+        android:layout_height="125dp"
+        android:layout_width="match_parent">
+
+        <!--Nickname edit text-->
+        <EditText
+            android:id="@+id/d_n_nickname"
+            android:layout_width="300dp"
+            android:layout_height="50dp"
+            android:layout_centerInParent="true"
+            android:layout_alignParentTop="true"
+            android:layout_marginTop="5dp"
+            android:background="@drawable/email_bg"
+            android:ems="10"
+            android:fontFamily="@font/roboto_thin"
+            android:hint="nickname"
+            android:inputType="text"
+            android:maxLines="1"
+            android:padding="15dp"
+            android:textColorHint="#000000"/>
 
+        <Button
+            android:id="@+id/d_n_continue"
+            android:layout_width="150dp"
+            android:layout_height="35dp"
+            android:layout_below="@id/d_n_nickname"
+            android:layout_centerInParent="true"
+            android:layout_marginTop="25dp"
+            android:background="@drawable/login_button"
+            android:text="Continue"
+            android:clickable="true"/>
+    </RelativeLayout>
+
+
 </RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n\r\n    <style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n    </style>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/res/values/styles.xml	(date 1603297578727)
@@ -12,4 +12,10 @@
         <item name="windowNoTitle">true</item>
     </style>
 
+    <style name="MyDialogTheme" parent="Theme.AppCompat.Light.Dialog.Alert">
+        <item
+            name="android:background">@color/transparent
+        </item>
+    </style>
+
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/pabs/Models/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pabs.Models;\r\n\r\n/**\r\n * User from database\r\n */\r\n\r\npublic class User {\r\n    private String token;\r\n    private String e_mail;\r\n    private String nickname;\r\n    private String password;\r\n    private String user_name;\r\n    private String online;\r\n\r\n    public User(){\r\n    }\r\n\r\n    public User(String token, String e_mail, String nickname, String password, String user_name, String online) {\r\n        this.token = token;\r\n        this.e_mail = e_mail;\r\n        this.nickname = nickname;\r\n        this.password = password;\r\n        this.user_name = user_name;\r\n        this.online = online;\r\n    }\r\n\r\n    public String getOnline() {\r\n        return online;\r\n    }\r\n\r\n    public void setOnline(String online) {\r\n        this.online = online;\r\n    }\r\n\r\n    public String getToken() {\r\n        return token;\r\n    }\r\n\r\n    public void setToken(String token) {\r\n        this.token = token;\r\n    }\r\n\r\n    public String getE_mail() {\r\n        return e_mail;\r\n    }\r\n\r\n    public void setE_mail(String e_mail) {\r\n        this.e_mail = e_mail;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getUser_name() {\r\n        return user_name;\r\n    }\r\n\r\n    public void setUser_name(String user_name) {\r\n        this.user_name = user_name;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/Models/User.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/java/com/example/pabs/Models/User.java	(date 1603302905387)
@@ -8,18 +8,16 @@
     private String token;
     private String e_mail;
     private String nickname;
-    private String password;
     private String user_name;
     private String online;
 
     public User(){
     }
 
-    public User(String token, String e_mail, String nickname, String password, String user_name, String online) {
+    public User(String token, String e_mail, String nickname, String user_name, String online) {
         this.token = token;
         this.e_mail = e_mail;
         this.nickname = nickname;
-        this.password = password;
         this.user_name = user_name;
         this.online = online;
     }
@@ -56,14 +54,6 @@
         this.nickname = nickname;
     }
 
-    public String getPassword() {
-        return password;
-    }
-
-    public void setPassword(String password) {
-        this.password = password;
-    }
-
     public String getUser_name() {
         return user_name;
     }
Index: app/src/main/java/com/example/pabs/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pabs;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.pabs.Fragments.NicknameDialogFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\n/**\r\n * Handles login for users\r\n */\r\n\r\npublic class LoginActivity extends AppCompatActivity implements NicknameDialogFragment.NicknameDialogListener {\r\n\r\n    //DEBUG\r\n    private static final String TAG = \"LoginActivity\";\r\n\r\n    //UI\r\n    private EditText email_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n    private FirebaseAuth mAuth = null;\r\n    private FirebaseUser user = null;\r\n    private String token = null;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        email_et = findViewById(R.id.l_email);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openForgotPasswordFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //dialog on loading\r\n                mDialog = new ProgressDialog(LoginActivity.this);\r\n\r\n                mDialog.setMessage(\"Please wait...\");\r\n                mDialog.setCancelable(false);\r\n                mDialog.show();\r\n\r\n\r\n                login_btn.setClickable(false);\r\n                //check internet connection\r\n                if(isInternetConnectionActivated()){\r\n                    //internet is active\r\n                    login();\r\n                }\r\n                else{\r\n                    //internet is not active\r\n                    new AlertDialog.Builder(LoginActivity.this)\r\n                            .setTitle(\"No internet connection!\")\r\n                            .setMessage(\"Please enable your internet to login!\")\r\n                            // A null listener allows the button to dismiss the dialog and take no further action.\r\n                            .setPositiveButton(\"Okay\", null)\r\n                            .setIcon(android.R.drawable.ic_dialog_alert)\r\n                            .show();\r\n                    login_btn.setClickable(true);\r\n                    mDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    /**\r\n     * Check internet connection\r\n     */\r\n    private boolean isInternetConnectionActivated() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            return true;\r\n        }\r\n        else{\r\n            //we are not connected to a network\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set token to avoid losing it\r\n     */\r\n    private void setToken(String s){\r\n        this.token = s;\r\n    }\r\n\r\n    /**\r\n     * Login\r\n     */\r\n    private void login(){\r\n\r\n        // check if fields are empty\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {\r\n\r\n            //get information from the edit text fields\r\n            final String email = email_et.getText().toString();\r\n            final String password = password_et.getText().toString();\r\n\r\n            //get token for user\r\n            FirebaseMessaging.getInstance().getToken()\r\n                    .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<String> task) {\r\n                            if (!task.isSuccessful()) {\r\n                                Log.w(TAG, \"Fetching FCM registration token failed\", task.getException());\r\n                                return;\r\n                            }\r\n\r\n                            // Get new FCM registration token\r\n                            token = task.getResult();\r\n                            //we have to use a setter else we lose the information inside onComplete\r\n                            setToken(token);\r\n                        }\r\n                    });\r\n\r\n            //Sign in using auth(email, pass)\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                // Sign in success\r\n                                user = mAuth.getCurrentUser();\r\n\r\n                                //Verify if user has nickname\r\n                                reference.child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        //check if user is online\r\n                                        if(snapshot.child(\"online\").getValue().equals(\"false\")){\r\n                                            //check if use has a nickname\r\n                                            if (snapshot.child(\"nickname\").getValue().equals(\"\")) {\r\n                                                //set nickname\r\n                                                openNicknameDialogFragment();\r\n                                                //settings\r\n                                                login_btn.setClickable(true);\r\n                                                mDialog.dismiss();\r\n                                            } else {\r\n                                                //proceed to next activity\r\n                                                loginSuccessful();\r\n                                                //settings\r\n                                                mDialog.dismiss();\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            Log.d(TAG, \"User is already online!\");\r\n                                            Toast.makeText(LoginActivity.this, \"User is already online!\", Toast.LENGTH_SHORT).show();\r\n                                            //settings\r\n                                            login_btn.setClickable(true);\r\n                                            mDialog.dismiss();\r\n                                        }\r\n                                    }\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database error\r\n                                        login_btn.setClickable(true);\r\n                                        //settings\r\n                                        mDialog.dismiss();\r\n                                        Log.w(TAG, \"On cancelled: \" + error);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                // If sign in fails, display a message to the user.\r\n                                Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                //settings\r\n                                login_btn.setClickable(true);\r\n                                mDialog.dismiss();\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n        {\r\n            // If sign in fails, display a message to the user.\r\n            Toast.makeText(LoginActivity.this, \"Wrong E-mail or Password!\", Toast.LENGTH_SHORT).show();\r\n            //settings\r\n            login_btn.setClickable(true);\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * apply nickname on dialog pressed OK\r\n     */\r\n    @Override\r\n    public void applyNickname(String nickname) {\r\n        reference.child(user.getUid()).child(\"nickname\").setValue(nickname);\r\n        loginSuccessful();\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void loginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n        //settings for user\r\n        reference.child(user.getUid()).child(\"online\").setValue(\"true\");\r\n        reference.child(user.getUid()).child(\"token\").setValue(token);\r\n        openEventActivity();\r\n    }\r\n\r\n    /**\r\n     * open nickname dialog fragment\r\n     */\r\n    private void openNicknameDialogFragment(){\r\n        NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();\r\n        nicknameDialogFragment.show(getSupportFragmentManager(),\"nicknameDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    private void openForgotPasswordFragment(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    private void openRegisterActivity(){\r\n        Intent intent = new Intent(this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open event activity\r\n     */\r\n    protected void openEventActivity() {\r\n        Intent intent = new Intent(this, EventActivity.class);\r\n        intent.putExtra(\"USER\", user.getUid());\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        login_btn.setClickable(true);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/LoginActivity.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1603302960527)
@@ -264,6 +264,7 @@
         //settings for user
         reference.child(user.getUid()).child("online").setValue("true");
         reference.child(user.getUid()).child("token").setValue(token);
+
         openEventActivity();
     }
 
Index: app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.pabs.Fragments;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatDialogFragment;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\n\r\nimport com.example.pabs.R;\r\n\r\n/**\r\n * Sets Nickname for new Users\r\n */\r\n\r\npublic class NicknameDialogFragment extends AppCompatDialogFragment {\r\n\r\n    //edittext\r\n    private EditText nickname_et = null;\r\n    private NicknameDialogListener nicknameDialogListener;\r\n\r\n    /**\r\n     * When the dialog is created\r\n     */\r\n    @Override\r\n    public Dialog onCreateDialog(Bundle savedInstanceState){\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n\r\n        //setting view\r\n        LayoutInflater inflater = getActivity().getLayoutInflater();\r\n        View view = inflater.inflate(R.layout.fragment_dialog_nickname, null);\r\n\r\n        //building the custom dialog fragment\r\n        builder.setView(view)\r\n                .setTitle(\"Nickname\")\r\n                .setNegativeButton(\"cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                    }\r\n                })\r\n                .setPositiveButton(\"ok\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        String nickname = nickname_et.getText().toString();\r\n                        //calling interface to set the nickname\r\n                        nicknameDialogListener.applyNickname(nickname);\r\n                    }\r\n                });\r\n\r\n        nickname_et = view.findViewById(R.id.d_n_nickname);\r\n\r\n        return builder.create();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when the NicknameDialogListener is implemented in another class\r\n     */\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n\r\n        try {\r\n            nicknameDialogListener = (NicknameDialogListener) context;\r\n        } catch (ClassCastException e) {\r\n            throw new ClassCastException(context.toString() +\r\n                \"Must implement NicknameDialogListener\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * interface to set the nickname\r\n     */\r\n    public interface NicknameDialogListener{\r\n        void applyNickname(String nickname);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
+++ app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java	(date 1603299759579)
@@ -4,16 +4,21 @@
 import android.app.Dialog;
 import android.content.Context;
 import android.content.DialogInterface;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatDialogFragment;
 import androidx.fragment.app.Fragment;
 
+import android.text.TextUtils;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 import android.widget.EditText;
+import android.widget.Toast;
 
 import com.example.pabs.R;
 
@@ -26,38 +31,49 @@
     //edittext
     private EditText nickname_et = null;
     private NicknameDialogListener nicknameDialogListener;
+    //
+    private Dialog dialog;
+    //
+    private Button continue_bt;
 
     /**
      * When the dialog is created
      */
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState){
-        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-
         //setting view
         LayoutInflater inflater = getActivity().getLayoutInflater();
         View view = inflater.inflate(R.layout.fragment_dialog_nickname, null);
 
-        //building the custom dialog fragment
-        builder.setView(view)
-                .setTitle("Nickname")
-                .setNegativeButton("cancel", new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialogInterface, int i) {
-                    }
-                })
-                .setPositiveButton("ok", new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialogInterface, int i) {
-                        String nickname = nickname_et.getText().toString();
-                        //calling interface to set the nickname
-                        nicknameDialogListener.applyNickname(nickname);
-                    }
-                });
+        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);
+
+        nickname_et = view.findViewById(R.id.d_n_nickname);
+
+        continue_bt = (Button) view.findViewById(R.id.d_n_continue);
+
+        continue_bt.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (!TextUtils.isEmpty(nickname_et.getText().toString())) {
+                    String nickname = nickname_et.getText().toString();
+                    //calling interface to set the nickname
+                    nicknameDialogListener.applyNickname(nickname);
+                    dialog.dismiss();
+                }
+                else{
+                    Toast.makeText(getActivity(), "Please type in you nickname!", Toast.LENGTH_SHORT).show();
+                }
+            }
+        });
 
-        nickname_et = view.findViewById(R.id.d_n_nickname);
+        dialog.setContentView(view);
+
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
+
 
-        return builder.create();
+
+
+        return dialog;
     }
 
 
