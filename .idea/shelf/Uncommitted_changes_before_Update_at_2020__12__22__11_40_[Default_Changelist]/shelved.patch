Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM__Default_Changelist_.xml	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM__Default_Changelist_.xml	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
@@ -1,19 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM_[Default_Changelist]" date="1605523145284" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/16/2020 12:38 PM [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" value=".idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/login_background.png" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable/event_header_example.jpg" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM_[Default_Changelist]/event_header_example.jpg" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value=".idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/email_bg.png" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04_[Default_Changelist]/shelved.patch	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04_[Default_Changelist]/shelved.patch	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
@@ -1,108 +0,0 @@
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.pabs\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    \r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\">\r\n\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity  android:name=\".EventActivity\"/>\r\n\r\n        <activity android:name=\".LoginActivity\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <service\r\n            android:name=\".Fcm.MyFirebaseMessagingService\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision c32a7afad370e7f0218f168a53c9f838e5207170)
-+++ app/src/main/AndroidManifest.xml	(date 1605471146502)
-@@ -29,6 +29,9 @@
-                 <action android:name="com.google.firebase.MESSAGING_EVENT" />
-             </intent-filter>
-         </service>
-+        <meta-data
-+            android:name="preloaded_fonts"
-+            android:resource="@array/preloaded_fonts" />
- 
-     </application>
- 
-Index: app/src/main/java/com/example/pabs/EventActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.EventRecyclerViewAdapter;\r\nimport com.example.pabs.Models.Event;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * Main screen, handles more fragments, events, groups\r\n */\r\n\r\npublic class EventActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener{\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    //events\r\n    List<Event> lstEvent;\r\n\r\n    //drawer\r\n    private DrawerLayout drawer = null;\r\n    private NavigationView navigationView = null;\r\n\r\n    /**\r\n     * On create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_event);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        lstEvent.add(new Event(\"Balette Eloadas\", R.drawable.balette_eloadas));\r\n        lstEvent.add(new Event(\"Football\", R.drawable.football));\r\n        lstEvent.add(new Event(\"Halloween Party\", R.drawable.halloween_party));\r\n        lstEvent.add(new Event(\"Hiking\", R.drawable.hiking));\r\n        lstEvent.add(new Event(\"Party at OFE\", R.drawable.party_at_ofe));\r\n        lstEvent.add(new Event(\"Wedding\", R.drawable.wedding));\r\n        lstEvent.add(new Event(\"Balette Eloadas\", R.drawable.balette_eloadas));\r\n        lstEvent.add(new Event(\"Football\", R.drawable.football));\r\n        lstEvent.add(new Event(\"Halloween Party\", R.drawable.halloween_party));\r\n        lstEvent.add(new Event(\"Hiking\", R.drawable.hiking));\r\n        lstEvent.add(new Event(\"Party at OFE\", R.drawable.party_at_ofe));\r\n        lstEvent.add(new Event(\"Wedding\", R.drawable.wedding));\r\n        lstEvent.add(new Event(\"Balette Eloadas\", R.drawable.balette_eloadas));\r\n        lstEvent.add(new Event(\"Football\", R.drawable.football));\r\n        lstEvent.add(new Event(\"Halloween Party\", R.drawable.halloween_party));\r\n        lstEvent.add(new Event(\"Hiking\", R.drawable.hiking));\r\n        lstEvent.add(new Event(\"Party at OFE\", R.drawable.party_at_ofe));\r\n        lstEvent.add(new Event(\"Wedding\", R.drawable.wedding));\r\n\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);\r\n        //create Adapter with lstEvent in this context\r\n        EventRecyclerViewAdapter myAdapter = new EventRecyclerViewAdapter(this, lstEvent);\r\n        //separate the Recyclerview to 3 columns\r\n        myRv.setLayoutManager(new GridLayoutManager(this, 3));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myAdapter);\r\n\r\n        //nav view and drawer\r\n        navigationView = findViewById(R.id.nav_view);\r\n        drawer = findViewById(R.id.drawer_layout);\r\n\r\n        //handle navigation drawer open/close with toggle\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, null, R.string.navigation_drawer_open, R.string.navigation_drawer_close){\r\n            /** Called when a drawer has settled in a completely closed state. */\r\n            public void onDrawerClosed(View view) {\r\n                super.onDrawerClosed(view);\r\n                for(int i = 0; i < navigationView.getMenu().size(); ++i)\r\n                    navigationView.getMenu().getItem(i).setChecked(false);\r\n            }\r\n\r\n            /** Called when a drawer has settled in a completely open state. */\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //add toggle to drawer\r\n        drawer.addDrawerListener(toggle);\r\n\r\n        //sync toggle\r\n        toggle.syncState();\r\n\r\n        // Write a string when this client loses connection\r\n        reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * Called on selecting item from navigation list\r\n     */\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.nav_events:\r\n                Toast.makeText(this, \"nav_events\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_calendar:\r\n                Toast.makeText(this, \"nav_calendar\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_groups:\r\n                Toast.makeText(this, \"nav_groups\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_profile:\r\n                Toast.makeText(this, \"nav_profile\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_settings:\r\n                Toast.makeText(this, \"nav_settings\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_logout:\r\n                Toast.makeText(this, \"nav_logout\", Toast.LENGTH_SHORT).show();\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n                break;\r\n\r\n            default:\r\n                Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n\r\n        //close drawer on item clicked\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/EventActivity.java	(revision c32a7afad370e7f0218f168a53c9f838e5207170)
-+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1605511774921)
-@@ -18,6 +18,9 @@
- import android.widget.Toast;
- 
- import com.example.pabs.Adapters.EventRecyclerViewAdapter;
-+import com.example.pabs.Fragments.CalendarFragment;
-+import com.example.pabs.Fragments.PasswordRecoveryFragment;
-+import com.example.pabs.Fragments.SettingsFragment;
- import com.example.pabs.Models.Event;
- import com.google.android.material.navigation.NavigationView;
- import com.google.firebase.database.DatabaseReference;
-@@ -129,7 +132,12 @@
-                 Toast.makeText(this, "nav_events", Toast.LENGTH_SHORT).show();
-                 break;
- 
-+            case R.id.nav_todo:
-+                Toast.makeText(this, "nav_todo", Toast.LENGTH_SHORT).show();
-+                break;
-+
-             case R.id.nav_calendar:
-+                openCalendarFragment();
-                 Toast.makeText(this, "nav_calendar", Toast.LENGTH_SHORT).show();
-                 break;
- 
-@@ -142,6 +150,7 @@
-                 break;
- 
-             case R.id.nav_settings:
-+                openSettingsFragment();
-                 Toast.makeText(this, "nav_settings", Toast.LENGTH_SHORT).show();
-                 break;
- 
-@@ -160,4 +169,20 @@
-         drawer.closeDrawer(GravityCompat.START);
-         return true;
-     }
-+
-+    private void openCalendarFragment(){
-+        getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.drawer_layout, new CalendarFragment())
-+                .addToBackStack("CalendarFragment")
-+                .commit();
-+    }
-+
-+    private void openSettingsFragment(){
-+        getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.drawer_layout, new SettingsFragment())
-+                .addToBackStack("SettingsFragment")
-+                .commit();
-+    }
- }
-\ No newline at end of file
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'  // Google Services plugin\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.1\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.pabs\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'androidx.recyclerview:recyclerview:1.0.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.3.1'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n\r\n    // Declare the dependency for the Realtime Database library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-database'\r\n\r\n    // Add the dependency for the Firebase SDK for Google Analytics\r\n    // When using the BoM, don't specify versions in Firebase dependencies\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.android.gms:play-services-gcm:17.0.0'\r\n\r\n    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-messaging:20.1.0'\r\n\r\n    ///Navigation menu\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.0'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.0'\r\n    implementation \"androidx.drawerlayout:drawerlayout:1.1.0\"\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision c32a7afad370e7f0218f168a53c9f838e5207170)
-+++ app/build.gradle	(date 1605464849113)
-@@ -36,7 +36,7 @@
-     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
- 
-     // Import the BoM for the Firebase platform
--    implementation platform('com.google.firebase:firebase-bom:25.12.0')
-+    implementation platform('com.google.firebase:firebase-bom:26.0.0')
- 
-     // Declare the dependency for the Realtime Database library
-     // When using the BoM, you don't specify versions in Firebase library dependencies
-@@ -48,6 +48,8 @@
- 
-     implementation 'com.google.firebase:firebase-auth'
-     implementation 'com.google.android.gms:play-services-gcm:17.0.0'
-+    // Also declare the dependency for the Google Play services library and specify its version
-+    implementation 'com.google.android.gms:play-services-auth:18.1.0'
- 
-     // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
-     // When using the BoM, you don't specify versions in Firebase library dependencies
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04__Default_Changelist_.xml	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04__Default_Changelist_.xml	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2020__11__18__12_04_[Default_Changelist]" date="1605693960872" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020__11__18__12_04_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020. 11. 18. 12:04 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM_[Default_Changelist]/shelved.patch	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_11_16_2020_12_38_PM_[Default_Changelist]/shelved.patch	(revision 95d48b064fb94ac65eba355a78942b048dac9456)
@@ -1,3281 +0,0 @@
-Index: app/src/main/java/com/example/pabs/Adapters/EventRecyclerViewAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.pabs.Models.Event;\r\nimport com.example.pabs.R;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * Creates an array of card elements\r\n */\r\n\r\npublic class EventRecyclerViewAdapter extends RecyclerView.Adapter<EventRecyclerViewAdapter.MyViewHolder>{\r\n\r\n    private Context mContext;\r\n    private List<Event> mData;\r\n\r\n    /**\r\n     * Constructor of EventRecyclerViewAdapter\r\n     */\r\n    public EventRecyclerViewAdapter(Context mContext, List<Event> mData) {\r\n        this.mContext = mContext;\r\n        this.mData = mData;\r\n    }\r\n\r\n    /**\r\n     * OnCreateViewHolder - layout initializer\r\n     */\r\n    @NonNull\r\n    @Override\r\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view;\r\n        LayoutInflater mInflater = LayoutInflater.from(mContext);\r\n        view = mInflater.inflate(R.layout.cardview_event, parent, false);\r\n        return new MyViewHolder(view);\r\n    }\r\n\r\n    /**\r\n     * Set data for every individual card\r\n     */\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final MyViewHolder holder, final int position) {\r\n\r\n        //set data\r\n        holder.tv_title.setText(mData.get(position).getTitle());\r\n        holder.img_thumbnail.setImageResource(mData.get(position).getThumbnail());\r\n\r\n        //set click listener\r\n        holder.cardView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Toast.makeText(mContext, mData.get(position).getTitle(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Returns size of cards\r\n     */\r\n    @Override\r\n    public int getItemCount() {\r\n        return mData.size();\r\n    }\r\n\r\n    /**\r\n     * Creates card item\r\n     */\r\n    public static class MyViewHolder extends RecyclerView.ViewHolder{\r\n\r\n        //UI\r\n        TextView tv_title;\r\n        ImageView img_thumbnail;\r\n        CardView cardView;\r\n\r\n        /**\r\n         * Creates view for the item\r\n         */\r\n        public MyViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            //get UI as objects\r\n            tv_title = (TextView) itemView.findViewById(R.id.c_e_event_title);\r\n            img_thumbnail= (ImageView) itemView.findViewById(R.id.c_e_thumbnail);\r\n            cardView = (CardView) itemView.findViewById(R.id.card_event);\r\n\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Adapters/EventRecyclerViewAdapter.java	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ app/src/main/java/com/example/pabs/Adapters/EventRecyclerViewAdapter.java	(date 1605522620922)
-@@ -1,5 +1,6 @@
- package com.example.pabs.Adapters;
- 
-+import android.app.Activity;
- import android.content.Context;
- import android.view.LayoutInflater;
- import android.view.View;
-@@ -10,11 +11,23 @@
- 
- import androidx.annotation.NonNull;
- import androidx.cardview.widget.CardView;
-+import androidx.fragment.app.Fragment;
-+import androidx.fragment.app.FragmentManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
-+import com.example.pabs.Fragments.CreateEventFragment;
-+import com.example.pabs.Fragments.EventFragment;
-+import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.Models.Event;
- import com.example.pabs.R;
-+import com.google.firebase.auth.FirebaseAuth;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.ValueEventListener;
- 
-+import java.util.ArrayList;
- import java.util.List;
- 
- /**
-@@ -25,13 +38,15 @@
- 
-     private Context mContext;
-     private List<Event> mData;
-+    private FragmentManager mFragment;
- 
-     /**
-      * Constructor of EventRecyclerViewAdapter
-      */
--    public EventRecyclerViewAdapter(Context mContext, List<Event> mData) {
-+    public EventRecyclerViewAdapter(Context mContext, List<Event> mData, FragmentManager fragment) {
-         this.mContext = mContext;
-         this.mData = mData;
-+        this.mFragment = fragment;
-     }
- 
-     /**
-@@ -40,7 +55,7 @@
-     @NonNull
-     @Override
-     public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
--
-+        //Init view and set view of viewHolder
-         View view;
-         LayoutInflater mInflater = LayoutInflater.from(mContext);
-         view = mInflater.inflate(R.layout.cardview_event, parent, false);
-@@ -62,9 +77,78 @@
-             @Override
-             public void onClick(View view) {
-                 Toast.makeText(mContext, mData.get(position).getTitle(), Toast.LENGTH_SHORT).show();
-+
-+                //Getting events from database and setting them to recyclerview
-+                DatabaseReference databaseEvents;
-+                databaseEvents = FirebaseDatabase.getInstance().getReference().child("EVENT");
-+
-+                databaseEvents.addValueEventListener(new ValueEventListener() {
-+                    @Override
-+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                        for (DataSnapshot event : snapshot.getChildren()) {
-+                            //Loop to go through all child nodes of event
-+
-+                            //temp for storing data from database
-+                            DatabaseEvent temp = new DatabaseEvent();
-+                            //setting data to temp from database
-+                            temp.setOwner_id(event.getKey());
-+                            temp.setEvent_name(event.child("event_name").getValue().toString());
-+                            temp.setLocation_name(event.child("location_name").getValue().toString());
-+                            String tempx = event.child("location_x").getValue().toString();
-+                            temp.setLocation_x(Double.parseDouble(tempx));
-+                            String tempy = event.child("location_y").getValue().toString();
-+                            temp.setLocation_y(Double.parseDouble(tempy));
-+                            temp.setStart_date(event.child("start_date").getValue().toString());
-+                            temp.setEnd_date(event.child("end_date").getValue().toString());
-+                            temp.setPriv_pub(event.child("priv_pub").getValue().toString());
-+
-+                            final List<String> staff_members =  new ArrayList<>();
-+                            event.getRef().child("staff_members").addValueEventListener(new ValueEventListener() {
-+                                @Override
-+                                public void onDataChange(@NonNull DataSnapshot snapshot) {
-+
-+                                    for (DataSnapshot staff : snapshot.getChildren()) {
-+                                        //Loop 1 to go through all child nodes of staff members
-+                                        staff_members.add(staff.getValue().toString());
-+                                    }
-+                                }
-+
-+                                @Override
-+                                public void onCancelled(@NonNull DatabaseError error) {
-+
-+                                }
-+                            });
-+
-+                            temp.setStaff_members(staff_members);
-+
-+                            //open Event which matches with the title from the Database Event
-+                            if(mData.get(position).getTitle() == temp.getEvent_name()){
-+                                openEvent(temp);
-+
-+                            }
-+                        }
-+                    }
-+
-+                    @Override
-+                    public void onCancelled(@NonNull DatabaseError error) {
-+
-+                    }
-+                });
-+
-             }
-         });
- 
-+    }
-+
-+    /**
-+     * Open Event Fragment with data
-+     */
-+    public void openEvent(DatabaseEvent databaseEvent){
-+        mFragment
-+                .beginTransaction()
-+                .replace( R.id.fragment_event_container , new EventFragment(databaseEvent))
-+                .addToBackStack("EventFragment")
-+                .commit();
-     }
- 
-     /**
-Index: app/src/main/res/layout/activity_event.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--Drawer layout, we have to make it default for the Navigation View\r\nto work correctly, we also store a layout for other UI elements-->\r\n<androidx.drawerlayout.widget.DrawerLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".EventActivity\">\r\n\r\n    <!--Here we store the other elements of the UI-->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"8dp\" >\r\n\r\n        <!--Search bar-->\r\n        <AutoCompleteTextView\r\n            android:id=\"@+id/e_search_bar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"10dp\"\r\n            android:hint=\"Search for events...\"\r\n            android:background=\"@drawable/et_bg\"\r\n            android:fontFamily=\"sans-serif-light\"\r\n            android:textSize=\"15sp\"\r\n            android:inputType=\"textAutoComplete|textAutoCorrect\">\r\n        </AutoCompleteTextView>\r\n\r\n        <!--Recycler view, this displays all the events-->\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/e_recycler_view\"\r\n            android:layout_below=\"@+id/e_search_bar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\" >\r\n        </androidx.recyclerview.widget.RecyclerView>\r\n\r\n        <!--Container for the 3 images that we use as buttons-->\r\n        <RelativeLayout\r\n            android:id=\"@+id/rellay2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginLeft=\"20dp\"\r\n            android:layout_marginRight=\"20dp\"\r\n            android:visibility=\"visible\">\r\n\r\n            <!--First image-->\r\n            <ImageView\r\n                android:id=\"@+id/btn1\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@color/transparent\"\r\n                android:clickable=\"true\"\r\n                android:fontFamily=\"sans-serif\"\r\n                android:text=\"Button1\"\r\n                android:textAllCaps=\"false\"\r\n                android:scaleType=\"fitCenter\"\r\n                android:adjustViewBounds=\"true\"\r\n                android:layout_alignParentLeft=\"true\"\r\n                android:maxWidth=\"60dp\"\r\n                android:maxHeight=\"60dp\"\r\n                app:srcCompat=\"@drawable/circle\"\r\n                android:layout_centerVertical=\"true\"/>\r\n\r\n            <!--Second image-->\r\n            <ImageView\r\n                android:id=\"@+id/btn2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@color/transparent\"\r\n                android:clickable=\"true\"\r\n                android:fontFamily=\"sans-serif\"\r\n                android:text=\"Button1\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:textAllCaps=\"false\"\r\n                android:scaleType=\"fitCenter\"\r\n                android:adjustViewBounds=\"true\"\r\n                android:maxWidth=\"100dp\"\r\n                android:maxHeight=\"100dp\"\r\n                app:srcCompat=\"@drawable/circle\" />\r\n\r\n            <!--Third image-->\r\n            <ImageView\r\n                android:id=\"@+id/btn3\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@color/transparent\"\r\n                android:fontFamily=\"sans-serif\"\r\n                android:text=\"Button3\"\r\n                android:clickable=\"true\"\r\n                android:textAllCaps=\"false\"\r\n                android:scaleType=\"fitCenter\"\r\n                android:adjustViewBounds=\"true\"\r\n                android:layout_alignParentRight=\"true\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:maxWidth=\"60dp\"\r\n                android:maxHeight=\"60dp\"\r\n                app:srcCompat=\"@drawable/circle\" />\r\n\r\n        </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n\r\n\r\n    <!--Here we set the navigation view's settings(header, menu)-->\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        android:fitsSystemWindows=\"true\"\r\n        app:headerLayout=\"@layout/nav_header\"\r\n        app:menu=\"@menu/drawer_menu\" />\r\n\r\n</androidx.drawerlayout.widget.DrawerLayout >
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_event.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ app/src/main/res/layout/activity_event.xml	(date 1603538697049)
-@@ -10,8 +10,16 @@
-     android:layout_height="match_parent"
-     tools:context=".EventActivity">
- 
-+
-+    <!-- Draw your view whatever you want to draw -->
-+    <FrameLayout
-+        android:id="@+id/fragment_event_container"
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent" />
-+
-     <!--Here we store the other elements of the UI-->
-     <RelativeLayout
-+        android:id="@+id/activity_event_layout"
-         android:layout_width="match_parent"
-         android:layout_height="wrap_content"
-         android:padding="8dp" >
-@@ -67,7 +75,7 @@
- 
-             <!--Second image-->
-             <ImageView
--                android:id="@+id/btn2"
-+                android:id="@+id/a_e_create_event_button"
-                 android:layout_width="wrap_content"
-                 android:layout_height="wrap_content"
-                 android:background="@color/transparent"
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,150 +0,0 @@
--Index: app/build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.1\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.pabs\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n\r\n    // Declare the dependency for the Realtime Database library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-database'\r\n\r\n    // Add the dependency for the Firebase SDK for Google Analytics\r\n    // When using the BoM, don't specify versions in Firebase dependencies\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n\r\n    apply plugin: 'com.google.gms.google-services'\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/build.gradle	(revision 1b86a3b014c823c8feda4874d505cbe7d8a1ce2f)
--+++ app/build.gradle	(date 1602930062680)
--@@ -27,6 +27,7 @@
--     implementation 'androidx.appcompat:appcompat:1.2.0'
--     implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
--     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
--+    implementation 'com.google.firebase:firebase-auth:19.3.1'
--     testImplementation 'junit:junit:4.12'
--     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
--     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
--Index: app/src/main/java/com/example/pabs/RegisterActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\n\r\nimport com.example.pabs.Models.User;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport static com.example.pabs.R.layout.activity_register;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    private EditText name_et = null, password_et = null, email_et = null;\r\n    private Button register_btn = null;\r\n\r\n    //firebase\r\n    DatabaseReference reference;\r\n    FirebaseDatabase FbDatabase;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(activity_register);\r\n\r\n            //edittext\r\n            name_et = findViewById(R.id.r_username);\r\n            password_et = findViewById(R.id.r_password);\r\n            email_et = findViewById(R.id.r_email);\r\n\r\n            //button\r\n            register_btn = findViewById(R.id.r_signup_button);\r\n\r\n            //open NextActivity\r\n            register_btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    openNextActivity();\r\n                }\r\n            });\r\n\r\n            //firebase database -> get reference to USER table\r\n            reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n            register_btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    register();\r\n                }\r\n            });\r\n\r\n\r\n    }\r\n\r\n    private void register(){\r\n        //getting user credentials\r\n        String name = name_et.getText().toString();\r\n        String email = email_et.getText().toString();\r\n        String password = password_et.getText().toString();\r\n        //creating a user type object\r\n        User user = new User(\"04\",email,\"\",password,name);\r\n        //creating a new element in the database\r\n        //reference.child(user.getUserID()).child(user.).setValue(user.getE_mail());\r\n        /*reference.child(user.getUserID()).setValue(user);\r\n        reference.child(user.getUserID()).child(\"userID\").removeValue();*/\r\n        String key_id = reference.push().getKey();\r\n        reference.child(key_id).setValue(user);\r\n\r\n    }\r\n\r\n    private void openNextActivity(){\r\n\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/RegisterActivity.java	(revision 1b86a3b014c823c8feda4874d505cbe7d8a1ce2f)
--+++ app/src/main/java/com/example/pabs/RegisterActivity.java	(date 1602936200332)
--@@ -1,13 +1,19 @@
-- package com.example.pabs;
-- 
--+import androidx.annotation.NonNull;
-- import androidx.appcompat.app.AppCompatActivity;
-- 
-- import android.os.Bundle;
-- import android.view.View;
-- import android.widget.Button;
-- import android.widget.EditText;
--+import android.widget.Toast;
-- 
-- import com.example.pabs.Models.User;
--+import com.google.android.gms.tasks.OnCompleteListener;
--+import com.google.android.gms.tasks.Task;
--+import com.google.firebase.auth.AuthResult;
--+import com.google.firebase.auth.FirebaseAuth;
-- import com.google.firebase.database.DatabaseReference;
-- import com.google.firebase.database.FirebaseDatabase;
-- 
--@@ -18,6 +24,7 @@
--     //UI
--     private EditText name_et = null, password_et = null, email_et = null;
--     private Button register_btn = null;
--+    private FirebaseAuth currAuth;
-- 
--     //firebase
--     DatabaseReference reference;
--@@ -51,6 +58,7 @@
--                 @Override
--                 public void onClick(View v) {
--                     register();
--+
--                 }
--             });
-- 
--@@ -58,19 +66,36 @@
--     }
-- 
--     private void register(){
--+
--         //getting user credentials
--         String name = name_et.getText().toString();
--         String email = email_et.getText().toString();
---        String password = password_et.getText().toString();
--+        final String password = password_et.getText().toString();
--+
--         //creating a user type object
---        User user = new User("04",email,"",password,name);
---        //creating a new element in the database
---        //reference.child(user.getUserID()).child(user.).setValue(user.getE_mail());
---        /*reference.child(user.getUserID()).setValue(user);
---        reference.child(user.getUserID()).child("userID").removeValue();*/
---        String key_id = reference.push().getKey();
---        reference.child(key_id).setValue(user);
--+        final User user = new User("04",email,"",password,name);
-- 
--+        //getting an instance of firebase authentication token
--+        currAuth = FirebaseAuth.getInstance();
--+        currAuth.createUserWithEmailAndPassword(email,password)
--+                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
--+                    @Override
--+                    public void onComplete(@NonNull Task<AuthResult> task) {
--+                        if(task.isSuccessful()){
--+                            reference.child(currAuth.getUid()).setValue(user);
--+                            finish();
--+                        }
--+                        else{
--+                            if( password.length() < 6){
--+                                Toast.makeText(RegisterActivity.this, "The given password is too short \n It needs to be at least 6 characters!", Toast.LENGTH_SHORT).show();
--+                            }
--+                            else {
--+                                Toast.makeText(RegisterActivity.this, "The given E-mail may contain errors!", Toast.LENGTH_SHORT).show();
--+                            }
--+                        }
--+                    }
--+                });
--+        currAuth.signOut();
--     }
-- 
--     private void openNextActivity(){
--Index: app/src/main/java/com/example/pabs/Models/User.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs.Models;\r\n\r\npublic class User {\r\n    private String userID;\r\n    private String e_mail;\r\n    private String nickname;\r\n    private String password;\r\n    private String user_name;\r\n\r\n    public User(){\r\n    }\r\n\r\n    public User(String userID, String e_mail, String nickname, String password, String user_name) {\r\n        this.userID = userID;\r\n        this.e_mail = e_mail;\r\n        this.nickname = nickname;\r\n        this.password = password;\r\n        this.user_name = user_name;\r\n    }\r\n\r\n    public String getUserID() {\r\n        return userID;\r\n    }\r\n\r\n    public void setUserID(String userID) {\r\n        this.userID = userID;\r\n    }\r\n\r\n    public String getE_mail() {\r\n        return e_mail;\r\n    }\r\n\r\n    public void setE_mail(String e_mail) {\r\n        this.e_mail = e_mail;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getUser_name() {\r\n        return user_name;\r\n    }\r\n\r\n    public void setUser_name(String user_name) {\r\n        this.user_name = user_name;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/Models/User.java	(revision 1b86a3b014c823c8feda4874d505cbe7d8a1ce2f)
--+++ app/src/main/java/com/example/pabs/Models/User.java	(date 1602935543582)
--@@ -1,7 +1,7 @@
-- package com.example.pabs.Models;
-- 
-- public class User {
---    private String userID;
--+    private String toast;
--     private String e_mail;
--     private String nickname;
--     private String password;
--@@ -10,8 +10,8 @@
--     public User(){
--     }
-- 
---    public User(String userID, String e_mail, String nickname, String password, String user_name) {
---        this.userID = userID;
--+    public User(String toast, String e_mail, String nickname, String password, String user_name) {
--+        this.toast = toast;
--         this.e_mail = e_mail;
--         this.nickname = nickname;
--         this.password = password;
--@@ -19,11 +19,11 @@
--     }
-- 
--     public String getUserID() {
---        return userID;
--+        return toast;
--     }
-- 
--     public void setUserID(String userID) {
---        this.userID = userID;
--+        this.toast = userID;
--     }
-- 
--     public String getE_mail() {
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,14 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]" date="1603085714749" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020. 10. 19. 8:30 [Default Changelist]" />
--  <binary>
--    <option name="BEFORE_PATH" />
--    <option name="AFTER_PATH" value="app/src/main/res/drawable/email_bg.png" />
--    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/email_bg.png" />
--  </binary>
--  <binary>
--    <option name="BEFORE_PATH" />
--    <option name="AFTER_PATH" value="app/src/main/res/drawable/login_background.png" />
--    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/login_background.png" />
--  </binary>
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,441 +0,0 @@
--Index: app/src/main/res/layout/activity_login.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_alignParentBottom=\"true\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@drawable/login_background\">\r\n\r\n\r\n    <Button\r\n        android:id=\"@+id/l_register_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"30dp\"\r\n        android:layout_marginStart=\"102dp\"\r\n        android:layout_marginLeft=\"102dp\"\r\n        android:layout_marginTop=\"4dp\"\r\n        android:layout_marginEnd=\"102dp\"\r\n        android:layout_marginRight=\"102dp\"\r\n        android:layout_marginBottom=\"50dp\"\r\n        android:background=\"@color/transparent\"\r\n        android:text=\"Don’t have an account? Create\"\r\n        android:textAllCaps=\"false\"\r\n        android:textColor=\"#FFFFFF\"\r\n        android:textSize=\"14sp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.473\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/l_login_button\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/l_login_button\"\r\n        android:layout_width=\"160dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"127dp\"\r\n        android:layout_marginLeft=\"127dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"124dp\"\r\n        android:layout_marginRight=\"124dp\"\r\n        android:layout_marginBottom=\"6dp\"\r\n        android:background=\"@drawable/login_button\"\r\n        android:radius=\"60dp\"\r\n        android:text=\"Log In\"\r\n        android:textAllCaps=\"false\"\r\n        android:textColor=\"#92129D\"\r\n        android:textSize=\"30sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/l_register_button\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/l_forgot_password\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/l_forgot_password\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"30dp\"\r\n        android:layout_marginStart=\"51dp\"\r\n        android:layout_marginLeft=\"51dp\"\r\n        android:layout_marginTop=\"3dp\"\r\n        android:layout_marginEnd=\"217dp\"\r\n        android:layout_marginRight=\"217dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:background=\"@color/transparent\"\r\n        android:text=\"Forgot your password?\"\r\n        android:textAllCaps=\"false\"\r\n        android:textColor=\"#FFFFFF\"\r\n        android:textSize=\"14sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/l_login_button\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/l_password\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/l_password\"\r\n        android:layout_width=\"325dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"43dp\"\r\n        android:layout_marginLeft=\"43dp\"\r\n        android:layout_marginTop=\"6dp\"\r\n        android:layout_marginEnd=\"43dp\"\r\n        android:layout_marginRight=\"43dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:background=\"@drawable/email_bg\"\r\n        android:drawableLeft=\"@drawable/lock_ic\"\r\n        android:drawablePadding=\"10dip\"\r\n        android:ems=\"10\"\r\n        android:fontFamily=\"@font/roboto_thin\"\r\n        android:hint=\"password\"\r\n        android:inputType=\"textPassword\"\r\n        android:padding=\"15dp\"\r\n        android:textColorHint=\"#000000\"\r\n        android:textSize=\"18sp\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/l_forgot_password\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/l_email\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/l_email\"\r\n        android:layout_width=\"325dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"43dp\"\r\n        android:layout_marginLeft=\"43dp\"\r\n        android:layout_marginTop=\"435dp\"\r\n        android:layout_marginEnd=\"43dp\"\r\n        android:layout_marginRight=\"43dp\"\r\n        android:layout_marginBottom=\"6dp\"\r\n        android:background=\"@drawable/email_bg\"\r\n        android:drawableLeft=\"@drawable/member_ic\"\r\n        android:drawablePadding=\"10dip\"\r\n        android:ems=\"10\"\r\n        android:fontFamily=\"@font/roboto_thin\"\r\n        android:hint=\"e-mail\"\r\n        android:inputType=\"textPersonName\"\r\n        android:padding=\"15dp\"\r\n        android:textColorHint=\"#000000\"\r\n        app:layout_constraintBottom_toTopOf=\"@+id/l_password\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_login.xml	(revision 9049cca0ae3bcd5bda531ff5e697035b954de9d9)
--+++ app/src/main/res/layout/activity_login.xml	(date 1603292493148)
--@@ -1,127 +1,130 @@
-- <?xml version="1.0" encoding="utf-8"?>
---<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
--+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
--     xmlns:app="http://schemas.android.com/apk/res-auto"
--     xmlns:tools="http://schemas.android.com/tools"
--     android:layout_width="match_parent"
---    android:layout_alignParentBottom="true"
--     android:layout_height="match_parent"
--+    android:animateLayoutChanges="true"
--     android:background="@drawable/login_background">
--+    android:visibility="visible"
--+    tools:context=".LoginActivity">
--+
--+    <!-- Draw your view whatever you want to draw -->
--+    <FrameLayout
--+        android:id="@+id/fragment_container"
--+        android:layout_width="match_parent"
--+        android:layout_height="match_parent" />
--+
--+    <!--Screen-->
--+    <RelativeLayout
--+        android:id="@+id/mycont"
--+        android:layout_width="wrap_content"
--+        android:layout_height="wrap_content"
--+        android:layout_alignParentBottom="true"
--+        android:layout_marginLeft="40dp"
--+        android:layout_marginRight="40dp"
--+        android:padding="10dp">
--+
--+        <!--E-mail+Password+Buttons-->
--+        <RelativeLayout
--+            android:id="@+id/l_rellay1"
--+            android:layout_width="wrap_content"
--+            android:layout_height="wrap_content"
--+            android:visibility="visible">
-- 
--+            <!--E-mail+Password-->
--+            <LinearLayout
--+                android:id="@+id/l_linlay1"
--+                android:layout_width="match_parent"
--+                android:layout_height="wrap_content"
--+                android:orientation="vertical">
-- 
---    <Button
---        android:id="@+id/l_register_button"
---        android:layout_width="wrap_content"
---        android:layout_height="30dp"
---        android:layout_marginStart="102dp"
---        android:layout_marginLeft="102dp"
---        android:layout_marginTop="4dp"
---        android:layout_marginEnd="102dp"
---        android:layout_marginRight="102dp"
---        android:layout_marginBottom="50dp"
---        android:background="@color/transparent"
---        android:text="Don’t have an account? Create"
---        android:textAllCaps="false"
---        android:textColor="#FFFFFF"
---        android:textSize="14sp"
---        app:layout_constraintBottom_toBottomOf="parent"
---        app:layout_constraintEnd_toEndOf="parent"
---        app:layout_constraintHorizontal_bias="0.473"
---        app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toBottomOf="@+id/l_login_button" />
--+                    <!--E-mail-->
--+                    <EditText
--+                        android:id="@+id/l_email"
--+                        android:maxLines="1"
--+                        android:imeOptions="actionNext"
--+                        android:nextFocusDown="@+id/l_login_button"
--+                        android:inputType="text"
--+                        android:layout_width="wrap_content"
--+                        android:layout_height="50dp"
--+                        android:background="@drawable/email_bg"
--+                        android:drawableLeft="@drawable/member_ic"
--+                        android:drawablePadding="10dip"
--+                        android:ems="10"
--+                        android:fontFamily="@font/roboto_thin"
--+                        android:layout_marginBottom="20dp"
--+                        android:hint="e-mail"
--+                        android:padding="15dp"
--+                        android:textColorHint="#000000"
--+                        android:singleLine="true"/>
--+
--+                    <!--Password-->
--+                    <EditText
--+                        android:id="@+id/r_password"
--+                        android:maxLines="1"
--+                        android:imeOptions="actionNext"
--+                        android:nextFocusDown="@+id/l_signup_button"
--+                        android:layout_width="wrap_content"
--+                        android:layout_height="50dp"
--+                        android:background="@drawable/email_bg"
--+                        android:drawableLeft="@drawable/lock_ic"
--+                        android:drawablePadding="10dip"
--+                        android:ems="10"
--+                        android:fontFamily="@font/roboto_thin"
--+                        android:hint="password"
--+                        android:inputType="textPassword"
--+                        android:padding="15dp"
--+                        android:textColorHint="#000000"
--+                        android:textSize="18sp"
--+                        android:singleLine="true"/>
--+
--+            </LinearLayout>
--+
--+
--+            <!--Forgot your password button-->
--+            <Button
--+                android:id="@+id/l_forgot_password"
--+                android:layout_width="wrap_content"
--+                android:layout_height="20dp"
--+                android:layout_marginTop="10dp"
--+                android:layout_below="@id/l_linlay1"
--+                android:background="@color/transparent"
--+                android:text="Forgot your password?"
--+                android:textAllCaps="false"
--+                android:textColor="#FFFFFF"
--+                android:textSize="14sp" />
-- 
---    <Button
---        android:id="@+id/l_login_button"
---        android:layout_width="160dp"
---        android:layout_height="50dp"
---        android:layout_marginStart="127dp"
---        android:layout_marginLeft="127dp"
---        android:layout_marginTop="10dp"
---        android:layout_marginEnd="124dp"
---        android:layout_marginRight="124dp"
---        android:layout_marginBottom="6dp"
---        android:background="@drawable/login_button"
---        android:radius="60dp"
---        android:text="Log In"
---        android:textAllCaps="false"
---        android:textColor="#92129D"
---        android:textSize="30sp"
---        app:layout_constraintBottom_toTopOf="@+id/l_register_button"
---        app:layout_constraintEnd_toEndOf="parent"
---        app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toBottomOf="@+id/l_forgot_password"
---        tools:ignore="MissingConstraints" />
--+            <!--Log In button-->
--+            <Button
--+                android:id="@+id/l_login_button"
--+                android:layout_width="160dp"
--+                android:layout_height="50dp"
--+                android:layout_below="@id/l_linlay1"
--+                android:layout_centerHorizontal="true"
--+                android:layout_marginTop="60dp"
--+                android:fontFamily="sans-serif-medium"
--+                android:background="@drawable/login_button"
--+                android:radius="60dp"
--+                android:text="Log In"
--+                android:textAllCaps="false"
--+                android:textColor="#92129D"
--+                android:textSize="24sp" />
-- 
---    <Button
---        android:id="@+id/l_forgot_password"
---        android:layout_width="wrap_content"
---        android:layout_height="30dp"
---        android:layout_marginStart="51dp"
---        android:layout_marginLeft="51dp"
---        android:layout_marginTop="3dp"
---        android:layout_marginEnd="217dp"
---        android:layout_marginRight="217dp"
---        android:layout_marginBottom="10dp"
---        android:background="@color/transparent"
---        android:text="Forgot your password?"
---        android:textAllCaps="false"
---        android:textColor="#FFFFFF"
---        android:textSize="14sp"
---        app:layout_constraintBottom_toTopOf="@+id/l_login_button"
---        app:layout_constraintEnd_toEndOf="parent"
---        app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toBottomOf="@+id/l_password"
---        tools:ignore="MissingConstraints" />
---
---    <EditText
---        android:id="@+id/l_password"
---        android:layout_width="325dp"
---        android:layout_height="50dp"
---        android:layout_marginStart="43dp"
---        android:layout_marginLeft="43dp"
---        android:layout_marginTop="6dp"
---        android:layout_marginEnd="43dp"
---        android:layout_marginRight="43dp"
---        android:layout_marginBottom="10dp"
---        android:background="@drawable/email_bg"
---        android:drawableLeft="@drawable/lock_ic"
---        android:drawablePadding="10dip"
---        android:ems="10"
---        android:fontFamily="@font/roboto_thin"
---        android:hint="password"
---        android:inputType="textPassword"
---        android:padding="15dp"
---        android:textColorHint="#000000"
---        android:textSize="18sp"
---        app:layout_constraintBottom_toTopOf="@+id/l_forgot_password"
---        app:layout_constraintEnd_toEndOf="parent"
---        app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toBottomOf="@+id/l_email"
---        tools:ignore="MissingConstraints" />
--+            <!--Don’t have an account? Create Button-->
--+            <Button
--+                android:id="@+id/l_register_button"
--+                android:layout_width="wrap_content"
--+                android:layout_height="20dp"
--+                android:layout_marginTop="20dp"
--+                android:layout_below="@id/l_login_button"
--+                android:background="@color/transparent"
--+                android:text="Don’t have an account? Create"
--+                android:layout_centerHorizontal="true"
--+                android:textAllCaps="false"
--+                android:textColor="#FFFFFF"
--+                android:textSize="14sp"  />
-- 
---    <EditText
---        android:id="@+id/l_email"
---        android:layout_width="325dp"
---        android:layout_height="50dp"
---        android:layout_marginStart="43dp"
---        android:layout_marginLeft="43dp"
---        android:layout_marginTop="435dp"
---        android:layout_marginEnd="43dp"
---        android:layout_marginRight="43dp"
---        android:layout_marginBottom="6dp"
---        android:background="@drawable/email_bg"
---        android:drawableLeft="@drawable/member_ic"
---        android:drawablePadding="10dip"
---        android:ems="10"
---        android:fontFamily="@font/roboto_thin"
---        android:hint="e-mail"
---        android:inputType="textPersonName"
---        android:padding="15dp"
---        android:textColorHint="#000000"
---        app:layout_constraintBottom_toTopOf="@+id/l_password"
---        app:layout_constraintEnd_toEndOf="parent"
---        app:layout_constraintStart_toStartOf="parent"
---        app:layout_constraintTop_toTopOf="parent"
---        tools:ignore="MissingConstraints" />
---
---
---</androidx.constraintlayout.widget.ConstraintLayout>
--\ No newline at end of file
--+        </RelativeLayout>
--+    </RelativeLayout>
--+</RelativeLayout>
--\ No newline at end of file
--Index: app/src/main/res/layout/activity_register.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:background=\"@drawable/register_bg\">\r\n    android:visibility=\"visible\"\r\n    tools:context=\".RegisterActivity\">\r\n\r\n    <!--Screen-->\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:layout_marginLeft=\"40dp\"\r\n        android:layout_marginRight=\"40dp\">\r\n\r\n        <!--Text+Username+Password+Button-->\r\n        <RelativeLayout\r\n            android:id=\"@+id/r_rellay1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:visibility=\"visible\">\r\n\r\n            <!--Name+Password+Email-->\r\n            <LinearLayout\r\n                android:id=\"@+id/r_linlay1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <!--E-mail-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"vertical\">\r\n\r\n\r\n                  <EditText\r\n                            android:id=\"@+id/r_email\"\r\n                            android:maxLines=\"1\"\r\n                            android:imeOptions=\"actionNext\"\r\n                            android:nextFocusDown=\"@+id/l_login_button\"\r\n                            android:inputType=\"text\"\r\n                            android:layout_width=\"325dp\"\r\n                            android:layout_height=\"50dp\"\r\n                            android:layout_marginTop=\"5dp\"\r\n                            android:background=\"@drawable/email_bg\"\r\n                            android:drawableLeft=\"@drawable/emailbox_ic\"\r\n                            android:drawablePadding=\"10dip\"\r\n                            android:ems=\"10\"\r\n                            android:fontFamily=\"@font/roboto_thin\"\r\n                            android:hint=\"e-mail\"\r\n                            android:padding=\"15dp\"\r\n                            android:textColorHint=\"#000000\"\r\n                            android:singleLine=\"true\"/>\r\n                </LinearLayout>\r\n\r\n                <!--Username-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/r_username\"\r\n                        android:maxLines=\"1\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:nextFocusDown=\"@+id/l_login_button\"\r\n                        android:inputType=\"text\"\r\n                        android:layout_width=\"325dp\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"@drawable/email_bg\"\r\n                        android:drawableLeft=\"@drawable/member_ic\"\r\n                        android:drawablePadding=\"10dip\"\r\n                        android:ems=\"10\"\r\n                        android:fontFamily=\"@font/roboto_thin\"\r\n                        android:hint=\"usrname\"\r\n                        android:padding=\"15dp\"\r\n                        android:textColorHint=\"#000000\"\r\n                        android:singleLine=\"true\"/>\r\n                </LinearLayout>\r\n\r\n                <!--Password-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/r_password\"\r\n                        android:maxLines=\"1\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:nextFocusDown=\"@+id/r_signup_button\"\r\n                        android:layout_width=\"325dp\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:background=\"@drawable/email_bg\"\r\n                        android:drawableLeft=\"@drawable/lock_ic\"\r\n                        android:drawablePadding=\"10dip\"\r\n                        android:ems=\"10\"\r\n                        android:fontFamily=\"@font/roboto_thin\"\r\n                        android:hint=\"password\"\r\n                        android:inputType=\"textPassword\"\r\n                        android:padding=\"15dp\"\r\n                        android:textColorHint=\"#000000\"\r\n                        android:textSize=\"18sp\"\r\n                        android:singleLine=\"true\"/>\r\n\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n            <!--Sign Up button-->\r\n            <Button\r\n                android:id=\"@+id/r_signup_button\"\r\n                android:layout_width=\"160dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@id/r_linlay1\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginTop=\"60dp\"\r\n                android:fontFamily=\"sans-serif-medium\"\r\n                android:background=\"@drawable/login_button\"\r\n                android:radius=\"60dp\"\r\n                android:text=\"Sign Up\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#92129D\"\r\n                android:textSize=\"24sp\" />\r\n\r\n            <!--You already have an account-->\r\n            <Button\r\n                android:id=\"@+id/r_existing_account\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_below=\"@id/r_signup_button\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:background=\"@color/transparent\"\r\n                android:fontFamily=\"sans-serif-light\"\r\n                android:paddingLeft=\"20dp\"\r\n                android:paddingRight=\"20dp\"\r\n                android:text=\"You already have an account?\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"16sp\" />\r\n\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n</RelativeLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_register.xml	(revision 9049cca0ae3bcd5bda531ff5e697035b954de9d9)
--+++ app/src/main/res/layout/activity_register.xml	(date 1603291459578)
--@@ -66,8 +66,6 @@
--                     android:layout_marginTop="20dp"
--                     android:orientation="vertical">
-- 
---
---
--                     <EditText
--                         android:id="@+id/r_username"
--                         android:maxLines="1"
--@@ -82,7 +80,7 @@
--                         android:drawablePadding="10dip"
--                         android:ems="10"
--                         android:fontFamily="@font/roboto_thin"
---                        android:hint="usrname"
--+                        android:hint="username"
--                         android:padding="15dp"
--                         android:textColorHint="#000000"
--                         android:singleLine="true"/>
--Index: app/src/main/java/com/example/pabs/LoginActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.pabs.Fragments.NicknameDialogFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\n/**\r\n * Handles login for users\r\n */\r\n\r\npublic class LoginActivity extends AppCompatActivity implements NicknameDialogFragment.NicknameDialogListener {\r\n\r\n    //DEBUG\r\n    private static final String TAG = \"LoginActivity\";\r\n\r\n    //UI\r\n    private EditText email_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n    private FirebaseAuth mAuth = null;\r\n    private FirebaseUser user = null;\r\n    private String token = null;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        email_et = findViewById(R.id.l_email);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openForgotPasswordFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //dialog on loading\r\n                mDialog = new ProgressDialog(LoginActivity.this);\r\n\r\n                mDialog.setMessage(\"Please wait...\");\r\n                mDialog.setCancelable(false);\r\n                mDialog.show();\r\n\r\n\r\n                login_btn.setClickable(false);\r\n                //check internet connection\r\n                if(isInternetConnectionActivated()){\r\n                    //internet is active\r\n                    login();\r\n                }\r\n                else{\r\n                    //internet is not active\r\n                    new AlertDialog.Builder(LoginActivity.this)\r\n                            .setTitle(\"No internet connection!\")\r\n                            .setMessage(\"Please enable your internet to login!\")\r\n                            // A null listener allows the button to dismiss the dialog and take no further action.\r\n                            .setPositiveButton(\"Okay\", null)\r\n                            .setIcon(android.R.drawable.ic_dialog_alert)\r\n                            .show();\r\n                    login_btn.setClickable(true);\r\n                    mDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    /**\r\n     * Check internet connection\r\n     */\r\n    private boolean isInternetConnectionActivated() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            return true;\r\n        }\r\n        else{\r\n            //we are not connected to a network\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set token to avoid losing it\r\n     */\r\n    private void setToken(String s){\r\n        this.token = s;\r\n    }\r\n\r\n    /**\r\n     * Login\r\n     */\r\n    private void login(){\r\n\r\n        // check if fields are empty\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {\r\n\r\n            //get information from the edit text fields\r\n            final String email = email_et.getText().toString();\r\n            final String password = password_et.getText().toString();\r\n\r\n            //get token for user\r\n            FirebaseMessaging.getInstance().getToken()\r\n                    .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<String> task) {\r\n                            if (!task.isSuccessful()) {\r\n                                Log.w(TAG, \"Fetching FCM registration token failed\", task.getException());\r\n                                return;\r\n                            }\r\n\r\n                            // Get new FCM registration token\r\n                            token = task.getResult();\r\n                            //we have to use a setter else we lose the information inside onComplete\r\n                            setToken(token);\r\n                        }\r\n                    });\r\n\r\n            //Sign in using auth(email, pass)\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                // Sign in success\r\n                                user = mAuth.getCurrentUser();\r\n\r\n                                //Verify if user has nickname\r\n                                reference.child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        //check if user is online\r\n                                        if(snapshot.child(\"online\").getValue().equals(\"false\")){\r\n                                            //check if use has a nickname\r\n                                            if (snapshot.child(\"nickname\").getValue().equals(\"\")) {\r\n                                                //set nickname\r\n                                                openNicknameDialogFragment();\r\n                                                //settings\r\n                                                login_btn.setClickable(true);\r\n                                                mDialog.dismiss();\r\n                                            } else {\r\n                                                //proceed to next activity\r\n                                                loginSuccessful();\r\n                                                //settings\r\n                                                mDialog.dismiss();\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            Log.d(TAG, \"User is already online!\");\r\n                                            Toast.makeText(LoginActivity.this, \"User is already online!\", Toast.LENGTH_SHORT).show();\r\n                                            //settings\r\n                                            login_btn.setClickable(true);\r\n                                            mDialog.dismiss();\r\n                                        }\r\n                                    }\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database error\r\n                                        login_btn.setClickable(true);\r\n                                        //settings\r\n                                        mDialog.dismiss();\r\n                                        Log.w(TAG, \"On cancelled: \" + error);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                // If sign in fails, display a message to the user.\r\n                                Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                //settings\r\n                                login_btn.setClickable(true);\r\n                                mDialog.dismiss();\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n        {\r\n            // If sign in fails, display a message to the user.\r\n            Toast.makeText(LoginActivity.this, \"Wrong E-mail or Password!\", Toast.LENGTH_SHORT).show();\r\n            //settings\r\n            login_btn.setClickable(true);\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * apply nickname on dialog pressed OK\r\n     */\r\n    @Override\r\n    public void applyNickname(String nickname) {\r\n        reference.child(user.getUid()).child(\"nickname\").setValue(nickname);\r\n        loginSuccessful();\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void loginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n        //settings for user\r\n        reference.child(user.getUid()).child(\"online\").setValue(\"true\");\r\n        reference.child(user.getUid()).child(\"token\").setValue(token);\r\n        openEventActivity();\r\n    }\r\n\r\n    /**\r\n     * open nickname dialog fragment\r\n     */\r\n    private void openNicknameDialogFragment(){\r\n        NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();\r\n        nicknameDialogFragment.show(getSupportFragmentManager(),\"nicknameDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    private void openForgotPasswordFragment(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    private void openRegisterActivity(){\r\n        Intent intent = new Intent(this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open event activity\r\n     */\r\n    protected void openEventActivity() {\r\n        Intent intent = new Intent(this, EventActivity.class);\r\n        intent.putExtra(\"USER\", user.getUid());\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        login_btn.setClickable(true);\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/LoginActivity.java	(revision 9049cca0ae3bcd5bda531ff5e697035b954de9d9)
--+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1603286773870)
--@@ -11,6 +11,7 @@
-- import android.view.View;
-- import android.widget.Button;
-- import android.widget.EditText;
--+import android.widget.LinearLayout;
-- import android.widget.Toast;
-- 
-- import androidx.annotation.NonNull;
--@@ -43,6 +44,7 @@
--     private EditText email_et = null, password_et = null;
--     private Button forgot_password_btn = null, login_btn = null, register_btn = null;
--     private ProgressDialog mDialog = null;
--+    private LinearLayout mylayout;
-- 
--     //firebase
--     private DatabaseReference reference = null;
--@@ -50,6 +52,7 @@
--     private FirebaseUser user = null;
--     private String token = null;
-- 
--+
--     /**
--      * on create
--      */
--@@ -279,7 +282,11 @@
--      * open forgot password fragment
--      */
--     private void openForgotPasswordFragment(){
---
--+        getSupportFragmentManager()
--+                .beginTransaction()
--+                .replace(R.id.fragment_container, new BlankFragment(mylayout))
--+                .addToBackStack("BlankFragment")
--+                .commit();
--     }
-- 
--     /**
--Index: app/src/main/res/layout/fragment_blank.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/fragment_blank.xml	(date 1603286983218)
--+++ app/src/main/res/layout/fragment_blank.xml	(date 1603286983218)
--@@ -0,0 +1,25 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="match_parent"
--+    android:layout_height="match_parent"
--+    android:background="@color/white"
--+    tools:context=".BlankFragment">
--+
--+    <LinearLayout
--+        android:clickable="true"
--+        android:layout_width="match_parent"
--+        android:layout_height="match_parent" >
--+        <!-- TODO: Update blank fragment layout -->
--+        <TextView
--+            android:layout_width="match_parent"
--+            android:layout_height="match_parent"
--+            android:textColor="@color/black"
--+            android:textAllCaps="true"
--+            android:textAlignment="center"
--+            android:text="@string/hello_blank_fragment"
--+            android:gravity="center_horizontal" />
--+
--+    </LinearLayout>
--+
--+</LinearLayout>
--\ No newline at end of file
--Index: app/src/main/res/values/strings.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><resources>\r\n    <string name=\"app_name\">PABS</string>\r\n    <string name=\"username\">Username</string>\r\n    <string name=\"email\">E-mail addres</string>\r\n    <string name=\"navigation_drawer_open\">Open navigation drawer</string>\r\n    <string name=\"navigation_drawer_close\">Close navigation drawer</string>\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/strings.xml	(revision 9049cca0ae3bcd5bda531ff5e697035b954de9d9)
--+++ app/src/main/res/values/strings.xml	(date 1603283741026)
--@@ -4,4 +4,6 @@
--     <string name="email">E-mail addres</string>
--     <string name="navigation_drawer_open">Open navigation drawer</string>
--     <string name="navigation_drawer_close">Close navigation drawer</string>
--+    <!-- TODO: Remove or change this placeholder text -->
--+    <string name="hello_blank_fragment">Hello blank fragment</string>
-- </resources>
--\ No newline at end of file
--Index: app/src/main/java/com/example/pabs/BlankFragment.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/BlankFragment.java	(date 1603290557230)
--+++ app/src/main/java/com/example/pabs/BlankFragment.java	(date 1603290557230)
--@@ -0,0 +1,50 @@
--+package com.example.pabs;
--+
--+import android.app.Activity;
--+import android.os.Bundle;
--+
--+import androidx.fragment.app.Fragment;
--+
--+import android.view.LayoutInflater;
--+import android.view.View;
--+import android.view.ViewGroup;
--+import android.widget.LinearLayout;
--+
--+
--+public class BlankFragment extends Fragment {
--+
--+
--+    LinearLayout myView;
--+
--+    private View view = null;
--+
--+    BlankFragment(LinearLayout myView){
--+        this.myView = myView;
--+    }
--+
--+    @Override
--+    public void onCreate(Bundle savedInstanceState) {
--+        super.onCreate(savedInstanceState);
--+
--+
--+    }
--+
--+    @Override
--+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
--+                             Bundle savedInstanceState) {
--+        // Inflate the layout for this fragment
--+        view =  inflater.inflate(R.layout.fragment_blank, container, false);
--+
--+        View aView = getActivity().findViewById(R.id.mycont);
--+        aView.setVisibility(View.GONE);
--+        //aView.setVisibility(myView.GONE);
--+        /*
--+        myView.setVisibility(myView.GONE);
--+        myView.setVisibility(myView.VISIBLE);
--+         */
--+
--+        return view;
--+    }
--+
--+    
--+}
--\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM_[Default_Changelist]" date="1602876053030" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/16/2020 10:19 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM_[Default_Changelist]" date="1603308495750" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/21/2020 10:28 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM_[Default_Changelist]" date="1603195709004" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/20/2020 3:07 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM_[Default_Changelist]" date="1603292768430" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_6_06_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/21/2020 6:06 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_21_2020_10_28_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,284 +0,0 @@
--Index: app/src/main/res/values/colors.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#6200EE</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"black\">#000000</color>\r\n    <color name=\"grey\">#A9A9A9</color>\r\n    <color name=\"transparent\"> #00000000</color>\r\n    <color name=\"half_transparent\"> #99676767</color>\r\n    <color name=\"example\"> #00d2ff</color>\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/colors.xml	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/res/values/colors.xml	(date 1603298748707)
--@@ -9,4 +9,6 @@
--     <color name="transparent"> #00000000</color>
--     <color name="half_transparent"> #99676767</color>
--     <color name="example"> #00d2ff</color>
--+    <color name="chinese_silver"> #cccccc</color>
--+
-- </resources>
--\ No newline at end of file
--Index: app/src/main/java/com/example/pabs/RegisterActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\nimport com.example.pabs.Models.User;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport static com.example.pabs.R.layout.activity_register;\r\n\r\n/**\r\n * Handles Register for users\r\n */\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    private EditText name_et = null, password_et = null, email_et = null;\r\n    private Button register_btn = null, back_to_login = null;\r\n    private FirebaseAuth currAuth;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    DatabaseReference reference;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(activity_register);\r\n\r\n            //edittext\r\n            name_et = findViewById(R.id.r_username);\r\n            password_et = findViewById(R.id.r_password);\r\n            email_et = findViewById(R.id.r_email);\r\n\r\n            //button\r\n            register_btn = findViewById(R.id.r_signup_button);\r\n\r\n            back_to_login = findViewById(R.id.r_existing_account);\r\n\r\n            //open login\r\n            back_to_login.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    finish();\r\n                }\r\n            });\r\n\r\n            //firebase database -> get reference to USER table\r\n            reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n            register_btn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    //dialog on loading\r\n                    mDialog = new ProgressDialog(RegisterActivity.this);\r\n\r\n                    mDialog.setMessage(\"Please wait...\");\r\n                    mDialog.setCancelable(false);\r\n                    mDialog.show();\r\n\r\n                    register();\r\n                }\r\n            });\r\n    }\r\n\r\n    private void register(){\r\n\r\n        //getting user credentials\r\n        String name = name_et.getText().toString();\r\n        String email = email_et.getText().toString();\r\n        final String password = password_et.getText().toString();\r\n\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) && !TextUtils.isEmpty(name_et.getText().toString())) {\r\n\r\n            //creating a user type object\r\n            final User user = new User(\"\", email, \"\", password, name, \"false\");\r\n\r\n            //getting an instance of firebase authentication token\r\n            currAuth = FirebaseAuth.getInstance();\r\n            currAuth.createUserWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n\r\n                                FirebaseMessaging.getInstance().deleteToken();\r\n\r\n                                reference.child(currAuth.getUid()).setValue(user);\r\n                                FirebaseAuth.getInstance().signOut();\r\n                                mDialog.dismiss();\r\n                                Toast.makeText(RegisterActivity.this, \"Succesfully registered!\", Toast.LENGTH_SHORT).show();\r\n                                finish();\r\n                            }\r\n                            else\r\n                            {\r\n                                if (password.length() < 6) {\r\n                                    Toast.makeText(RegisterActivity.this, \"The given password is too short \\nIt needs to be at least 6 characters!\", Toast.LENGTH_SHORT).show();\r\n                                    mDialog.dismiss();\r\n                                }\r\n                                else\r\n                                {\r\n                                    Toast.makeText(RegisterActivity.this, \"The given E-mail may contain errors!\", Toast.LENGTH_SHORT).show();\r\n                                    mDialog.dismiss();\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n            {\r\n            Toast.makeText(RegisterActivity.this, \"Fields are empty!.\", Toast.LENGTH_SHORT).show();\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/RegisterActivity.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/java/com/example/pabs/RegisterActivity.java	(date 1603302933304)
--@@ -87,7 +87,7 @@
--         if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) && !TextUtils.isEmpty(name_et.getText().toString())) {
-- 
--             //creating a user type object
---            final User user = new User("", email, "", password, name, "false");
--+            final User user = new User("", email, "", name, "false");
-- 
--             //getting an instance of firebase authentication token
--             currAuth = FirebaseAuth.getInstance();
--Index: app/src/main/res/layout/fragment_dialog_nickname.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--Container for nickname-->\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:visibility=\"visible\"\r\n    tools:context=\".Fragments.NicknameDialogFragment\"\r\n    android:padding=\"16dp\">\r\n\r\n    <!--Nickname edit text-->\r\n    <EditText\r\n        android:id=\"@+id/d_n_nickname\"\r\n        android:layout_width=\"325dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:background=\"@drawable/email_bg\"\r\n        android:ems=\"10\"\r\n        android:fontFamily=\"@font/roboto_thin\"\r\n        android:hint=\"nickname\"\r\n        android:inputType=\"text\"\r\n        android:maxLines=\"1\"\r\n        android:padding=\"15dp\"\r\n        android:textColorHint=\"#000000\" />\r\n\r\n</RelativeLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/fragment_dialog_nickname.xml	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/res/layout/fragment_dialog_nickname.xml	(date 1603298820668)
--@@ -10,19 +10,41 @@
--     tools:context=".Fragments.NicknameDialogFragment"
--     android:padding="16dp">
-- 
---    <!--Nickname edit text-->
---    <EditText
---        android:id="@+id/d_n_nickname"
---        android:layout_width="325dp"
---        android:layout_height="50dp"
---        android:layout_marginTop="5dp"
---        android:background="@drawable/email_bg"
---        android:ems="10"
---        android:fontFamily="@font/roboto_thin"
---        android:hint="nickname"
---        android:inputType="text"
---        android:maxLines="1"
---        android:padding="15dp"
---        android:textColorHint="#000000" />
--+    <RelativeLayout
--+        android:layout_centerInParent="true"
--+        android:background="@drawable/login_button"
--+        android:backgroundTint="@color/chinese_silver"
--+        android:layout_height="125dp"
--+        android:layout_width="match_parent">
--+
--+        <!--Nickname edit text-->
--+        <EditText
--+            android:id="@+id/d_n_nickname"
--+            android:layout_width="300dp"
--+            android:layout_height="50dp"
--+            android:layout_centerInParent="true"
--+            android:layout_alignParentTop="true"
--+            android:layout_marginTop="5dp"
--+            android:background="@drawable/email_bg"
--+            android:ems="10"
--+            android:fontFamily="@font/roboto_thin"
--+            android:hint="nickname"
--+            android:inputType="text"
--+            android:maxLines="1"
--+            android:padding="15dp"
--+            android:textColorHint="#000000"/>
-- 
--+        <Button
--+            android:id="@+id/d_n_continue"
--+            android:layout_width="150dp"
--+            android:layout_height="35dp"
--+            android:layout_below="@id/d_n_nickname"
--+            android:layout_centerInParent="true"
--+            android:layout_marginTop="25dp"
--+            android:background="@drawable/login_button"
--+            android:text="Continue"
--+            android:clickable="true"/>
--+    </RelativeLayout>
--+
--+
-- </RelativeLayout>
--\ No newline at end of file
--Index: app/src/main/res/values/styles.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><resources>\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n\r\n    <style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n    </style>\r\n\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/styles.xml	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/res/values/styles.xml	(date 1603297578727)
--@@ -12,4 +12,10 @@
--         <item name="windowNoTitle">true</item>
--     </style>
-- 
--+    <style name="MyDialogTheme" parent="Theme.AppCompat.Light.Dialog.Alert">
--+        <item
--+            name="android:background">@color/transparent
--+        </item>
--+    </style>
--+
-- </resources>
--\ No newline at end of file
--Index: app/src/main/java/com/example/pabs/Models/User.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs.Models;\r\n\r\n/**\r\n * User from database\r\n */\r\n\r\npublic class User {\r\n    private String token;\r\n    private String e_mail;\r\n    private String nickname;\r\n    private String password;\r\n    private String user_name;\r\n    private String online;\r\n\r\n    public User(){\r\n    }\r\n\r\n    public User(String token, String e_mail, String nickname, String password, String user_name, String online) {\r\n        this.token = token;\r\n        this.e_mail = e_mail;\r\n        this.nickname = nickname;\r\n        this.password = password;\r\n        this.user_name = user_name;\r\n        this.online = online;\r\n    }\r\n\r\n    public String getOnline() {\r\n        return online;\r\n    }\r\n\r\n    public void setOnline(String online) {\r\n        this.online = online;\r\n    }\r\n\r\n    public String getToken() {\r\n        return token;\r\n    }\r\n\r\n    public void setToken(String token) {\r\n        this.token = token;\r\n    }\r\n\r\n    public String getE_mail() {\r\n        return e_mail;\r\n    }\r\n\r\n    public void setE_mail(String e_mail) {\r\n        this.e_mail = e_mail;\r\n    }\r\n\r\n    public String getNickname() {\r\n        return nickname;\r\n    }\r\n\r\n    public void setNickname(String nickname) {\r\n        this.nickname = nickname;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getUser_name() {\r\n        return user_name;\r\n    }\r\n\r\n    public void setUser_name(String user_name) {\r\n        this.user_name = user_name;\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/Models/User.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/java/com/example/pabs/Models/User.java	(date 1603302905387)
--@@ -8,18 +8,16 @@
--     private String token;
--     private String e_mail;
--     private String nickname;
---    private String password;
--     private String user_name;
--     private String online;
-- 
--     public User(){
--     }
-- 
---    public User(String token, String e_mail, String nickname, String password, String user_name, String online) {
--+    public User(String token, String e_mail, String nickname, String user_name, String online) {
--         this.token = token;
--         this.e_mail = e_mail;
--         this.nickname = nickname;
---        this.password = password;
--         this.user_name = user_name;
--         this.online = online;
--     }
--@@ -56,14 +54,6 @@
--         this.nickname = nickname;
--     }
-- 
---    public String getPassword() {
---        return password;
---    }
---
---    public void setPassword(String password) {
---        this.password = password;
---    }
---
--     public String getUser_name() {
--         return user_name;
--     }
--Index: app/src/main/java/com/example/pabs/LoginActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.pabs.Fragments.NicknameDialogFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\n/**\r\n * Handles login for users\r\n */\r\n\r\npublic class LoginActivity extends AppCompatActivity implements NicknameDialogFragment.NicknameDialogListener {\r\n\r\n    //DEBUG\r\n    private static final String TAG = \"LoginActivity\";\r\n\r\n    //UI\r\n    private EditText email_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n    private FirebaseAuth mAuth = null;\r\n    private FirebaseUser user = null;\r\n    private String token = null;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        email_et = findViewById(R.id.l_email);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openForgotPasswordFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //dialog on loading\r\n                mDialog = new ProgressDialog(LoginActivity.this);\r\n\r\n                mDialog.setMessage(\"Please wait...\");\r\n                mDialog.setCancelable(false);\r\n                mDialog.show();\r\n\r\n\r\n                login_btn.setClickable(false);\r\n                //check internet connection\r\n                if(isInternetConnectionActivated()){\r\n                    //internet is active\r\n                    login();\r\n                }\r\n                else{\r\n                    //internet is not active\r\n                    new AlertDialog.Builder(LoginActivity.this)\r\n                            .setTitle(\"No internet connection!\")\r\n                            .setMessage(\"Please enable your internet to login!\")\r\n                            // A null listener allows the button to dismiss the dialog and take no further action.\r\n                            .setPositiveButton(\"Okay\", null)\r\n                            .setIcon(android.R.drawable.ic_dialog_alert)\r\n                            .show();\r\n                    login_btn.setClickable(true);\r\n                    mDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    /**\r\n     * Check internet connection\r\n     */\r\n    private boolean isInternetConnectionActivated() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            return true;\r\n        }\r\n        else{\r\n            //we are not connected to a network\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set token to avoid losing it\r\n     */\r\n    private void setToken(String s){\r\n        this.token = s;\r\n    }\r\n\r\n    /**\r\n     * Login\r\n     */\r\n    private void login(){\r\n\r\n        // check if fields are empty\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {\r\n\r\n            //get information from the edit text fields\r\n            final String email = email_et.getText().toString();\r\n            final String password = password_et.getText().toString();\r\n\r\n            //get token for user\r\n            FirebaseMessaging.getInstance().getToken()\r\n                    .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<String> task) {\r\n                            if (!task.isSuccessful()) {\r\n                                Log.w(TAG, \"Fetching FCM registration token failed\", task.getException());\r\n                                return;\r\n                            }\r\n\r\n                            // Get new FCM registration token\r\n                            token = task.getResult();\r\n                            //we have to use a setter else we lose the information inside onComplete\r\n                            setToken(token);\r\n                        }\r\n                    });\r\n\r\n            //Sign in using auth(email, pass)\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                // Sign in success\r\n                                user = mAuth.getCurrentUser();\r\n\r\n                                //Verify if user has nickname\r\n                                reference.child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        //check if user is online\r\n                                        if(snapshot.child(\"online\").getValue().equals(\"false\")){\r\n                                            //check if use has a nickname\r\n                                            if (snapshot.child(\"nickname\").getValue().equals(\"\")) {\r\n                                                //set nickname\r\n                                                openNicknameDialogFragment();\r\n                                                //settings\r\n                                                login_btn.setClickable(true);\r\n                                                mDialog.dismiss();\r\n                                            } else {\r\n                                                //proceed to next activity\r\n                                                loginSuccessful();\r\n                                                //settings\r\n                                                mDialog.dismiss();\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            Log.d(TAG, \"User is already online!\");\r\n                                            Toast.makeText(LoginActivity.this, \"User is already online!\", Toast.LENGTH_SHORT).show();\r\n                                            //settings\r\n                                            login_btn.setClickable(true);\r\n                                            mDialog.dismiss();\r\n                                        }\r\n                                    }\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database error\r\n                                        login_btn.setClickable(true);\r\n                                        //settings\r\n                                        mDialog.dismiss();\r\n                                        Log.w(TAG, \"On cancelled: \" + error);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                // If sign in fails, display a message to the user.\r\n                                Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                //settings\r\n                                login_btn.setClickable(true);\r\n                                mDialog.dismiss();\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n        {\r\n            // If sign in fails, display a message to the user.\r\n            Toast.makeText(LoginActivity.this, \"Wrong E-mail or Password!\", Toast.LENGTH_SHORT).show();\r\n            //settings\r\n            login_btn.setClickable(true);\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * apply nickname on dialog pressed OK\r\n     */\r\n    @Override\r\n    public void applyNickname(String nickname) {\r\n        reference.child(user.getUid()).child(\"nickname\").setValue(nickname);\r\n        loginSuccessful();\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void loginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n        //settings for user\r\n        reference.child(user.getUid()).child(\"online\").setValue(\"true\");\r\n        reference.child(user.getUid()).child(\"token\").setValue(token);\r\n        openEventActivity();\r\n    }\r\n\r\n    /**\r\n     * open nickname dialog fragment\r\n     */\r\n    private void openNicknameDialogFragment(){\r\n        NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();\r\n        nicknameDialogFragment.show(getSupportFragmentManager(),\"nicknameDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    private void openForgotPasswordFragment(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    private void openRegisterActivity(){\r\n        Intent intent = new Intent(this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open event activity\r\n     */\r\n    protected void openEventActivity() {\r\n        Intent intent = new Intent(this, EventActivity.class);\r\n        intent.putExtra(\"USER\", user.getUid());\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        login_btn.setClickable(true);\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/LoginActivity.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1603302960527)
--@@ -264,6 +264,7 @@
--         //settings for user
--         reference.child(user.getUid()).child("online").setValue("true");
--         reference.child(user.getUid()).child("token").setValue(token);
--+
--         openEventActivity();
--     }
-- 
--Index: app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs.Fragments;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatDialogFragment;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\n\r\nimport com.example.pabs.R;\r\n\r\n/**\r\n * Sets Nickname for new Users\r\n */\r\n\r\npublic class NicknameDialogFragment extends AppCompatDialogFragment {\r\n\r\n    //edittext\r\n    private EditText nickname_et = null;\r\n    private NicknameDialogListener nicknameDialogListener;\r\n\r\n    /**\r\n     * When the dialog is created\r\n     */\r\n    @Override\r\n    public Dialog onCreateDialog(Bundle savedInstanceState){\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n\r\n        //setting view\r\n        LayoutInflater inflater = getActivity().getLayoutInflater();\r\n        View view = inflater.inflate(R.layout.fragment_dialog_nickname, null);\r\n\r\n        //building the custom dialog fragment\r\n        builder.setView(view)\r\n                .setTitle(\"Nickname\")\r\n                .setNegativeButton(\"cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                    }\r\n                })\r\n                .setPositiveButton(\"ok\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        String nickname = nickname_et.getText().toString();\r\n                        //calling interface to set the nickname\r\n                        nicknameDialogListener.applyNickname(nickname);\r\n                    }\r\n                });\r\n\r\n        nickname_et = view.findViewById(R.id.d_n_nickname);\r\n\r\n        return builder.create();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when the NicknameDialogListener is implemented in another class\r\n     */\r\n    @Override\r\n    public void onAttach(@NonNull Context context) {\r\n        super.onAttach(context);\r\n\r\n        try {\r\n            nicknameDialogListener = (NicknameDialogListener) context;\r\n        } catch (ClassCastException e) {\r\n            throw new ClassCastException(context.toString() +\r\n                \"Must implement NicknameDialogListener\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * interface to set the nickname\r\n     */\r\n    public interface NicknameDialogListener{\r\n        void applyNickname(String nickname);\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java	(revision 050786dc05507064724b2e7e525650abc5745cfd)
--+++ app/src/main/java/com/example/pabs/Fragments/NicknameDialogFragment.java	(date 1603299759579)
--@@ -4,16 +4,21 @@
-- import android.app.Dialog;
-- import android.content.Context;
-- import android.content.DialogInterface;
--+import android.graphics.Color;
--+import android.graphics.drawable.ColorDrawable;
-- import android.os.Bundle;
-- 
-- import androidx.annotation.NonNull;
-- import androidx.appcompat.app.AppCompatDialogFragment;
-- import androidx.fragment.app.Fragment;
-- 
--+import android.text.TextUtils;
-- import android.view.LayoutInflater;
-- import android.view.View;
-- import android.view.ViewGroup;
--+import android.widget.Button;
-- import android.widget.EditText;
--+import android.widget.Toast;
-- 
-- import com.example.pabs.R;
-- 
--@@ -26,38 +31,49 @@
--     //edittext
--     private EditText nickname_et = null;
--     private NicknameDialogListener nicknameDialogListener;
--+    //
--+    private Dialog dialog;
--+    //
--+    private Button continue_bt;
-- 
--     /**
--      * When the dialog is created
--      */
--     @Override
--     public Dialog onCreateDialog(Bundle savedInstanceState){
---        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
---
--         //setting view
--         LayoutInflater inflater = getActivity().getLayoutInflater();
--         View view = inflater.inflate(R.layout.fragment_dialog_nickname, null);
-- 
---        //building the custom dialog fragment
---        builder.setView(view)
---                .setTitle("Nickname")
---                .setNegativeButton("cancel", new DialogInterface.OnClickListener() {
---                    @Override
---                    public void onClick(DialogInterface dialogInterface, int i) {
---                    }
---                })
---                .setPositiveButton("ok", new DialogInterface.OnClickListener() {
---                    @Override
---                    public void onClick(DialogInterface dialogInterface, int i) {
---                        String nickname = nickname_et.getText().toString();
---                        //calling interface to set the nickname
---                        nicknameDialogListener.applyNickname(nickname);
---                    }
---                });
--+        dialog = new Dialog(getActivity(), R.style.MyDialogTheme);
--+
--+        nickname_et = view.findViewById(R.id.d_n_nickname);
--+
--+        continue_bt = (Button) view.findViewById(R.id.d_n_continue);
--+
--+        continue_bt.setOnClickListener(new View.OnClickListener() {
--+            @Override
--+            public void onClick(View view) {
--+                if (!TextUtils.isEmpty(nickname_et.getText().toString())) {
--+                    String nickname = nickname_et.getText().toString();
--+                    //calling interface to set the nickname
--+                    nicknameDialogListener.applyNickname(nickname);
--+                    dialog.dismiss();
--+                }
--+                else{
--+                    Toast.makeText(getActivity(), "Please type in you nickname!", Toast.LENGTH_SHORT).show();
--+                }
--+            }
--+        });
-- 
---        nickname_et = view.findViewById(R.id.d_n_nickname);
--+        dialog.setContentView(view);
--+
--+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
--+
-- 
---        return builder.create();
--+
--+
--+        return dialog;
--     }
-- 
-- 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM_[Default_Changelist]" date="1602936619608" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/17/2020 3:10 PM [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,355 +0,0 @@
--Index: .idea/codeStyles/Project.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><component name=\"ProjectCodeStyleConfiguration\">\r\n  <code_scheme name=\"Project\" version=\"173\">\r\n    <JetCodeStyleSettings>\r\n      <option name=\"PACKAGES_TO_USE_STAR_IMPORTS\">\r\n        <value>\r\n          <package name=\"java.util\" alias=\"false\" withSubpackages=\"false\" />\r\n          <package name=\"kotlinx.android.synthetic\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"io.ktor\" alias=\"false\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"PACKAGES_IMPORT_LAYOUT\">\r\n        <value>\r\n          <package name=\"\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"java\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"javax\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"kotlin\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"\" alias=\"true\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n    </JetCodeStyleSettings>\r\n    <codeStyleSettings language=\"XML\">\r\n      <indentOptions>\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"4\" />\r\n      </indentOptions>\r\n      <arrangement>\r\n        <rules>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:android</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:id</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>style</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>ANDROID_ATTRIBUTE_ORDER</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>.*</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n        </rules>\r\n      </arrangement>\r\n    </codeStyleSettings>\r\n  </code_scheme>\r\n</component>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/codeStyles/Project.xml	(revision 016778f008088c52856d15ad5d8a385bfd4f4286)
--+++ .idea/codeStyles/Project.xml	(date 1602705814923)
--@@ -3,18 +3,9 @@
--     <JetCodeStyleSettings>
--       <option name="PACKAGES_TO_USE_STAR_IMPORTS">
--         <value>
---          <package name="java.util" alias="false" withSubpackages="false" />
---          <package name="kotlinx.android.synthetic" alias="false" withSubpackages="true" />
---          <package name="io.ktor" alias="false" withSubpackages="true" />
---        </value>
---      </option>
---      <option name="PACKAGES_IMPORT_LAYOUT">
---        <value>
---          <package name="" alias="false" withSubpackages="true" />
---          <package name="java" alias="false" withSubpackages="true" />
---          <package name="javax" alias="false" withSubpackages="true" />
---          <package name="kotlin" alias="false" withSubpackages="true" />
---          <package name="" alias="true" withSubpackages="true" />
--+          <package name="java.util" withSubpackages="false" static="false" />
--+          <package name="kotlinx.android.synthetic" withSubpackages="true" static="false" />
--+          <package name="io.ktor" withSubpackages="true" static="false" />
--         </value>
--       </option>
--     </JetCodeStyleSettings>
--Index: app/src/main/res/layout/activity_register.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_register.xml	(date 1602781585443)
--+++ app/src/main/res/layout/activity_register.xml	(date 1602781585443)
--@@ -0,0 +1,190 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="match_parent"
--+    android:layout_height="match_parent"
--+    android:animateLayoutChanges="true"
--+    android:visibility="visible"
--+    tools:context=".LoginActivity">
--+
--+    <!--Screen-->
--+    <RelativeLayout
--+        android:layout_width="wrap_content"
--+        android:layout_height="wrap_content"
--+        android:layout_centerInParent="true"
--+        android:layout_marginLeft="40dp"
--+        android:layout_marginRight="40dp">
--+
--+        <!--Text+Username+Password+Button-->
--+        <RelativeLayout
--+            android:id="@+id/r_rellay1"
--+            android:layout_width="wrap_content"
--+            android:layout_height="wrap_content"
--+            android:visibility="visible">
--+
--+            <!--Name+Password+Email-->
--+            <LinearLayout
--+                android:id="@+id/r_linlay1"
--+                android:layout_width="match_parent"
--+                android:layout_height="wrap_content"
--+                android:layout_marginTop="20dp"
--+                android:orientation="vertical">
--+
--+                <!--E-mail-->
--+                <LinearLayout
--+                    android:layout_width="match_parent"
--+                    android:layout_height="wrap_content"
--+                    android:orientation="vertical">
--+
--+                    <TextView
--+                        android:layout_width="wrap_content"
--+                        android:layout_height="wrap_content"
--+                        android:fontFamily="sans-serif-light"
--+                        android:text="E-mail adress"
--+                        android:textAllCaps="false"
--+                        android:textColor="@color/grey"
--+                        android:textSize="15sp"
--+                        android:textStyle="bold" />
--+
--+                    <EditText
--+                        android:id="@+id/r_email"
--+                        android:maxLines="1"
--+                        android:hint="@string/email"
--+                        android:imeOptions="actionNext"
--+                        android:nextFocusDown="@+id/l_login_button"
--+                        android:inputType="text"
--+                        android:layout_width="match_parent"
--+                        android:layout_height="40dp"
--+                        android:layout_marginTop="5dp"
--+                        android:fontFamily="sans-serif-light"
--+                        android:paddingLeft="10dp"
--+                        android:paddingRight="15dp"
--+                        android:textSize="15sp"
--+                        android:singleLine="true"/>
--+                </LinearLayout>
--+
--+                <!--Username-->
--+                <LinearLayout
--+                    android:layout_width="match_parent"
--+                    android:layout_height="wrap_content"
--+                    android:layout_marginTop="20dp"
--+                    android:orientation="vertical">
--+
--+                    <TextView
--+                        android:layout_width="wrap_content"
--+                        android:layout_height="wrap_content"
--+                        android:fontFamily="sans-serif-light"
--+                        android:text="Username"
--+                        android:textAllCaps="false"
--+                        android:textColor="@color/grey"
--+                        android:textSize="15sp"
--+                        android:textStyle="bold" />
--+
--+                    <EditText
--+                        android:id="@+id/r_username"
--+                        android:maxLines="1"
--+                        android:imeOptions="actionNext"
--+                        android:hint="@string/username"
--+                        android:nextFocusDown="@+id/l_login_button"
--+                        android:inputType="text"
--+                        android:layout_width="match_parent"
--+                        android:layout_height="40dp"
--+                        android:layout_marginTop="5dp"
--+                        android:fontFamily="sans-serif-light"
--+                        android:paddingLeft="10dp"
--+                        android:paddingRight="15dp"
--+                        android:textSize="15sp"
--+                        android:singleLine="true"/>
--+                </LinearLayout>
--+
--+                <!--Password-->
--+                <LinearLayout
--+                    android:layout_width="match_parent"
--+                    android:layout_height="wrap_content"
--+                    android:layout_marginTop="20dp"
--+                    android:orientation="vertical">
--+
--+                    <TextView
--+                        android:layout_width="wrap_content"
--+                        android:layout_height="wrap_content"
--+                        android:fontFamily="sans-serif-light"
--+                        android:text="Password"
--+                        android:textAllCaps="false"
--+                        android:textColor="@color/grey"
--+                        android:textSize="15sp"
--+                        android:textStyle="bold" />
--+
--+                    <EditText
--+                        android:id="@+id/r_password"
--+                        android:maxLines="1"
--+                        android:imeOptions="actionNext"
--+                        android:text="Password"
--+                        android:nextFocusDown="@+id/r_signup_button"
--+                        android:layout_width="match_parent"
--+                        android:layout_height="40dp"
--+                        android:layout_marginTop="5dp"
--+                        android:fontFamily="sans-serif-light"
--+                        android:inputType="textPassword"
--+                        android:paddingLeft="15dp"
--+                        android:paddingRight="15dp"
--+                        android:textSize="15sp"
--+                        android:singleLine="true"/>
--+
--+                </LinearLayout>
--+            </LinearLayout>
--+
--+            <!--Forgot password button
--+            <Button
--+                android:id="@+id/l_forgot_password"
--+                android:layout_width="wrap_content"
--+                android:layout_height="20dp"
--+
--+                android:layout_marginTop="30dp"
--+                android:layout_centerHorizontal="true"
--+                android:fontFamily="sans-serif-light"
--+                android:paddingLeft="20dp"
--+                android:paddingRight="20dp"
--+                android:background="@color/transparent"
--+                android:text="Did you forget your password?"
--+                android:textAllCaps="false"
--+                android:textColor="@color/black"
--+                android:textSize="16sp" /> -->
--+
--+            <!--Sign Up button-->
--+            <Button
--+                android:id="@+id/r_signup_button"
--+                android:layout_width="wrap_content"
--+                android:layout_height="40dp"
--+                android:layout_below="@id/r_linlay1"
--+                android:layout_centerHorizontal="true"
--+                android:layout_marginTop="20dp"
--+                android:fontFamily="sans-serif-medium"
--+                android:paddingLeft="70dp"
--+                android:paddingRight="70dp"
--+                android:text="Sign Up"
--+                android:textAllCaps="false"
--+                android:background="@color/black"
--+                android:textColor="@color/white"
--+                android:textSize="16sp" />
--+
--+            <!--You already have an account-->
--+            <Button
--+                android:id="@+id/r_existing_account"
--+                android:layout_width="wrap_content"
--+                android:layout_height="20dp"
--+                android:layout_below="@id/r_signup_button"
--+                android:layout_marginTop="30dp"
--+                android:layout_centerHorizontal="true"
--+                android:fontFamily="sans-serif-light"
--+                android:paddingLeft="20dp"
--+                android:paddingRight="20dp"
--+                android:background="@color/transparent"
--+                android:text="You already have an account?"
--+                android:textAllCaps="false"
--+                android:textColor="@color/black"
--+                android:textSize="16sp" />
--+
--+        </RelativeLayout>
--+    </RelativeLayout>
--+</RelativeLayout>
--\ No newline at end of file
--Index: app/src/main/AndroidManifest.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.pabs\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\">\r\n        <activity android:name=\".LoginActivity\">/\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/AndroidManifest.xml	(revision 016778f008088c52856d15ad5d8a385bfd4f4286)
--+++ app/src/main/AndroidManifest.xml	(date 1602870657382)
--@@ -9,7 +9,9 @@
--         android:roundIcon="@mipmap/ic_launcher_round"
--         android:supportsRtl="true"
--         android:theme="@style/AppTheme.NoActionBar">
---        <activity android:name=".LoginActivity">/
--+        <activity android:name=".RegisterActivity"></activity>
--+        <activity android:name=".LoginActivity">
--+            /
--             <intent-filter>
--                 <action android:name="android.intent.action.MAIN" />
-- 
--Index: app/src/main/res/values/strings.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><resources>\r\n    <string name=\"app_name\">PABS</string>\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/strings.xml	(revision 016778f008088c52856d15ad5d8a385bfd4f4286)
--+++ app/src/main/res/values/strings.xml	(date 1602781101185)
--@@ -1,3 +1,5 @@
-- <resources>
--     <string name="app_name">PABS</string>
--+    <string name="email">name@example.com</string>
--+    <string name="username">John</string>
-- </resources>
--\ No newline at end of file
--Index: app/src/main/java/com/example/pabs/LoginActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Models.User;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.database.ChildEventListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    private EditText name_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n\r\n    //firebase\r\n    DatabaseReference reference;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        name_et = findViewById(R.id.l_username);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openForgotPasswordFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //open NextActivity\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openNextActivity();\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                final String name = name_et.getText().toString();\r\n                final String password = password_et.getText().toString();\r\n\r\n                //reference to all the ID's of USER\r\n                reference.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        boolean login_successful = false;\r\n                        //iterate through ID elements of USER\r\n                        for (DataSnapshot child : snapshot.getChildren()) {\r\n                            //examine if user credentials are correct\r\n                            if((child.child(\"user_name\").getValue().toString().equals(name)) && (child.child(\"password\").getValue().toString().equals(password))){\r\n                                login_successful = true;\r\n                            }\r\n                        }\r\n\r\n                        if(login_successful){\r\n                            //if login was successful\r\n                            LoginSuccessful();\r\n                        }\r\n                        else\r\n                        {\r\n                            //if login failed\r\n                            Toast.makeText(LoginActivity.this, \"Login failed!\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void LoginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n        openNextActivity();\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    protected void openForgotPasswordFragment(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    protected void openRegisterActivity(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open next activity\r\n     */\r\n    protected void openNextActivity(){\r\n\r\n    }\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/LoginActivity.java	(revision 016778f008088c52856d15ad5d8a385bfd4f4286)
--+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1602874556937)
--@@ -4,6 +4,7 @@
-- import androidx.annotation.Nullable;
-- import androidx.appcompat.app.AppCompatActivity;
-- 
--+import android.content.Intent;
-- import android.os.Bundle;
-- import android.util.Log;
-- import android.view.View;
--@@ -131,7 +132,9 @@
--      * open register activity
--      */
--     protected void openRegisterActivity(){
---
--+        Intent intent = new Intent(this, RegisterActivity.class);
--+        startActivity(intent);
--+        finish();
--     }
-- 
--     /**
--Index: app/src/main/java/com/example/pabs/RegisterActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/RegisterActivity.java	(date 1602875676576)
--+++ app/src/main/java/com/example/pabs/RegisterActivity.java	(date 1602875676576)
--@@ -0,0 +1,52 @@
--+package com.example.pabs;
--+
--+import androidx.appcompat.app.AppCompatActivity;
--+
--+import android.os.Bundle;
--+import android.view.View;
--+import android.widget.Button;
--+import android.widget.EditText;
--+
--+import com.google.firebase.database.DatabaseReference;
--+import com.google.firebase.database.FirebaseDatabase;
--+
--+import static com.example.pabs.R.layout.activity_register;
--+
--+public class RegisterActivity extends AppCompatActivity {
--+
--+    //UI
--+    private EditText name_et = null, password_et = null, email_et = null;
--+    private Button register_btn = null;
--+
--+    //firebase
--+    DatabaseReference reference;
--+
--+    @Override
--+    protected void onCreate(Bundle savedInstanceState) {
--+        super.onCreate(savedInstanceState);
--+        setContentView(activity_register);
--+
--+            //edittext
--+            name_et = findViewById(R.id.r_username);
--+            password_et = findViewById(R.id.r_password);
--+            email_et = findViewById(R.id.r_email);
--+
--+            //button
--+            register_btn = findViewById(R.id.r_signup_button);
--+
--+            //open NextActivity
--+            register_btn.setOnClickListener(new View.OnClickListener() {
--+                @Override
--+                public void onClick(View view) {
--+                    openNextActivity();
--+                }
--+            });
--+
--+            //firebase database -> get reference to USER table
--+            reference = FirebaseDatabase.getInstance().getReference().child("USER");
--+    }
--+
--+    private void openNextActivity(){
--+
--+    }
--+}
--\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_20_2020_3_07_PM_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,229 +0,0 @@
--Index: app/src/main/java/com/example/pabs/LoginActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.pabs.Fragments.NicknameDialogFragment;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\npublic class LoginActivity extends AppCompatActivity implements NicknameDialogFragment.NicknameDialogListener {\r\n\r\n    //DEBUG\r\n    private static final String TAG = \"LoginActivity\";\r\n\r\n    //UI\r\n    private EditText email_et = null, password_et = null;\r\n    private Button forgot_password_btn = null, login_btn = null, register_btn = null;\r\n    private ProgressDialog mDialog = null;\r\n\r\n    //firebase\r\n    private DatabaseReference reference = null;\r\n    private FirebaseAuth mAuth = null;\r\n    private FirebaseUser user = null;\r\n    private String token = null;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        //edittext\r\n        email_et = findViewById(R.id.l_email);\r\n        password_et = findViewById(R.id.l_password);\r\n\r\n        //button\r\n        forgot_password_btn = findViewById(R.id.l_forgot_password);\r\n        login_btn = findViewById(R.id.l_login_button);\r\n        register_btn = findViewById(R.id.l_register_button);\r\n\r\n        //open forgotPasswordFragment\r\n        forgot_password_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openForgotPasswordFragment();\r\n            }\r\n        });\r\n\r\n        //open RegisterActivity\r\n        register_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openRegisterActivity();\r\n            }\r\n        });\r\n\r\n        //login click listener\r\n        login_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //dialog on loading\r\n                mDialog = new ProgressDialog(LoginActivity.this);\r\n\r\n                mDialog.setMessage(\"Please wait...\");\r\n                mDialog.show();\r\n\r\n                login_btn.setClickable(false);\r\n                //check internet connection\r\n                if(isInternetConnectionActivated()){\r\n                    //internet is active\r\n                    login();\r\n                }\r\n                else{\r\n                    //internet is not active\r\n                    new AlertDialog.Builder(LoginActivity.this)\r\n                            .setTitle(\"No internet connection!\")\r\n                            .setMessage(\"Please enable your internet to login!\")\r\n                            // A null listener allows the button to dismiss the dialog and take no further action.\r\n                            .setPositiveButton(\"Okay\", null)\r\n                            .setIcon(android.R.drawable.ic_dialog_alert)\r\n                            .show();\r\n                    login_btn.setClickable(true);\r\n                    mDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n    }\r\n\r\n    /**\r\n     * Check internet connection\r\n     */\r\n    private boolean isInternetConnectionActivated() {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        if (connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() == NetworkInfo.State.CONNECTED ||\r\n                connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() == NetworkInfo.State.CONNECTED) {\r\n            //we are connected to a network\r\n            return true;\r\n        }\r\n        else{\r\n            //we are not connected to a network\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set token to avoid losing it\r\n     */\r\n    private void setToken(String s){\r\n        this.token = s;\r\n    }\r\n\r\n    /**\r\n     * Login\r\n     */\r\n    private void login(){\r\n\r\n        // check if fields are empty\r\n        if (!TextUtils.isEmpty(email_et.getText().toString()) && !TextUtils.isEmpty(password_et.getText().toString()) ) {\r\n\r\n            //get information from the edit text fields\r\n            final String email = email_et.getText().toString();\r\n            final String password = password_et.getText().toString();\r\n\r\n            //get token for user\r\n            FirebaseMessaging.getInstance().getToken()\r\n                    .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<String> task) {\r\n                            if (!task.isSuccessful()) {\r\n                                Log.w(TAG, \"Fetching FCM registration token failed\", task.getException());\r\n                                return;\r\n                            }\r\n\r\n                            // Get new FCM registration token\r\n                            token = task.getResult();\r\n                            //we have to use a setter else we lose the information inside onComplete\r\n                            setToken(token);\r\n                        }\r\n                    });\r\n\r\n            //Sign in using auth(email, pass)\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if (task.isSuccessful()) {\r\n                                // Sign in success\r\n                                user = mAuth.getCurrentUser();\r\n\r\n                                //Verify if user has nickname\r\n                                reference.child(user.getUid()).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        //check if user is online\r\n                                        if(snapshot.child(\"online\").getValue().equals(\"false\")){\r\n                                            //check if use has a nickname\r\n                                            if (snapshot.child(\"nickname\").getValue().equals(\"\")) {\r\n                                                //set nickname\r\n                                                openNicknameDialogFragment();\r\n                                                login_btn.setClickable(true);\r\n                                                mDialog.dismiss();\r\n                                            } else {\r\n                                                //proceed to next activity\r\n                                                loginSuccessful();\r\n                                                mDialog.dismiss();\r\n                                            }\r\n                                        }\r\n                                        else{\r\n                                            Log.d(TAG, \"User is already online!\");\r\n                                            Toast.makeText(LoginActivity.this, \"User is already online!\", Toast.LENGTH_SHORT).show();\r\n                                            login_btn.setClickable(true);\r\n                                            mDialog.dismiss();\r\n                                        }\r\n                                    }\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n                                        //database error\r\n                                        login_btn.setClickable(true);\r\n                                        mDialog.dismiss();\r\n                                        Log.w(TAG, \"On cancelled: \" + error);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else\r\n                            {\r\n                                // If sign in fails, display a message to the user.\r\n                                Toast.makeText(LoginActivity.this, \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                                login_btn.setClickable(true);\r\n                                mDialog.dismiss();\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else\r\n        {\r\n            // If sign in fails, display a message to the user.\r\n            Toast.makeText(LoginActivity.this, \"Wrong E-mail or Password!\", Toast.LENGTH_SHORT).show();\r\n            login_btn.setClickable(true);\r\n            mDialog.dismiss();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * apply nickname on dialog pressed OK\r\n     */\r\n    @Override\r\n    public void applyNickname(String nickname) {\r\n        reference.child(user.getUid()).child(\"nickname\").setValue(nickname);\r\n        loginSuccessful();\r\n    }\r\n\r\n    /**\r\n     * login successful\r\n     */\r\n    private void loginSuccessful(){\r\n        Toast.makeText(LoginActivity.this, \"Login Successful!\", Toast.LENGTH_SHORT).show();\r\n\r\n        //settings for user\r\n        reference.child(user.getUid()).child(\"online\").setValue(\"true\");\r\n        reference.child(user.getUid()).child(\"token\").setValue(token);\r\n        openNextActivity();\r\n    }\r\n\r\n    /**\r\n     * open nickname dialog fragment\r\n     */\r\n    private void openNicknameDialogFragment(){\r\n        NicknameDialogFragment nicknameDialogFragment = new NicknameDialogFragment();\r\n        nicknameDialogFragment.show(getSupportFragmentManager(),\"nicknameDialogFragment\");\r\n    }\r\n\r\n    /**\r\n     * open forgot password fragment\r\n     */\r\n    private void openForgotPasswordFragment(){\r\n\r\n    }\r\n\r\n    /**\r\n     * open register activity\r\n     */\r\n    private void openRegisterActivity(){\r\n        Intent intent = new Intent(this, RegisterActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * open next activity\r\n     */\r\n    protected void openNextActivity() {\r\n        Intent intent = new Intent(this, MainActivity.class);\r\n        intent.putExtra(\"USER\", user.getUid());\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        login_btn.setClickable(true);\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/LoginActivity.java	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
--+++ app/src/main/java/com/example/pabs/LoginActivity.java	(date 1603188170364)
--@@ -188,17 +188,20 @@
--                                             if (snapshot.child("nickname").getValue().equals("")) {
--                                                 //set nickname
--                                                 openNicknameDialogFragment();
--+                                                //settings
--                                                 login_btn.setClickable(true);
--                                                 mDialog.dismiss();
--                                             } else {
--                                                 //proceed to next activity
--                                                 loginSuccessful();
--+                                                //settings
--                                                 mDialog.dismiss();
--                                             }
--                                         }
--                                         else{
--                                             Log.d(TAG, "User is already online!");
--                                             Toast.makeText(LoginActivity.this, "User is already online!", Toast.LENGTH_SHORT).show();
--+                                            //settings
--                                             login_btn.setClickable(true);
--                                             mDialog.dismiss();
--                                         }
--@@ -207,6 +210,7 @@
--                                     public void onCancelled(@NonNull DatabaseError error) {
--                                         //database error
--                                         login_btn.setClickable(true);
--+                                        //settings
--                                         mDialog.dismiss();
--                                         Log.w(TAG, "On cancelled: " + error);
--                                     }
--@@ -216,6 +220,7 @@
--                             {
--                                 // If sign in fails, display a message to the user.
--                                 Toast.makeText(LoginActivity.this, "Authentication failed.", Toast.LENGTH_SHORT).show();
--+                                //settings
--                                 login_btn.setClickable(true);
--                                 mDialog.dismiss();
--                             }
--@@ -226,6 +231,7 @@
--         {
--             // If sign in fails, display a message to the user.
--             Toast.makeText(LoginActivity.this, "Wrong E-mail or Password!", Toast.LENGTH_SHORT).show();
--+            //settings
--             login_btn.setClickable(true);
--             mDialog.dismiss();
--         }
--Index: app/src/main/AndroidManifest.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.pabs\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    \r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\">\r\n        <activity android:name=\".MainActivity\"></activity>\r\n\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity android:name=\".LoginActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <service\r\n            android:name=\".fcm.MyFirebaseMessagingService\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n    </application>\r\n\r\n</manifest>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/AndroidManifest.xml	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
--+++ app/src/main/AndroidManifest.xml	(date 1603188539739)
--@@ -4,7 +4,7 @@
-- 
--     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
--     <uses-permission android:name="android.permission.INTERNET" />
---    
--+
--     <application
--         android:allowBackup="true"
--         android:icon="@mipmap/ic_launcher"
--@@ -12,23 +12,22 @@
--         android:roundIcon="@mipmap/ic_launcher_round"
--         android:supportsRtl="true"
--         android:theme="@style/AppTheme.NoActionBar">
---        <activity android:name=".MainActivity"></activity>
---
--+        <activity android:name=".EventActivity"></activity>
--+        <activity android:name=".MainActivity" />
--         <activity android:name=".RegisterActivity" />
--         <activity android:name=".LoginActivity">
--             <intent-filter>
--                 <action android:name="android.intent.action.MAIN" />
--+
--                 <category android:name="android.intent.category.LAUNCHER" />
--             </intent-filter>
--         </activity>
-- 
---        <service
---            android:name=".fcm.MyFirebaseMessagingService">
--+        <service android:name=".fcm.MyFirebaseMessagingService">
--             <intent-filter>
--                 <action android:name="com.google.firebase.MESSAGING_EVENT" />
--             </intent-filter>
--         </service>
---
--     </application>
-- 
-- </manifest>
--\ No newline at end of file
--Index: app/src/main/res/values/colors.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#6200EE</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"black\">#000000</color>\r\n    <color name=\"grey\">#A9A9A9</color>\r\n    <color name=\"transparent\"> #00000000</color>\r\n\r\n</resources>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/values/colors.xml	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
--+++ app/src/main/res/values/colors.xml	(date 1603191509075)
--@@ -7,5 +7,6 @@
--     <color name="black">#000000</color>
--     <color name="grey">#A9A9A9</color>
--     <color name="transparent"> #00000000</color>
---
--+    <color name="half_transparent"> #50676767</color>
--+    <color name="example"> #00d2ff</color>
-- </resources>
--\ No newline at end of file
--Index: app/src/main/res/layout/event_element.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/event_element.xml	(date 1603191628101)
--+++ app/src/main/res/layout/event_element.xml	(date 1603191628101)
--@@ -0,0 +1,22 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="125dp"
--+    android:layout_height="125dp">
--+
--+    <ImageView
--+        android:id="@+id/category_image"
--+        android:layout_width="match_parent"
--+        android:layout_height="match_parent"
--+        android:background="@color/example"/>
--+
--+    <TextView
--+        android:id="@+id/event_name"
--+        android:layout_width="match_parent"
--+        android:layout_height="wrap_content"
--+        android:gravity="center"
--+        android:background="@color/half_transparent"
--+        android:text="Event" />
--+
--+</RelativeLayout>
--\ No newline at end of file
--Index: app/src/main/res/layout/activity_event.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_event.xml	(date 1603188540066)
--+++ app/src/main/res/layout/activity_event.xml	(date 1603188540066)
--@@ -0,0 +1,9 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="match_parent"
--+    android:layout_height="match_parent"
--+    tools:context=".EventActivity">
--+
--+</androidx.constraintlayout.widget.ConstraintLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/example/pabs/EventActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/EventActivity.java	(date 1603188540157)
--+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1603188540157)
--@@ -0,0 +1,14 @@
--+package com.example.pabs;
--+
--+import androidx.appcompat.app.AppCompatActivity;
--+
--+import android.os.Bundle;
--+
--+public class EventActivity extends AppCompatActivity {
--+
--+    @Override
--+    protected void onCreate(Bundle savedInstanceState) {
--+        super.onCreate(savedInstanceState);
--+        setContentView(R.layout.activity_event);
--+    }
--+}
--\ No newline at end of file
--Index: app/src/main/java/com/example/pabs/MainActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.pabs;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    //UI\r\n    Button logout_btn;\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    /**\r\n     * on create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        //buttons\r\n        logout_btn = findViewById(R.id.logout);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //logout button on click listener\r\n        logout_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * on stop to remember if user is online or offline after app is closed\r\n     */\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        reference.child(uID).child(\"online\").setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * on post resume to remember if user is online or offline after app is minimized\r\n     */\r\n    @Override\r\n    protected void onPostResume() {\r\n        super.onPostResume();\r\n        reference.child(uID).child(\"online\").setValue(\"true\");\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/example/pabs/MainActivity.java	(revision 1b4c59a42637d9708b42b80bc7d38ce802c4b7b1)
--+++ app/src/main/java/com/example/pabs/MainActivity.java	(date 1603188170517)
--@@ -43,23 +43,11 @@
--                 finish();
--             }
--         });
---    }
--+        //
--+        // Write a string when this client loses connection
--+        reference.child(uID).child("online").onDisconnect().setValue("false");
-- 
---    /**
---     * on stop to remember if user is online or offline after app is closed
---     */
---    @Override
---    protected void onStop() {
---        super.onStop();
---        reference.child(uID).child("online").setValue("false");
--+        throw new RuntimeException("BUMM");
--     }
-- 
---    /**
---     * on post resume to remember if user is online or offline after app is minimized
---     */
---    @Override
---    protected void onPostResume() {
---        super.onPostResume();
---        reference.child(uID).child("online").setValue("true");
---    }
-- }
--\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__19__8_30_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,136 +0,0 @@
--Index: app/src/main/res/layout/activity_login.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:visibility=\"visible\"\r\n    tools:context=\".LoginActivity\">\r\n\r\n    <!--Screen-->\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:layout_marginLeft=\"40dp\"\r\n        android:layout_marginRight=\"40dp\">\r\n\r\n        <!--Text+Username+Password+Button-->\r\n        <RelativeLayout\r\n            android:id=\"@+id/l_rellay1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:visibility=\"visible\">\r\n\r\n            <!--Name+Password-->\r\n            <LinearLayout\r\n                android:id=\"@+id/l_linlay1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <!--Name-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:fontFamily=\"sans-serif-light\"\r\n                        android:text=\"E-mail\"\r\n                        android:textAllCaps=\"false\"\r\n                        android:textColor=\"@color/grey\"\r\n                        android:textSize=\"15sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/l_email\"\r\n                        android:maxLines=\"1\"\r\n                        android:imeOptions=\"actionUnspecified\"\r\n                        android:inputType=\"text\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:fontFamily=\"sans-serif-light\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:paddingRight=\"15dp\"\r\n                        android:textSize=\"15sp\" />\r\n                </LinearLayout>\r\n\r\n                <!--Password-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:fontFamily=\"sans-serif-light\"\r\n                        android:text=\"Password\"\r\n                        android:textAllCaps=\"false\"\r\n                        android:textColor=\"@color/grey\"\r\n                        android:textSize=\"15sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/l_password\"\r\n                        android:maxLines=\"1\"\r\n                        android:imeOptions=\"actionUnspecified\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        android:fontFamily=\"sans-serif-light\"\r\n                        android:inputType=\"textPassword\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:paddingRight=\"15dp\"\r\n                        android:textSize=\"15sp\" />\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n            <!--Forgot password button-->\r\n            <Button\r\n                android:id=\"@+id/l_forgot_password\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_below=\"@id/l_linlay1\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:fontFamily=\"sans-serif-light\"\r\n                android:paddingLeft=\"20dp\"\r\n                android:paddingRight=\"20dp\"\r\n                android:background=\"@color/transparent\"\r\n                android:text=\"Did you forget your password?\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <!--Login button-->\r\n            <Button\r\n                android:id=\"@+id/l_login_button\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_below=\"@+id/l_forgot_password\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:fontFamily=\"sans-serif-medium\"\r\n                android:paddingLeft=\"70dp\"\r\n                android:paddingRight=\"70dp\"\r\n                android:text=\"Login\"\r\n                android:textAllCaps=\"false\"\r\n                android:background=\"@color/black\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"16sp\" />\r\n\r\n            <!--Register button-->\r\n            <Button\r\n                android:id=\"@+id/l_register_button\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_below=\"@+id/l_login_button\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:fontFamily=\"sans-serif-medium\"\r\n                android:paddingLeft=\"20dp\"\r\n                android:paddingRight=\"20dp\"\r\n                android:background=\"@color/black\"\r\n                android:text=\"Register\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"16sp\" />\r\n\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n</RelativeLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_login.xml	(revision 16be5b829dbc3d1e9f1cbc0cc229d64054af14eb)
--+++ app/src/main/res/layout/activity_login.xml	(date 1603028973198)
--@@ -5,14 +5,17 @@
--     android:layout_width="match_parent"
--     android:layout_height="match_parent"
--     android:animateLayoutChanges="true"
--+    android:background="@drawable/login_background"
--     android:visibility="visible"
--     tools:context=".LoginActivity">
-- 
--+
--     <!--Screen-->
--     <RelativeLayout
---        android:layout_width="wrap_content"
--+        android:layout_width="match_parent"
--         android:layout_height="wrap_content"
---        android:layout_centerInParent="true"
--+        android:layout_alignParentBottom="true"
--+        android:layout_marginBottom="40dp"
--         android:layout_marginLeft="40dp"
--         android:layout_marginRight="40dp">
-- 
--@@ -37,28 +40,33 @@
--                     android:layout_height="wrap_content"
--                     android:orientation="vertical">
-- 
---                    <TextView
---                        android:layout_width="wrap_content"
---                        android:layout_height="wrap_content"
---                        android:fontFamily="sans-serif-light"
---                        android:text="E-mail"
---                        android:textAllCaps="false"
---                        android:textColor="@color/grey"
---                        android:textSize="15sp"
---                        android:textStyle="bold" />
--+
-- 
--                     <EditText
--                         android:id="@+id/l_email"
---                        android:maxLines="1"
---                        android:imeOptions="actionUnspecified"
---                        android:inputType="text"
--+                        android:background="@color/transparent"
--                         android:layout_width="match_parent"
--                         android:layout_height="40dp"
--                         android:layout_marginTop="5dp"
--                         android:fontFamily="sans-serif-light"
--+                        android:imeOptions="actionUnspecified"
--+                        android:inputType="text"
--+                        android:maxLines="1"
--                         android:paddingLeft="15dp"
--                         android:paddingRight="15dp"
---                        android:textSize="15sp" />
--+                        android:textSize="15sp" >
--+                        <TextView
--+                            android:layout_width="wrap_content"
--+                            android:layout_height="wrap_content"
--+                            android:fontFamily="sans-serif-light"
--+                            android:text="E-mail"
--+                            android:textAllCaps="false"
--+                            android:textColor="@color/white"
--+                            android:textSize="15sp"
--+                            android:textStyle="bold" />
--+                    </EditText>
--+
--+
--                 </LinearLayout>
-- 
--                 <!--Password-->
--@@ -80,13 +88,14 @@
-- 
--                     <EditText
--                         android:id="@+id/l_password"
---                        android:maxLines="1"
---                        android:imeOptions="actionUnspecified"
--+                        android:background="@drawable/email_bg"
--                         android:layout_width="match_parent"
--                         android:layout_height="40dp"
--                         android:layout_marginTop="5dp"
--                         android:fontFamily="sans-serif-light"
--+                        android:imeOptions="actionUnspecified"
--                         android:inputType="textPassword"
--+                        android:maxLines="1"
--                         android:paddingLeft="15dp"
--                         android:paddingRight="15dp"
--                         android:textSize="15sp" />
--@@ -99,12 +108,12 @@
--                 android:layout_width="wrap_content"
--                 android:layout_height="20dp"
--                 android:layout_below="@id/l_linlay1"
--+                android:layout_centerHorizontal="true"
--                 android:layout_marginTop="30dp"
---                android:layout_centerHorizontal="true"
--+                android:background="@color/transparent"
--                 android:fontFamily="sans-serif-light"
--                 android:paddingLeft="20dp"
--                 android:paddingRight="20dp"
---                android:background="@color/transparent"
--                 android:text="Did you forget your password?"
--                 android:textAllCaps="false"
--                 android:textColor="@color/black"
--@@ -118,12 +127,12 @@
--                 android:layout_below="@+id/l_forgot_password"
--                 android:layout_centerHorizontal="true"
--                 android:layout_marginTop="20dp"
--+                android:background="@color/black"
--                 android:fontFamily="sans-serif-medium"
--                 android:paddingLeft="70dp"
--                 android:paddingRight="70dp"
--                 android:text="Login"
--                 android:textAllCaps="false"
---                android:background="@color/black"
--                 android:textColor="@color/white"
--                 android:textSize="16sp" />
-- 
--@@ -135,10 +144,10 @@
--                 android:layout_below="@+id/l_login_button"
--                 android:layout_centerHorizontal="true"
--                 android:layout_marginTop="20dp"
--+                android:background="@color/black"
--                 android:fontFamily="sans-serif-medium"
--                 android:paddingLeft="20dp"
--                 android:paddingRight="20dp"
---                android:background="@color/black"
--                 android:text="Register"
--                 android:textAllCaps="false"
--                 android:textColor="@color/white"
--diff --git .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_10_16_2020_10_19_PM__Default_Changelist_.xml
--diff --git .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_10_17_2020_3_10_PM__Default_Changelist_.xml
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43__Default_Changelist_.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2020__10__16__20_43_[Default_Changelist]" date="1602870316873" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2020. 10. 16. 20:43 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_2020__10__16__20_43_[Default_Changelist]/shelved.patch	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-@@ -1,56 +0,0 @@
--Index: .idea/gradle.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/gradle.xml	(revision b1b2ffebf090cbb3efe9b35c68db98c46eb450f8)
--+++ .idea/gradle.xml	(date 1602589615927)
--@@ -1,5 +1,6 @@
-- <?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
--+  <component name="GradleMigrationSettings" migrationVersion="1" />
--   <component name="GradleSettings">
--     <option name="linkedExternalProjectsSettings">
--       <GradleProjectSettings>
--@@ -14,6 +15,7 @@
--           </set>
--         </option>
--         <option name="resolveModulePerSourceSet" value="false" />
--+        <option name="useQualifiedModuleNames" value="true" />
--       </GradleProjectSettings>
--     </option>
--   </component>
--Index: .idea/compiler.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/compiler.xml	(date 1602589838664)
--+++ .idea/compiler.xml	(date 1602589838664)
--@@ -0,0 +1,6 @@
--+<?xml version="1.0" encoding="UTF-8"?>
--+<project version="4">
--+  <component name="CompilerConfiguration">
--+    <bytecodeTargetLevel target="1.8" />
--+  </component>
--+</project>
--\ No newline at end of file
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/misc.xml	(revision b1b2ffebf090cbb3efe9b35c68db98c46eb450f8)
--+++ .idea/misc.xml	(date 1602589838606)
--@@ -1,6 +1,6 @@
-- <?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
---  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
--+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
--     <output url="file://$PROJECT_DIR$/build/classes" />
--   </component>
--   <component name="ProjectType">
-Index: secure.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>windows-1252
-===================================================================
---- secure.properties	(date 1603557933315)
-+++ secure.properties	(date 1603557933315)
-@@ -0,0 +1,1 @@
-+MAPS_API_KEY=AIzaSyC2VfXNcpr7Y_ruva359CV15HAmAZjPziA
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/EventActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.pabs;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.pabs.Adapters.EventRecyclerViewAdapter;\r\nimport com.example.pabs.Models.Event;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\n/**\r\n * Main screen, handles more fragments, events, groups\r\n */\r\n\r\npublic class EventActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener{\r\n\r\n    //firebase\r\n    private DatabaseReference reference;\r\n    private String uID;\r\n\r\n    //events\r\n    List<Event> lstEvent;\r\n\r\n    //drawer\r\n    private DrawerLayout drawer = null;\r\n    private NavigationView navigationView = null;\r\n\r\n    /**\r\n     * On create\r\n     */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_event);\r\n\r\n        //get uid of logged in user\r\n        uID = getIntent().getStringExtra(\"USER\");\r\n\r\n        //firebase database -> get reference to USER table\r\n        reference = FirebaseDatabase.getInstance().getReference().child(\"USER\");\r\n\r\n        //set data for events example\r\n        lstEvent = new ArrayList<>();\r\n\r\n        lstEvent.add(new Event(\"Balette Eloadas\", R.drawable.balette_eloadas));\r\n        lstEvent.add(new Event(\"Football\", R.drawable.football));\r\n        lstEvent.add(new Event(\"Halloween Party\", R.drawable.halloween_party));\r\n        lstEvent.add(new Event(\"Hiking\", R.drawable.hiking));\r\n        lstEvent.add(new Event(\"Party at OFE\", R.drawable.party_at_ofe));\r\n        lstEvent.add(new Event(\"Wedding\", R.drawable.wedding));\r\n        lstEvent.add(new Event(\"Balette Eloadas\", R.drawable.balette_eloadas));\r\n        lstEvent.add(new Event(\"Football\", R.drawable.football));\r\n        lstEvent.add(new Event(\"Halloween Party\", R.drawable.halloween_party));\r\n        lstEvent.add(new Event(\"Hiking\", R.drawable.hiking));\r\n        lstEvent.add(new Event(\"Party at OFE\", R.drawable.party_at_ofe));\r\n        lstEvent.add(new Event(\"Wedding\", R.drawable.wedding));\r\n        lstEvent.add(new Event(\"Balette Eloadas\", R.drawable.balette_eloadas));\r\n        lstEvent.add(new Event(\"Football\", R.drawable.football));\r\n        lstEvent.add(new Event(\"Halloween Party\", R.drawable.halloween_party));\r\n        lstEvent.add(new Event(\"Hiking\", R.drawable.hiking));\r\n        lstEvent.add(new Event(\"Party at OFE\", R.drawable.party_at_ofe));\r\n        lstEvent.add(new Event(\"Wedding\", R.drawable.wedding));\r\n\r\n        //create and set RecyclerView\r\n        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);\r\n        //create Adapter with lstEvent in this context\r\n        EventRecyclerViewAdapter myAdapter = new EventRecyclerViewAdapter(this, lstEvent);\r\n        //separate the Recyclerview to 3 columns\r\n        myRv.setLayoutManager(new GridLayoutManager(this, 3));\r\n        //set adapter for RecyclerView\r\n        myRv.setAdapter(myAdapter);\r\n\r\n        //nav view and drawer\r\n        navigationView = findViewById(R.id.nav_view);\r\n        drawer = findViewById(R.id.drawer_layout);\r\n\r\n        //handle navigation drawer open/close with toggle\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawer, null, R.string.navigation_drawer_open, R.string.navigation_drawer_close){\r\n            /** Called when a drawer has settled in a completely closed state. */\r\n            public void onDrawerClosed(View view) {\r\n                super.onDrawerClosed(view);\r\n                for(int i = 0; i < navigationView.getMenu().size(); ++i)\r\n                    navigationView.getMenu().getItem(i).setChecked(false);\r\n            }\r\n\r\n            /** Called when a drawer has settled in a completely open state. */\r\n            public void onDrawerOpened(View drawerView) {\r\n                super.onDrawerOpened(drawerView);\r\n            }\r\n        };\r\n\r\n        //add toggle to drawer\r\n        drawer.addDrawerListener(toggle);\r\n\r\n        //sync toggle\r\n        toggle.syncState();\r\n\r\n        // Write a string when this client loses connection\r\n        reference.child(uID).child(\"online\").onDisconnect().setValue(\"false\");\r\n    }\r\n\r\n    /**\r\n     * Called on selecting item from navigation list\r\n     */\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.nav_events:\r\n                Toast.makeText(this, \"nav_events\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_calendar:\r\n                Toast.makeText(this, \"nav_calendar\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_groups:\r\n                Toast.makeText(this, \"nav_groups\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_profile:\r\n                Toast.makeText(this, \"nav_profile\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_settings:\r\n                Toast.makeText(this, \"nav_settings\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n\r\n            case R.id.nav_logout:\r\n                Toast.makeText(this, \"nav_logout\", Toast.LENGTH_SHORT).show();\r\n                reference.child(uID).child(\"online\").setValue(\"false\");\r\n                finish();\r\n                break;\r\n\r\n            default:\r\n                Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n\r\n        //close drawer on item clicked\r\n        drawer.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/EventActivity.java	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ app/src/main/java/com/example/pabs/EventActivity.java	(date 1605521595347)
-@@ -3,25 +3,29 @@
- import androidx.annotation.NonNull;
- import androidx.appcompat.app.ActionBarDrawerToggle;
- import androidx.appcompat.app.AppCompatActivity;
--import androidx.appcompat.widget.Toolbar;
- import androidx.core.view.GravityCompat;
- import androidx.drawerlayout.widget.DrawerLayout;
-+import androidx.fragment.app.FragmentManager;
- import androidx.recyclerview.widget.GridLayoutManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
- import android.os.Bundle;
--import android.view.Menu;
--import android.view.MenuInflater;
- import android.view.MenuItem;
-+import android.view.MotionEvent;
- import android.view.View;
--import android.widget.Button;
-+import android.widget.ImageView;
- import android.widget.Toast;
- 
- import com.example.pabs.Adapters.EventRecyclerViewAdapter;
-+import com.example.pabs.Fragments.CreateEventFragment;
-+import com.example.pabs.Models.DatabaseEvent;
- import com.example.pabs.Models.Event;
- import com.google.android.material.navigation.NavigationView;
-+import com.google.firebase.database.DataSnapshot;
-+import com.google.firebase.database.DatabaseError;
- import com.google.firebase.database.DatabaseReference;
- import com.google.firebase.database.FirebaseDatabase;
-+import com.google.firebase.database.ValueEventListener;
- 
- import java.util.ArrayList;
- import java.util.List;
-@@ -33,6 +37,9 @@
- 
- public class EventActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener{
- 
-+    //UI
-+    private ImageView create_event_img_btn;
-+
-     //firebase
-     private DatabaseReference reference;
-     private String uID;
-@@ -40,6 +47,8 @@
-     //events
-     List<Event> lstEvent;
- 
-+    List<DatabaseEvent> lstDatabaseEvent;
-+
-     //drawer
-     private DrawerLayout drawer = null;
-     private NavigationView navigationView = null;
-@@ -61,33 +70,30 @@
-         //set data for events example
-         lstEvent = new ArrayList<>();
- 
--        lstEvent.add(new Event("Balette Eloadas", R.drawable.balette_eloadas));
--        lstEvent.add(new Event("Football", R.drawable.football));
--        lstEvent.add(new Event("Halloween Party", R.drawable.halloween_party));
--        lstEvent.add(new Event("Hiking", R.drawable.hiking));
--        lstEvent.add(new Event("Party at OFE", R.drawable.party_at_ofe));
--        lstEvent.add(new Event("Wedding", R.drawable.wedding));
--        lstEvent.add(new Event("Balette Eloadas", R.drawable.balette_eloadas));
--        lstEvent.add(new Event("Football", R.drawable.football));
--        lstEvent.add(new Event("Halloween Party", R.drawable.halloween_party));
--        lstEvent.add(new Event("Hiking", R.drawable.hiking));
--        lstEvent.add(new Event("Party at OFE", R.drawable.party_at_ofe));
--        lstEvent.add(new Event("Wedding", R.drawable.wedding));
--        lstEvent.add(new Event("Balette Eloadas", R.drawable.balette_eloadas));
--        lstEvent.add(new Event("Football", R.drawable.football));
--        lstEvent.add(new Event("Halloween Party", R.drawable.halloween_party));
--        lstEvent.add(new Event("Hiking", R.drawable.hiking));
--        lstEvent.add(new Event("Party at OFE", R.drawable.party_at_ofe));
--        lstEvent.add(new Event("Wedding", R.drawable.wedding));
-+        //Getting events from database and setting them to recyclerview
-+        DatabaseReference databaseEvents;
-+        databaseEvents = FirebaseDatabase.getInstance().getReference().child("EVENT");
-+
-+        databaseEvents.addValueEventListener(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                clearEvents();
-+                for (DataSnapshot event : snapshot.getChildren()) {
-+                    //Loop 1 to go through all child nodes of users
-+                    String temp= event.child("event_name").getValue().toString();
-+
-+                    Event tempEv = new Event(temp, R.drawable.balette_eloadas);
-+
-+                    addToEventsArray(tempEv);
-+                }
-+                setEvents();
-+            }
- 
--        //create and set RecyclerView
--        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);
--        //create Adapter with lstEvent in this context
--        EventRecyclerViewAdapter myAdapter = new EventRecyclerViewAdapter(this, lstEvent);
--        //separate the Recyclerview to 3 columns
--        myRv.setLayoutManager(new GridLayoutManager(this, 3));
--        //set adapter for RecyclerView
--        myRv.setAdapter(myAdapter);
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
-+
-+            }
-+        });
- 
-         //nav view and drawer
-         navigationView = findViewById(R.id.nav_view);
-@@ -115,8 +121,40 @@
-         //sync toggle
-         toggle.syncState();
- 
--        // Write a string when this client loses connection
-+        // Write a string to database when this client loses connection
-         reference.child(uID).child("online").onDisconnect().setValue("false");
-+
-+        //create event button
-+        create_event_img_btn = findViewById(R.id.a_e_create_event_button);
-+        create_event_img_btn.setOnTouchListener(new View.OnTouchListener() {
-+            @Override
-+            public boolean onTouch(View view, MotionEvent motionEvent) {
-+                if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
-+                    openCreateEventFragment();
-+                }
-+                return false;
-+            }
-+        });
-+
-+    }
-+
-+    public void addToEventsArray(Event tempEv){
-+        lstEvent.add(tempEv);
-+    }
-+
-+    public void clearEvents(){
-+        lstEvent.clear();
-+    }
-+
-+    public void setEvents(){
-+        //create and set RecyclerView
-+        RecyclerView myRv = (RecyclerView) findViewById(R.id.e_recycler_view);
-+        //create Adapter with lstEvent in this context
-+        EventRecyclerViewAdapter myAdapter = new EventRecyclerViewAdapter(this, lstEvent, getSupportFragmentManager());
-+        //separate the Recyclerview to 3 columns
-+        myRv.setLayoutManager(new GridLayoutManager(this, 3));
-+        //set adapter for RecyclerView
-+        myRv.setAdapter(myAdapter);
-     }
- 
-     /**
-@@ -160,4 +198,36 @@
-         drawer.closeDrawer(GravityCompat.START);
-         return true;
-     }
-+
-+
-+    /**
-+     * open create event fragment
-+     */
-+    private void openCreateEventFragment(){
-+        getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace(R.id.fragment_event_container, new CreateEventFragment())
-+                .addToBackStack("CreateEventFragment")
-+                .commit();
-+    }
-+
-+    /**
-+     * Called when the activity is exiting
-+     */
-+    @Override
-+    protected void onDestroy() {
-+        super.onDestroy();
-+        lstEvent.clear();
-+        reference.child(uID).child("online").setValue("false");
-+    }
-+
-+    @Override
-+    protected void onStart() {
-+        super.onStart();
-+        lstEvent.clear();
-+        FragmentManager fm = getSupportFragmentManager();
-+        for(int i = 0; i < fm.getBackStackEntryCount(); ++i) {
-+            fm.popBackStack();
-+        }
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.pabs\">\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    \r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\">\r\n\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity  android:name=\".EventActivity\"/>\r\n\r\n        <activity android:name=\".LoginActivity\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <service\r\n            android:name=\".Fcm.MyFirebaseMessagingService\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ app/src/main/AndroidManifest.xml	(date 1604489152309)
-@@ -3,8 +3,10 @@
-     package="com.example.pabs">
- 
-     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
--    <uses-permission android:name="android.permission.INTERNET" />
--    
-+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
-+    <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES"/>
-+    <uses-permission android:name="android.permission.INTERNET"/>
-+
-     <application
-         android:allowBackup="true"
-         android:icon="@mipmap/ic_launcher"
-@@ -13,6 +15,10 @@
-         android:supportsRtl="true"
-         android:theme="@style/AppTheme.NoActionBar">
- 
-+        <meta-data
-+            android:name="com.google.android.geo.API_KEY"
-+            android:value="@string/maps_api_key" />
-+
-         <activity android:name=".RegisterActivity" />
-         <activity  android:name=".EventActivity"/>
- 
-Index: app/src/main/java/com/example/pabs/HelperClass/DateInputMask.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/HelperClass/DateInputMask.java	(date 1605522843977)
-+++ app/src/main/java/com/example/pabs/HelperClass/DateInputMask.java	(date 1605522843977)
-@@ -0,0 +1,82 @@
-+package com.example.pabs.HelperClass;
-+
-+import android.text.Editable;
-+import android.text.TextWatcher;
-+import android.widget.EditText;
-+
-+import java.util.Calendar;
-+
-+/**
-+ *  Watches text of dates, to make sure the input is a correct date
-+ */
-+
-+public class DateInputMask implements TextWatcher {
-+
-+    private String current = "";
-+    private String ddmmyyyy = "DDMMYYYY";
-+    private Calendar cal = Calendar.getInstance();
-+    private EditText input;
-+
-+    public DateInputMask(EditText input) {
-+        this.input = input;
-+        this.input.addTextChangedListener(this);
-+    }
-+
-+    @Override
-+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-+
-+    }
-+
-+    @Override
-+    public void onTextChanged(CharSequence s, int start, int before, int count) {
-+        if (s.toString().equals(current)) {
-+            return;
-+        }
-+
-+        String clean = s.toString().replaceAll("[^\\d.]|\\.", "");
-+        String cleanC = current.replaceAll("[^\\d.]|\\.", "");
-+
-+        int cl = clean.length();
-+        int sel = cl;
-+        for (int i = 2; i <= cl && i < 6; i += 2) {
-+            sel++;
-+        }
-+        //Fix for pressing delete next to a forward slash
-+        if (clean.equals(cleanC)) sel--;
-+
-+        if (clean.length() < 8){
-+            clean = clean + ddmmyyyy.substring(clean.length());
-+        }else{
-+            //This part makes sure that when we finish entering numbers
-+            //the date is correct, fixing it otherwise
-+            int day  = Integer.parseInt(clean.substring(0,2));
-+            int mon  = Integer.parseInt(clean.substring(2,4));
-+            int year = Integer.parseInt(clean.substring(4,8));
-+
-+            mon = mon < 1 ? 1 : mon > 12 ? 12 : mon;
-+            cal.set(Calendar.MONTH, mon-1);
-+            year = (year<1900)?1900:(year>2100)?2100:year;
-+            cal.set(Calendar.YEAR, year);
-+            // ^ first set year for the line below to work correctly
-+            //with leap years - otherwise, date e.g. 29/02/2012
-+            //would be automatically corrected to 28/02/2012
-+
-+            day = (day > cal.getActualMaximum(Calendar.DATE))? cal.getActualMaximum(Calendar.DATE):day;
-+            clean = String.format("%02d%02d%02d",day, mon, year);
-+        }
-+
-+        clean = String.format("%s/%s/%s", clean.substring(0, 2),
-+                clean.substring(2, 4),
-+                clean.substring(4, 8));
-+
-+        sel = sel < 0 ? 0 : sel;
-+        current = clean;
-+        input.setText(current);
-+        input.setSelection(sel < current.length() ? sel : current.length());
-+    }
-+
-+    @Override
-+    public void afterTextChanged(Editable s) {
-+
-+    }
-+}
-\ No newline at end of file
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'  // Google Services plugin\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.1\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.pabs\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'androidx.recyclerview:recyclerview:1.0.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.3.1'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n\r\n    // Declare the dependency for the Realtime Database library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-database'\r\n\r\n    // Add the dependency for the Firebase SDK for Google Analytics\r\n    // When using the BoM, don't specify versions in Firebase dependencies\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.android.gms:play-services-gcm:17.0.0'\r\n\r\n    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-messaging:20.1.0'\r\n\r\n    ///Navigation menu\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.0'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.0'\r\n    implementation \"androidx.drawerlayout:drawerlayout:1.1.0\"\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ app/build.gradle	(date 1603557992860)
-@@ -12,6 +12,13 @@
-         versionCode 1
-         versionName "1.0"
- 
-+        // Read the API key from ./secure.properties into R.string.maps_api_key
-+        def secureProps = new Properties()
-+        if (file("../secure.properties").exists()) {
-+            file("../secure.properties")?.withInputStream { secureProps.load(it) }
-+        }
-+        resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
-+
-         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
-     }
- 
-@@ -58,4 +65,6 @@
-     implementation 'androidx.navigation:navigation-ui:2.3.0'
-     implementation "androidx.drawerlayout:drawerlayout:1.1.0"
- 
-+    //AutoCompletePlaceApi
-+    implementation 'com.google.android.libraries.places:places:2.2.0'
- }
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_event.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_event.xml	(date 1605522211411)
-+++ app/src/main/res/layout/fragment_event.xml	(date 1605522211411)
-@@ -0,0 +1,119 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<!--Event skeleton-->
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context=".Fragments.EventFragment"
-+    android:id="@+id/fragment_event_container">
-+
-+    <RelativeLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent">
-+
-+        <!--Image-->
-+        <ImageView
-+            android:id="@+id/fe_event_image"
-+            android:layout_width="match_parent"
-+            android:layout_height="250dp"
-+            android:scaleType="fitXY"
-+            android:src="@drawable/event_header_example"/>
-+
-+        <!--Container-->
-+        <RelativeLayout
-+            android:layout_width="match_parent"
-+            android:layout_height="match_parent"
-+            android:padding="15dp"
-+            android:layout_below="@+id/fe_event_image">
-+
-+            <!--Event name-->
-+            <TextView
-+                android:id="@+id/fe_event_name"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:text="Event Name"
-+                android:textSize="22sp"/>
-+
-+            <!--Date Start-->
-+            <TextView
-+                android:id="@+id/fe_event_date_start"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/fe_event_name"
-+                android:layout_marginTop="30dp"
-+                android:text="10/26/2020"
-+                android:textSize="16sp"/>
-+
-+            <!--Date End-->
-+            <TextView
-+                android:id="@+id/fe_event_date_end"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/fe_event_name"
-+                android:layout_alignLeft="@+id/fe_event_date_start"
-+                android:layout_marginLeft="125dp"
-+                android:layout_marginTop="30dp"
-+                android:text="13/27/2021"
-+                android:textSize="16sp" />
-+
-+            <!--Description-->
-+            <TextView
-+                android:id="@+id/fe_event_description"
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/fe_event_date_start"
-+                android:layout_toLeftOf="@+id/fe_map_layout"
-+                android:paddingRight="5dp"
-+                android:layout_marginTop="30dp"
-+                android:text="Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello"
-+                android:textSize="22sp"/>
-+
-+            <!--Map Container-->
-+            <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+                xmlns:tools="http://schemas.android.com/tools"
-+                android:layout_width="150dp"
-+                android:layout_height="150dp"
-+                android:layout_alignParentRight="true"
-+                android:id="@+id/fe_map_layout">
-+
-+                <!--Map View-->
-+                <com.google.android.gms.maps.MapView android:id="@+id/fe_map"
-+                    android:layout_width="match_parent"
-+                    android:layout_height="match_parent" />
-+
-+            </LinearLayout>
-+
-+
-+            <!--Map location-->
-+            <TextView
-+                android:id="@+id/fe_location_text"
-+                android:layout_width="150dp"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/fe_map_layout"
-+                android:layout_alignParentRight="true"
-+                android:text="Location name"
-+                android:textSize="12sp"/>
-+
-+            <!--(+) button-->
-+            <Button
-+                android:id="@+id/fe_plus_button"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_alignParentRight="true"
-+                android:layout_alignParentBottom="true"
-+                android:text="+"/>
-+
-+            <!--back button-->
-+            <Button
-+                android:id="@+id/fe_back_button"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_alignParentLeft="true"
-+                android:layout_alignParentBottom="true"
-+                android:text="Back"/>
-+
-+        </RelativeLayout>
-+
-+    </RelativeLayout>
-+
-+</RelativeLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Models/DatabaseEvent.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Models/DatabaseEvent.java	(date 1603626534305)
-+++ app/src/main/java/com/example/pabs/Models/DatabaseEvent.java	(date 1603626534305)
-@@ -0,0 +1,152 @@
-+package com.example.pabs.Models;
-+
-+import java.util.List;
-+
-+public class DatabaseEvent {
-+    String description;
-+    String start_date;
-+    String end_date;
-+    String reminder;
-+    String repetition;
-+    String inv_code;
-+    String event_name;
-+    double location_x;
-+    double location_y;
-+    String location_name;
-+    Long thumbnail;
-+    String priv_pub;
-+    List<String> staff_members;
-+    String owner_id;
-+
-+
-+    public DatabaseEvent(){};
-+
-+    public DatabaseEvent(String description, String start_date, String end_date, String reminder, String repetition, String inv_code, String event_name, double location_x, double location_y, String location_name, Long thumbnail, String priv_pub, List<String> staff_members, String user_id) {
-+        this.description = description;
-+        this.start_date = start_date;
-+        this.end_date = end_date;
-+        this.reminder = reminder;
-+        this.repetition = repetition;
-+        this.inv_code = inv_code;
-+        this.event_name = event_name;
-+        this.location_x = location_x;
-+        this.location_y = location_y;
-+        this.location_name = location_name;
-+        this.thumbnail = thumbnail;
-+        this.priv_pub = priv_pub;
-+        this.staff_members = staff_members;
-+        this.owner_id = owner_id;
-+    }
-+
-+    public String getOwner_id() {
-+        return owner_id;
-+    }
-+
-+    public void setOwner_id(String owner_id) {
-+        this.owner_id = owner_id;
-+    }
-+
-+    public String getDescription() {
-+        return description;
-+    }
-+
-+    public void setDescription(String description) {
-+        this.description = description;
-+    }
-+
-+    public String getStart_date() {
-+        return start_date;
-+    }
-+
-+    public void setStart_date(String start_date) {
-+        this.start_date = start_date;
-+    }
-+
-+    public String getEnd_date() {
-+        return end_date;
-+    }
-+
-+    public void setEnd_date(String end_date) {
-+        this.end_date = end_date;
-+    }
-+
-+    public String getReminder() {
-+        return reminder;
-+    }
-+
-+    public void setReminder(String reminder) {
-+        this.reminder = reminder;
-+    }
-+
-+    public String getRepetition() {
-+        return repetition;
-+    }
-+
-+    public void setRepetition(String repetition) {
-+        this.repetition = repetition;
-+    }
-+
-+    public String getInv_code() {
-+        return inv_code;
-+    }
-+
-+    public void setInv_code(String inv_code) {
-+        this.inv_code = inv_code;
-+    }
-+
-+    public String getEvent_name() {
-+        return event_name;
-+    }
-+
-+    public void setEvent_name(String event_name) {
-+        this.event_name = event_name;
-+    }
-+
-+    public double getLocation_x() {
-+        return location_x;
-+    }
-+
-+    public void setLocation_x(double location_x) {
-+        this.location_x = location_x;
-+    }
-+
-+    public double getLocation_y() {
-+        return location_y;
-+    }
-+
-+    public void setLocation_y(double location_y) {
-+        this.location_y = location_y;
-+    }
-+
-+    public String getLocation_name() {
-+        return location_name;
-+    }
-+
-+    public void setLocation_name(String location_name) {
-+        this.location_name = location_name;
-+    }
-+
-+    public Long getThumbnail() {
-+        return thumbnail;
-+    }
-+
-+    public void setThumbnail(Long thumbnail) {
-+        this.thumbnail = thumbnail;
-+    }
-+
-+    public String getPriv_pub() {
-+        return priv_pub;
-+    }
-+
-+    public void setPriv_pub(String priv_pub) {
-+        this.priv_pub = priv_pub;
-+    }
-+
-+    public List<String> getStaff_members() {
-+        return staff_members;
-+    }
-+
-+    public void setStaff_members(List<String> staff_members) {
-+        this.staff_members = staff_members;
-+    }
-+}
-Index: app/src/main/java/com/example/pabs/Fragments/EventFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/EventFragment.java	(date 1605523066545)
-+++ app/src/main/java/com/example/pabs/Fragments/EventFragment.java	(date 1605523066545)
-@@ -0,0 +1,195 @@
-+package com.example.pabs.Fragments;
-+
-+import android.os.Bundle;
-+
-+import androidx.fragment.app.Fragment;
-+import androidx.fragment.app.FragmentManager;
-+
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.Button;
-+import android.widget.TextView;
-+import android.widget.Toast;
-+
-+import com.example.pabs.Models.DatabaseEvent;
-+import com.example.pabs.R;
-+import com.google.android.gms.maps.CameraUpdateFactory;
-+import com.google.android.gms.maps.GoogleMap;
-+import com.google.android.gms.maps.MapView;
-+import com.google.android.gms.maps.OnMapReadyCallback;
-+import com.google.android.gms.maps.SupportMapFragment;
-+import com.google.android.gms.maps.model.LatLng;
-+import com.google.android.gms.maps.model.MarkerOptions;
-+
-+/**
-+ * Handle an event
-+ */
-+
-+public class EventFragment extends Fragment implements OnMapReadyCallback {
-+
-+    //UI
-+    private Button back_button;
-+    private View containerView;
-+
-+    private MapView mapView;
-+
-+    private TextView event_name_tv;
-+    private TextView event_date_start_tv;
-+    private TextView event_date_end_tv;
-+    private TextView event_description_tv;
-+    private TextView location_text_tv;
-+
-+    //map
-+    private GoogleMap mMap;
-+
-+    //database event
-+    private DatabaseEvent databaseEvent;
-+
-+    /**
-+     * Constructor
-+     */
-+    public EventFragment(DatabaseEvent dbE) {
-+        databaseEvent = dbE;
-+    }
-+
-+    /**
-+     * On Create
-+     */
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+    }
-+
-+    /**
-+     * On Create View
-+     */
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-+                             Bundle savedInstanceState) {
-+        // Inflate the layout for this fragment
-+        View view = inflater.inflate(R.layout.fragment_event, container, false);
-+        containerView = getActivity().findViewById(R.id.activity_event_layout);
-+
-+        //init UI
-+        event_name_tv = view.findViewById(R.id.fe_event_name);
-+        event_date_start_tv = view.findViewById(R.id.fe_event_date_start);
-+        event_date_end_tv = view.findViewById(R.id.fe_event_date_end);
-+        event_description_tv = view.findViewById(R.id.fe_event_description);
-+        location_text_tv = view.findViewById(R.id.fe_location_text);
-+
-+        //setting text in UI with databaseEvent data
-+        event_name_tv.setText(databaseEvent.getEvent_name());
-+        event_date_start_tv.setText(databaseEvent.getStart_date());
-+        event_date_end_tv.setText(databaseEvent.getEnd_date());
-+        event_description_tv.setText(databaseEvent.getDescription());
-+        location_text_tv.setText(databaseEvent.getLocation_name());
-+
-+        //back button
-+        back_button = view.findViewById(R.id.fe_back_button);
-+
-+        back_button.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                //getActivity().getSupportFragmentManager().popBackStack("EventFragment", 1);
-+                //clear all backstack
-+                FragmentManager fm = getActivity().getSupportFragmentManager();
-+                for(int i = 0; i < fm.getBackStackEntryCount(); ++i) {
-+                    fm.popBackStack();
-+                }
-+            }
-+        });
-+
-+        // Gets the MapView from the XML layout and creates it
-+        mapView = (MapView) view.findViewById(R.id.fe_map);
-+        mapView.onCreate(savedInstanceState);
-+
-+        //Sync Map View
-+        mapView.getMapAsync(this);
-+
-+        return view;
-+    }
-+
-+    /**
-+     * onMapReady
-+     */
-+    @Override
-+    public void onMapReady(GoogleMap googleMap) {
-+
-+        //get lat lng from databaseEvent
-+        LatLng eventLocation = new LatLng(databaseEvent.getLocation_x(), databaseEvent.getLocation_y());
-+
-+        //init mMap
-+        mMap = googleMap;
-+
-+        //add marker to map to location from databaseEvent
-+        mMap.addMarker(new MarkerOptions()
-+                .position(eventLocation)
-+                .title(databaseEvent.getLocation_name()));
-+        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(eventLocation, 10));
-+
-+        //set on Map Click Listener
-+        mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
-+            @Override
-+            public void onMapClick(LatLng latLng) {
-+                Toast.makeText(getActivity(), "Clicked on map", Toast.LENGTH_SHORT).show();
-+            }
-+        });
-+    }
-+
-+    /**
-+     * onStart
-+     */
-+    @Override
-+    public void onStart() {
-+        super.onStart();
-+        //Hiding the activity layout
-+        containerView.setVisibility(View.GONE);
-+    }
-+
-+    /**
-+     * onStop
-+     */
-+    @Override
-+    public void onStop() {
-+        super.onStop();
-+        containerView.setVisibility(View.VISIBLE);
-+    }
-+
-+    /**
-+     * onResume
-+     */
-+    @Override
-+    public void onResume() {
-+        mapView.onResume();
-+        super.onResume();
-+    }
-+
-+    /**
-+     * on fragment stop
-+     */
-+    @Override
-+    public void onPause() {
-+        super.onPause();
-+        mapView.onPause();
-+    }
-+
-+    /**
-+     * onDestroy
-+     */
-+    @Override
-+    public void onDestroy() {
-+        super.onDestroy();
-+        mapView.onDestroy();
-+    }
-+
-+    /**
-+     * onLowMemory
-+     */
-+    @Override
-+    public void onLowMemory() {
-+        super.onLowMemory();
-+        mapView.onLowMemory();
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/pabs/Fragments/CreateEventFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/example/pabs/Fragments/CreateEventFragment.java	(date 1605522800647)
-+++ app/src/main/java/com/example/pabs/Fragments/CreateEventFragment.java	(date 1605522800647)
-@@ -0,0 +1,276 @@
-+package com.example.pabs.Fragments;
-+
-+import android.content.Context;
-+import android.location.Address;
-+import android.location.Geocoder;
-+import android.os.Bundle;
-+
-+import androidx.fragment.app.Fragment;
-+
-+import android.text.TextUtils;
-+import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.ArrayAdapter;
-+import android.widget.Button;
-+import android.widget.EditText;
-+import android.widget.FrameLayout;
-+import android.widget.Spinner;
-+import android.widget.Toast;
-+
-+import com.example.pabs.HelperClass.DateInputMask;
-+import com.example.pabs.Models.DatabaseEvent;
-+import com.example.pabs.R;
-+import com.google.android.gms.maps.model.LatLng;
-+import com.google.firebase.auth.FirebaseAuth;
-+import com.google.firebase.auth.FirebaseUser;
-+import com.google.firebase.database.DatabaseReference;
-+import com.google.firebase.database.FirebaseDatabase;
-+
-+import java.io.IOException;
-+import java.util.ArrayList;
-+import java.util.List;
-+import java.util.Locale;
-+
-+/**
-+ * Creates a new event
-+ */
-+
-+public class CreateEventFragment extends Fragment {
-+
-+    private static final String TAG = "CreateEventFragment";
-+
-+    //UI
-+    private View containerView;
-+    private Button back_button;
-+    private Button next_button;
-+    private EditText start_date_et;
-+    private EditText end_date_et;
-+    private EditText name_et;
-+    private Spinner dropdown;
-+    private EditText location_et;
-+    private FrameLayout FragmentEventContainer;
-+
-+    //firebase
-+    private DatabaseReference reference = null;
-+
-+    /**
-+     * on fragment created
-+     */
-+    @Override
-+    public void onCreate(Bundle savedInstanceState) {
-+        super.onCreate(savedInstanceState);
-+
-+    }
-+
-+    /**
-+     * on view created
-+     */
-+    @Override
-+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-+                             Bundle savedInstanceState) {
-+        // Inflate the layout for this fragment
-+        View CreateEventView = inflater.inflate(R.layout.fragment_create_event, container, false);
-+        containerView = getActivity().findViewById(R.id.activity_event_layout);
-+        //
-+        FragmentEventContainer = getActivity().findViewById(R.id.fragment_container);
-+
-+        //back button
-+        back_button = CreateEventView.findViewById(R.id.c_e_back_button);
-+
-+
-+        back_button.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                getActivity().getSupportFragmentManager().popBackStack("CreateEventFragment", 1);
-+            }
-+        });
-+
-+        //date edit text
-+        //start date
-+        start_date_et = CreateEventView.findViewById(R.id.c_e_event_start_date_edit);
-+
-+        new DateInputMask(start_date_et);
-+
-+        //end date
-+        end_date_et = CreateEventView.findViewById(R.id.c_e_event_end_date_edit);
-+
-+        new DateInputMask(end_date_et);
-+
-+        //spinner
-+        //get the spinner from the xml.
-+        dropdown = CreateEventView.findViewById(R.id.c_e_public_private_spinner);
-+        //create a list of items for the spinner.
-+        String[] items = new String[]{"Public", "Private"};
-+        //create an adapter to describe how the items are displayed, adapters are used in several places in android.
-+        //There are multiple variations of this, but this is the basic variant.
-+        ArrayAdapter<String> adapter = new ArrayAdapter<>(getActivity(), android.R.layout.simple_spinner_dropdown_item, items);
-+        //set the spinners adapter to the previously created one.
-+        dropdown.setAdapter(adapter);
-+
-+        //location
-+        location_et = CreateEventView.findViewById(R.id.c_e_event_location_edit);
-+
-+        //event name
-+        name_et = CreateEventView.findViewById(R.id.c_e_event_name_edit);
-+
-+        //firebase database -> get reference to USER table
-+        reference = FirebaseDatabase.getInstance().getReference().child("EVENT");
-+
-+        //next button
-+        next_button = CreateEventView.findViewById(R.id.c_e_next_button);
-+        next_button.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+
-+                //if location field is empty
-+                if (!TextUtils.isEmpty(location_et.getText().toString())) {
-+                    //getting lat and lng from location
-+                    LatLng latLng = getLocationFromAddress(getActivity(), location_et.getText().toString());
-+
-+                    //arraylist of Strings which will contain staff members
-+                    ArrayList<String> arrayList = new ArrayList<String>();
-+
-+                    arrayList.add("asd");
-+                    arrayList.add("pepe");
-+                    arrayList.add("asdasdad");
-+
-+                    //getting user logged in
-+                    FirebaseUser fireBaseUser = FirebaseAuth.getInstance().getCurrentUser();
-+
-+                    //check for empty fields
-+                    if (!TextUtils.isEmpty(name_et.getText().toString()) && !TextUtils.isEmpty(start_date_et.getText().toString()) && !TextUtils.isEmpty(end_date_et.getText().toString())) {
-+                        //new Database created from field contents written in by user
-+                        DatabaseEvent databaseEvent = new DatabaseEvent();
-+                        databaseEvent.setLocation_x(latLng.latitude);
-+                        databaseEvent.setLocation_y(latLng.longitude);
-+                        databaseEvent.setEvent_name(name_et.getText().toString());
-+                        databaseEvent.setLocation_name(location_et.getText().toString());
-+                        databaseEvent.setStart_date(start_date_et.getText().toString());
-+                        databaseEvent.setEnd_date(end_date_et.getText().toString());
-+                        databaseEvent.setPriv_pub(dropdown.getSelectedItem().toString());
-+                        databaseEvent.setStaff_members(arrayList);
-+                        databaseEvent.setOwner_id(fireBaseUser.getUid());
-+
-+                        //pushing databaseEvent to database
-+                        reference.push().setValue(databaseEvent);
-+
-+                        //open event
-+                        openEvent(databaseEvent);
-+                    }
-+
-+                    Log.d(TAG, "onClick: " + latLng);
-+                    if(latLng != null){
-+                        getAddress(latLng.latitude, latLng.longitude);
-+                    }
-+
-+                }
-+                else{
-+                    Toast.makeText(getActivity(), "Empty Fields!", Toast.LENGTH_SHORT).show();
-+                }
-+            }
-+        });
-+
-+        //return view
-+        return CreateEventView;
-+    }
-+
-+
-+    /**
-+     * open EventFragment with Data of created event
-+     */
-+    public void openEvent(DatabaseEvent databaseEvent){
-+        getActivity().getSupportFragmentManager()
-+                .beginTransaction()
-+                .replace( R.id.fragment_event_container , new EventFragment(databaseEvent))
-+                .addToBackStack("EventFragment")
-+                .commit();
-+    }
-+
-+
-+    /**
-+     * Get Address from location
-+     */
-+    public void getAddress(double lat, double lng) {
-+        try {
-+            //init
-+            Geocoder geo = new Geocoder(getActivity().getApplicationContext(), Locale.getDefault());
-+            //get location address from lat lng
-+            List<Address> addresses = geo.getFromLocation(lat, lng, 5);
-+            if (addresses.isEmpty()) {
-+                Log.d(TAG, "Waiting for Location");
-+            }
-+            else {
-+                if (addresses.size() > 0) {
-+                    //if location from lat lng was found write address
-+                    Log.d(TAG, addresses.get(0).getAddressLine(0) + ", " + addresses.get(0).getFeatureName() + ", " + addresses.get(0).getLocality() +", " + addresses.get(0).getAdminArea() + ", " + addresses.get(0).getCountryName());
-+                }
-+            }
-+        }
-+        catch(Exception e){
-+            //if location lat lng was not found
-+            Log.d(TAG, "No Location Name Found");
-+        }
-+    }
-+
-+    /**
-+     * Get Location From Address
-+     */
-+    public LatLng getLocationFromAddress(Context context, String strAddress) {
-+
-+        //init
-+        Geocoder coder = new Geocoder(context);
-+        List<Address> address;
-+        LatLng p1 = null;
-+
-+        try {
-+            // May throw an IOException
-+
-+            //getting first 5 results of address
-+            address = coder.getFromLocationName(strAddress, 5);
-+            if (address == null) {
-+                return null;
-+            }
-+
-+            if(address.size() < 1)
-+            {
-+                //if location not found
-+                Toast.makeText(context, "Invalid Location", Toast.LENGTH_SHORT).show();
-+            }
-+            else
-+            {
-+                //get lat lng from location
-+                Address location = address.get(0);
-+                p1 = new LatLng(location.getLatitude(), location.getLongitude() );
-+            }
-+
-+
-+        } catch (IOException ex) {
-+
-+            ex.printStackTrace();
-+        }
-+
-+        //return lat lng of location
-+        return p1;
-+    }
-+
-+    /**
-+     * on fragment start
-+     */
-+    @Override
-+    public void onStart() {
-+        super.onStart();
-+        //Hiding the activity layout
-+        containerView.setVisibility(View.GONE);
-+    }
-+
-+    /**
-+     * on fragment stop
-+     */
-+    @Override
-+    public void onStop() {
-+        super.onStop();
-+        containerView.setVisibility(View.VISIBLE);
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/res/layout/fragment_create_event.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_create_event.xml	(date 1605522157439)
-+++ app/src/main/res/layout/fragment_create_event.xml	(date 1605522157439)
-@@ -0,0 +1,161 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<!--Creating event-->
-+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context=".Fragments.CreateEventFragment"
-+    android:id="@+id/fragment_event_container">
-+
-+        <!--Container-->
-+        <RelativeLayout
-+            android:layout_centerInParent="true"
-+            android:layout_margin="25dp"
-+            android:layout_width="match_parent"
-+            android:layout_height="match_parent">
-+
-+            <!--Create Event Text-->
-+            <TextView
-+                android:id="@+id/c_e_create_event_text"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_alignParentTop="true"
-+                android:layout_centerHorizontal="true"
-+                android:layout_marginBottom="100dp"
-+                android:text="Create Event"
-+                android:textSize="30sp"
-+                android:fontFamily="@font/roboto_thin" />
-+
-+            <!--Event Name Text-->
-+            <TextView
-+                android:id="@+id/c_e_event_name_text"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_above="@+id/c_e_event_name_edit"
-+                android:text="Event name"
-+                android:textSize="22sp"
-+                android:fontFamily="@font/roboto_thin" />
-+
-+            <!--Event Name Edit text-->
-+            <EditText
-+                android:id="@+id/c_e_event_name_edit"
-+                android:singleLine="true"
-+                android:maxLines="1"
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:layout_marginBottom="60dp"
-+                android:layout_below="@+id/c_e_create_event_text"
-+                android:layout_centerHorizontal="true" />
-+
-+            <!--Event Location Text-->
-+            <TextView
-+                android:id="@+id/c_e_event_location_text"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_above="@+id/c_e_event_location_edit"
-+                android:text="Location"
-+                android:textSize="22sp"
-+                android:fontFamily="@font/roboto_thin" />
-+
-+            <!--Event Location Edit Text-->
-+            <EditText
-+                android:id="@+id/c_e_event_location_edit"
-+                android:singleLine="true"
-+                android:maxLines="1"
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:layout_marginBottom="60dp"
-+                android:layout_below="@+id/c_e_event_name_edit"
-+                android:layout_centerHorizontal="true" />
-+
-+            <!--Event End Date Text-->
-+            <TextView
-+                android:id="@+id/c_e_event_date_text2"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_above="@+id/c_e_event_end_date_edit"
-+                android:text="End Date"
-+                android:layout_alignLeft="@+id/c_e_event_end_date_edit"
-+                android:textSize="22sp"
-+                android:fontFamily="@font/roboto_thin" />
-+
-+            <!--Event End Date Edit Text-->
-+            <EditText
-+                android:id="@+id/c_e_event_end_date_edit"
-+                android:singleLine="true"
-+                android:maxLines="1"
-+                android:layout_width="150dp"
-+                android:layout_alignParentRight="true"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/c_e_event_location_edit"
-+                android:layout_centerHorizontal="true"
-+                android:layout_marginBottom="40dp"
-+                />
-+
-+            <!--Event End Date Text-->
-+            <TextView
-+                android:id="@+id/c_e_event_start_date_text"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_above="@+id/c_e_event_start_date_edit"
-+                android:text="Start Date"
-+                android:textSize="22sp"
-+                android:fontFamily="@font/roboto_thin" />
-+
-+            <!--Event Start Date Edit Text-->
-+            <EditText
-+                android:id="@+id/c_e_event_start_date_edit"
-+                android:singleLine="true"
-+                android:maxLines="1"
-+                android:layout_width="150dp"
-+                android:layout_alignParentLeft="true"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/c_e_event_location_edit"
-+                android:layout_centerHorizontal="true"
-+                android:layout_marginBottom="40dp"
-+                />
-+
-+            <!--Public Private Text-->
-+            <TextView
-+                android:id="@+id/c_e_public_private_text"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_below="@+id/c_e_event_start_date_edit"
-+                android:layout_alignParentLeft="true"
-+                android:layout_centerHorizontal="true"
-+                android:fontFamily="@font/roboto_thin"
-+                android:text="Public/Private:"
-+                android:textSize="22sp" />
-+
-+            <!--Spinner For Selecting public/private-->
-+            <Spinner
-+                android:id="@+id/c_e_public_private_spinner"
-+                android:overlapAnchor="false"
-+                android:layout_width="140dp"
-+                android:layout_height="40dp"
-+                android:dropDownWidth="120dp"
-+                android:layout_marginRight="50dp"
-+                android:spinnerMode="dropdown"
-+                android:background="@android:drawable/btn_dropdown"
-+                android:layout_toRightOf="@+id/c_e_public_private_text"
-+                android:layout_below="@+id/c_e_event_start_date_edit"/>
-+
-+            <!--Next Button-->
-+            <Button
-+                android:id="@+id/c_e_next_button"
-+                android:text="Next"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_alignParentRight="true"
-+                android:layout_alignParentBottom="true"/>
-+
-+            <!--Back Button-->
-+            <Button
-+                android:id="@+id/c_e_back_button"
-+                android:text="Back"
-+                android:layout_width="wrap_content"
-+                android:layout_height="wrap_content"
-+                android:layout_alignParentLeft="true"
-+                android:layout_alignParentBottom="true"/>
-+        </RelativeLayout>
-+</RelativeLayout>
-Index: app/src/main/res/layout/activity_login.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:animateLayoutChanges=\"true\"\r\n    android:background=\"@drawable/login_background\">\r\n    android:visibility=\"visible\"\r\n    tools:context=\".LoginActivity\">\r\n\r\n    <!-- Draw your view whatever you want to draw -->\r\n    <FrameLayout\r\n        android:id=\"@+id/fragment_container\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" />\r\n\r\n    <!--Screen-->\r\n    <RelativeLayout\r\n        android:id=\"@+id/ActivityLoginLayout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginLeft=\"40dp\"\r\n        android:layout_marginRight=\"40dp\"\r\n        android:padding=\"10dp\">\r\n\r\n        <!--E-mail+Password+Buttons-->\r\n        <RelativeLayout\r\n            android:id=\"@+id/l_rellay1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:visibility=\"visible\">\r\n\r\n            <!--E-mail+Password-->\r\n            <LinearLayout\r\n                android:id=\"@+id/l_linlay1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <!--E-mail-->\r\n                <EditText\r\n                    android:id=\"@+id/l_email\"\r\n                    android:maxLines=\"1\"\r\n                    android:imeOptions=\"actionNext\"\r\n                    android:nextFocusDown=\"@+id/l_login_button\"\r\n                    android:inputType=\"text\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@drawable/email_bg\"\r\n                    android:drawableLeft=\"@drawable/member_ic\"\r\n                    android:drawablePadding=\"10dip\"\r\n                    android:ems=\"10\"\r\n                    android:fontFamily=\"@font/roboto_thin\"\r\n                    android:layout_marginBottom=\"20dp\"\r\n                    android:hint=\"e-mail\"\r\n                    android:padding=\"15dp\"\r\n                    android:textColorHint=\"#000000\"\r\n                    android:singleLine=\"true\"/>\r\n\r\n                <!--Password-->\r\n                <EditText\r\n                    android:id=\"@+id/l_password\"\r\n                    android:maxLines=\"1\"\r\n                    android:imeOptions=\"actionNext\"\r\n                    android:nextFocusDown=\"@+id/l_signup_button\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"50dp\"\r\n                    android:background=\"@drawable/email_bg\"\r\n                    android:drawableLeft=\"@drawable/lock_ic\"\r\n                    android:drawablePadding=\"10dip\"\r\n                    android:ems=\"10\"\r\n                    android:fontFamily=\"@font/roboto_thin\"\r\n                    android:hint=\"password\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:padding=\"15dp\"\r\n                    android:textColorHint=\"#000000\"\r\n                    android:textSize=\"18sp\"\r\n                    android:singleLine=\"true\"/>\r\n\r\n            </LinearLayout>\r\n\r\n\r\n            <!--Forgot your password button-->\r\n            <Button\r\n                android:id=\"@+id/l_forgot_password\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_below=\"@id/l_linlay1\"\r\n                android:background=\"@color/transparent\"\r\n                android:text=\"Forgot your password?\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#FFFFFF\"\r\n                android:textSize=\"14sp\" />\r\n\r\n            <!--Log In button-->\r\n            <Button\r\n                android:id=\"@+id/l_login_button\"\r\n                android:layout_width=\"160dp\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_below=\"@id/l_linlay1\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_marginTop=\"60dp\"\r\n                android:fontFamily=\"sans-serif-medium\"\r\n                android:background=\"@drawable/login_button\"\r\n                android:radius=\"60dp\"\r\n                android:text=\"Log In\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#92129D\"\r\n                android:textSize=\"24sp\" />\r\n\r\n            <!--Don’t have an account? Create Button-->\r\n            <Button\r\n                android:id=\"@+id/l_register_button\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"20dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_below=\"@id/l_login_button\"\r\n                android:background=\"@color/transparent\"\r\n                android:text=\"Don’t have an account? Create\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#FFFFFF\"\r\n                android:textSize=\"14sp\"  />\r\n\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_login.xml	(revision 785d0f44c9d07d5f7a4b789006c2b62f13df2269)
-+++ app/src/main/res/layout/activity_login.xml	(date 1604299911748)
-@@ -46,6 +46,7 @@
-                     android:imeOptions="actionNext"
-                     android:nextFocusDown="@+id/l_login_button"
-                     android:inputType="text"
-+                    android:text="kutya@gmail.com"
-                     android:layout_width="wrap_content"
-                     android:layout_height="50dp"
-                     android:background="@drawable/email_bg"
-@@ -61,6 +62,7 @@
- 
-                 <!--Password-->
-                 <EditText
-+                    android:text="123456"
-                     android:id="@+id/l_password"
-                     android:maxLines="1"
-                     android:imeOptions="actionNext"
